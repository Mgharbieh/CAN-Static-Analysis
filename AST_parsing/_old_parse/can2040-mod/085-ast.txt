can2040-mod-src\can2040.c

|CursorKind.TRANSLATION_UNIT: src\can2040.c (Line: 0, Col: 0)
|—CursorKind.TYPEDEF_DECL: uintptr_t (Line: 61, Col: 35)
|—CursorKind.TYPEDEF_DECL: va_list (Line: 72, Col: 23)
|—CursorKind.FUNCTION_DECL: __va_start(va_list *, ...) (Line: 155, Col: 18)
|——CursorKind.PARM_DECL:  (Line: 155, Col: 38)
|———CursorKind.TYPE_REF: va_list (Line: 155, Col: 29)
|—CursorKind.TYPEDEF_DECL: size_t (Line: 188, Col: 30)
|—CursorKind.TYPEDEF_DECL: ptrdiff_t (Line: 189, Col: 30)
|—CursorKind.TYPEDEF_DECL: intptr_t (Line: 190, Col: 30)
|—CursorKind.TYPEDEF_DECL: __vcrt_bool (Line: 204, Col: 19)
|—CursorKind.TYPEDEF_DECL: wchar_t (Line: 223, Col: 28)
|—CursorKind.FUNCTION_DECL: __security_init_cookie() (Line: 390, Col: 18)
|—CursorKind.FUNCTION_DECL: __security_check_cookie(uintptr_t) (Line: 399, Col: 22)
|——CursorKind.PARM_DECL: _StackCookie (Line: 399, Col: 61)
|———CursorKind.TYPE_REF: uintptr_t (Line: 399, Col: 51)
|—CursorKind.FUNCTION_DECL: __report_gsfailure(uintptr_t) (Line: 400, Col: 43)
|——CursorKind.PARM_DECL: _StackCookie (Line: 400, Col: 77)
|———CursorKind.TYPE_REF: uintptr_t (Line: 400, Col: 67)
|—CursorKind.VAR_DECL: __security_cookie (Line: 404, Col: 18)
|——CursorKind.TYPE_REF: uintptr_t (Line: 404, Col: 8)
|—CursorKind.TYPEDEF_DECL: int8_t (Line: 18, Col: 28)
|—CursorKind.TYPEDEF_DECL: int16_t (Line: 19, Col: 28)
|—CursorKind.TYPEDEF_DECL: int32_t (Line: 20, Col: 28)
|—CursorKind.TYPEDEF_DECL: int64_t (Line: 21, Col: 28)
|—CursorKind.TYPEDEF_DECL: uint8_t (Line: 22, Col: 28)
|—CursorKind.TYPEDEF_DECL: uint16_t (Line: 23, Col: 28)
|—CursorKind.TYPEDEF_DECL: uint32_t (Line: 24, Col: 28)
|—CursorKind.TYPEDEF_DECL: uint64_t (Line: 25, Col: 28)
|—CursorKind.TYPEDEF_DECL: int_least8_t (Line: 27, Col: 28)
|—CursorKind.TYPEDEF_DECL: int_least16_t (Line: 28, Col: 28)
|—CursorKind.TYPEDEF_DECL: int_least32_t (Line: 29, Col: 28)
|—CursorKind.TYPEDEF_DECL: int_least64_t (Line: 30, Col: 28)
|—CursorKind.TYPEDEF_DECL: uint_least8_t (Line: 31, Col: 28)
|—CursorKind.TYPEDEF_DECL: uint_least16_t (Line: 32, Col: 28)
|—CursorKind.TYPEDEF_DECL: uint_least32_t (Line: 33, Col: 28)
|—CursorKind.TYPEDEF_DECL: uint_least64_t (Line: 34, Col: 28)
|—CursorKind.TYPEDEF_DECL: int_fast8_t (Line: 36, Col: 28)
|—CursorKind.TYPEDEF_DECL: int_fast16_t (Line: 37, Col: 28)
|—CursorKind.TYPEDEF_DECL: int_fast32_t (Line: 38, Col: 28)
|—CursorKind.TYPEDEF_DECL: int_fast64_t (Line: 39, Col: 28)
|—CursorKind.TYPEDEF_DECL: uint_fast8_t (Line: 40, Col: 28)
|—CursorKind.TYPEDEF_DECL: uint_fast16_t (Line: 41, Col: 28)
|—CursorKind.TYPEDEF_DECL: uint_fast32_t (Line: 42, Col: 28)
|—CursorKind.TYPEDEF_DECL: uint_fast64_t (Line: 43, Col: 28)
|—CursorKind.TYPEDEF_DECL: intmax_t (Line: 45, Col: 28)
|—CursorKind.TYPEDEF_DECL: uintmax_t (Line: 46, Col: 28)
|—CursorKind.TYPEDEF_DECL: __crt_bool (Line: 274, Col: 19)
|—CursorKind.FUNCTION_DECL: _invalid_parameter_noinfo() (Line: 371, Col: 27)
|—CursorKind.FUNCTION_DECL: _invalid_parameter_noinfo_noreturn() (Line: 372, Col: 44)
|—CursorKind.FUNCTION_DECL: _invoke_watson(const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) (Line: 375, Col: 23)
|——CursorKind.PARM_DECL: _Expression (Line: 376, Col: 31)
|———CursorKind.TYPE_REF: wchar_t (Line: 376, Col: 16)
|——CursorKind.PARM_DECL: _FunctionName (Line: 377, Col: 31)
|———CursorKind.TYPE_REF: wchar_t (Line: 377, Col: 16)
|——CursorKind.PARM_DECL: _FileName (Line: 378, Col: 31)
|———CursorKind.TYPE_REF: wchar_t (Line: 378, Col: 16)
|——CursorKind.PARM_DECL: _LineNo (Line: 379, Col: 29)
|——CursorKind.PARM_DECL: _Reserved (Line: 380, Col: 26)
|———CursorKind.TYPE_REF: uintptr_t (Line: 380, Col: 16)
|—CursorKind.TYPEDEF_DECL: errno_t (Line: 604, Col: 39)
|—CursorKind.TYPEDEF_DECL: wint_t (Line: 605, Col: 39)
|—CursorKind.TYPEDEF_DECL: wctype_t (Line: 606, Col: 39)
|—CursorKind.TYPEDEF_DECL: __time32_t (Line: 607, Col: 39)
|—CursorKind.TYPEDEF_DECL: __time64_t (Line: 608, Col: 39)
|—CursorKind.STRUCT_DECL: __crt_locale_data_public (Line: 610, Col: 16)
|——CursorKind.FIELD_DECL: _locale_pctype (Line: 612, Col: 29)
|——CursorKind.FIELD_DECL: _locale_mb_cur_max (Line: 613, Col: 29)
|——CursorKind.FIELD_DECL: _locale_lc_codepage (Line: 614, Col: 29)
|—CursorKind.TYPEDEF_DECL: __crt_locale_data_public (Line: 615, Col: 3)
|——CursorKind.STRUCT_DECL: __crt_locale_data_public (Line: 610, Col: 16)
|———CursorKind.FIELD_DECL: _locale_pctype (Line: 612, Col: 29)
|———CursorKind.FIELD_DECL: _locale_mb_cur_max (Line: 613, Col: 29)
|———CursorKind.FIELD_DECL: _locale_lc_codepage (Line: 614, Col: 29)
|—CursorKind.STRUCT_DECL: __crt_locale_pointers (Line: 617, Col: 16)
|——CursorKind.STRUCT_DECL: __crt_locale_data (Line: 619, Col: 12)
|——CursorKind.FIELD_DECL: locinfo (Line: 619, Col: 34)
|———CursorKind.TYPE_REF: struct __crt_locale_data (Line: 619, Col: 12)
|——CursorKind.STRUCT_DECL: __crt_multibyte_data (Line: 620, Col: 12)
|——CursorKind.FIELD_DECL: mbcinfo (Line: 620, Col: 34)
|———CursorKind.TYPE_REF: struct __crt_multibyte_data (Line: 620, Col: 12)
|—CursorKind.TYPEDEF_DECL: __crt_locale_pointers (Line: 621, Col: 3)
|——CursorKind.STRUCT_DECL: __crt_locale_pointers (Line: 617, Col: 16)
|———CursorKind.STRUCT_DECL: __crt_locale_data (Line: 619, Col: 12)
|———CursorKind.FIELD_DECL: locinfo (Line: 619, Col: 34)
|————CursorKind.TYPE_REF: struct __crt_locale_data (Line: 619, Col: 12)
|———CursorKind.STRUCT_DECL: __crt_multibyte_data (Line: 620, Col: 12)
|———CursorKind.FIELD_DECL: mbcinfo (Line: 620, Col: 34)
|————CursorKind.TYPE_REF: struct __crt_multibyte_data (Line: 620, Col: 12)
|—CursorKind.TYPEDEF_DECL: _locale_t (Line: 623, Col: 32)
|——CursorKind.TYPE_REF: __crt_locale_pointers (Line: 623, Col: 9)
|—CursorKind.STRUCT_DECL: _Mbstatet (Line: 625, Col: 16)
|——CursorKind.FIELD_DECL: _Wchar (Line: 627, Col: 19)
|——CursorKind.FIELD_DECL: _Byte (Line: 628, Col: 20)
|——CursorKind.FIELD_DECL: _State (Line: 628, Col: 27)
|—CursorKind.TYPEDEF_DECL: _Mbstatet (Line: 629, Col: 3)
|——CursorKind.STRUCT_DECL: _Mbstatet (Line: 625, Col: 16)
|———CursorKind.FIELD_DECL: _Wchar (Line: 627, Col: 19)
|———CursorKind.FIELD_DECL: _Byte (Line: 628, Col: 20)
|———CursorKind.FIELD_DECL: _State (Line: 628, Col: 27)
|—CursorKind.TYPEDEF_DECL: mbstate_t (Line: 631, Col: 19)
|——CursorKind.TYPE_REF: _Mbstatet (Line: 631, Col: 9)
|—CursorKind.TYPEDEF_DECL: time_t (Line: 645, Col: 28)
|——CursorKind.TYPE_REF: __time64_t (Line: 645, Col: 17)
|—CursorKind.TYPEDEF_DECL: rsize_t (Line: 655, Col: 20)
|——CursorKind.TYPE_REF: size_t (Line: 655, Col: 13)
|—CursorKind.FUNCTION_DECL: _errno() (Line: 23, Col: 27)
|—CursorKind.FUNCTION_DECL: _set_errno(int) (Line: 26, Col: 30)
|——CursorKind.TYPE_REF: errno_t (Line: 26, Col: 14)
|——CursorKind.PARM_DECL: _Value (Line: 26, Col: 50)
|—CursorKind.FUNCTION_DECL: _get_errno(int *) (Line: 27, Col: 30)
|——CursorKind.TYPE_REF: errno_t (Line: 27, Col: 14)
|——CursorKind.PARM_DECL: _Value (Line: 27, Col: 52)
|—CursorKind.FUNCTION_DECL: __doserrno() (Line: 29, Col: 37)
|—CursorKind.FUNCTION_DECL: _set_doserrno(unsigned long) (Line: 32, Col: 30)
|——CursorKind.TYPE_REF: errno_t (Line: 32, Col: 14)
|——CursorKind.PARM_DECL: _Value (Line: 32, Col: 63)
|—CursorKind.FUNCTION_DECL: _get_doserrno(unsigned long *) (Line: 33, Col: 30)
|——CursorKind.TYPE_REF: errno_t (Line: 33, Col: 14)
|——CursorKind.PARM_DECL: _Value (Line: 33, Col: 66)
|—CursorKind.FUNCTION_DECL: memchr(const void *, int, size_t) (Line: 22, Col: 38)
|——CursorKind.PARM_DECL: _Buf (Line: 23, Col: 49)
|——CursorKind.PARM_DECL: _Val (Line: 24, Col: 49)
|——CursorKind.PARM_DECL: _MaxCount (Line: 25, Col: 49)
|———CursorKind.TYPE_REF: size_t (Line: 25, Col: 37)
|—CursorKind.FUNCTION_DECL: memcmp(const void *, const void *, size_t) (Line: 29, Col: 13)
|——CursorKind.PARM_DECL: _Buf1 (Line: 30, Col: 41)
|——CursorKind.PARM_DECL: _Buf2 (Line: 31, Col: 41)
|——CursorKind.PARM_DECL: _Size (Line: 32, Col: 41)
|———CursorKind.TYPE_REF: size_t (Line: 32, Col: 29)
|—CursorKind.FUNCTION_DECL: memcpy(void *, const void *, size_t) (Line: 43, Col: 15)
|——CursorKind.PARM_DECL: _Dst (Line: 44, Col: 41)
|——CursorKind.PARM_DECL: _Src (Line: 45, Col: 47)
|——CursorKind.PARM_DECL: _Size (Line: 46, Col: 47)
|———CursorKind.TYPE_REF: size_t (Line: 46, Col: 35)
|—CursorKind.FUNCTION_DECL: memmove(void *, const void *, size_t) (Line: 50, Col: 24)
|——CursorKind.PARM_DECL: _Dst (Line: 51, Col: 51)
|——CursorKind.PARM_DECL: _Src (Line: 52, Col: 51)
|——CursorKind.PARM_DECL: _Size (Line: 53, Col: 51)
|———CursorKind.TYPE_REF: size_t (Line: 53, Col: 39)
|—CursorKind.FUNCTION_DECL: memset(void *, int, size_t) (Line: 63, Col: 15)
|——CursorKind.PARM_DECL: _Dst (Line: 64, Col: 42)
|——CursorKind.PARM_DECL: _Val (Line: 65, Col: 42)
|——CursorKind.PARM_DECL: _Size (Line: 66, Col: 42)
|———CursorKind.TYPE_REF: size_t (Line: 66, Col: 35)
|—CursorKind.FUNCTION_DECL: strchr(const char *, int) (Line: 70, Col: 38)
|——CursorKind.PARM_DECL: _Str (Line: 71, Col: 24)
|——CursorKind.PARM_DECL: _Val (Line: 72, Col: 24)
|—CursorKind.FUNCTION_DECL: strrchr(const char *, int) (Line: 76, Col: 38)
|——CursorKind.PARM_DECL: _Str (Line: 77, Col: 24)
|——CursorKind.PARM_DECL: _Ch (Line: 78, Col: 24)
|—CursorKind.FUNCTION_DECL: strstr(const char *, const char *) (Line: 82, Col: 38)
|——CursorKind.PARM_DECL: _Str (Line: 83, Col: 24)
|——CursorKind.PARM_DECL: _SubStr (Line: 84, Col: 24)
|—CursorKind.FUNCTION_DECL: wcschr(const wchar_t *, wchar_t) (Line: 89, Col: 41)
|——CursorKind.TYPE_REF: wchar_t (Line: 89, Col: 10)
|——CursorKind.PARM_DECL: _Str (Line: 90, Col: 27)
|———CursorKind.TYPE_REF: wchar_t (Line: 90, Col: 12)
|——CursorKind.PARM_DECL: _Ch (Line: 91, Col: 27)
|———CursorKind.TYPE_REF: wchar_t (Line: 91, Col: 12)
|—CursorKind.FUNCTION_DECL: wcsrchr(const wchar_t *, wchar_t) (Line: 95, Col: 41)
|——CursorKind.TYPE_REF: wchar_t (Line: 95, Col: 10)
|——CursorKind.PARM_DECL: _Str (Line: 96, Col: 27)
|———CursorKind.TYPE_REF: wchar_t (Line: 96, Col: 12)
|——CursorKind.PARM_DECL: _Ch (Line: 97, Col: 27)
|———CursorKind.TYPE_REF: wchar_t (Line: 97, Col: 12)
|—CursorKind.FUNCTION_DECL: wcsstr(const wchar_t *, const wchar_t *) (Line: 102, Col: 41)
|——CursorKind.TYPE_REF: wchar_t (Line: 102, Col: 10)
|——CursorKind.PARM_DECL: _Str (Line: 103, Col: 27)
|———CursorKind.TYPE_REF: wchar_t (Line: 103, Col: 12)
|——CursorKind.PARM_DECL: _SubStr (Line: 104, Col: 27)
|———CursorKind.TYPE_REF: wchar_t (Line: 104, Col: 12)
|—CursorKind.FUNCTION_DECL: memcpy_s(void *const, const rsize_t, const void *const, const rsize_t) (Line: 39, Col: 44)
|——CursorKind.TYPE_REF: errno_t (Line: 39, Col: 26)
|——CursorKind.PARM_DECL: _Destination (Line: 40, Col: 84)
|——CursorKind.PARM_DECL: _DestinationSize (Line: 41, Col: 84)
|———CursorKind.TYPE_REF: rsize_t (Line: 41, Col: 66)
|——CursorKind.PARM_DECL: _Source (Line: 42, Col: 84)
|——CursorKind.PARM_DECL: _SourceSize (Line: 43, Col: 84)
|———CursorKind.TYPE_REF: rsize_t (Line: 43, Col: 66)
|——CursorKind.COMPOUND_STMT:  (Line: 45, Col: 5)
|———CursorKind.IF_STMT:  (Line: 46, Col: 9)
|————CursorKind.BINARY_OPERATOR:  (Line: 46, Col: 13)
|—————CursorKind.UNEXPOSED_EXPR: _SourceSize (Line: 46, Col: 13)
|——————CursorKind.DECL_REF_EXPR: _SourceSize (Line: 46, Col: 13)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 46, Col: 28)
|——————CursorKind.INTEGER_LITERAL:  (Line: 46, Col: 28)
|————CursorKind.COMPOUND_STMT:  (Line: 47, Col: 9)
|—————CursorKind.RETURN_STMT:  (Line: 48, Col: 13)
|——————CursorKind.INTEGER_LITERAL:  (Line: 48, Col: 20)
|———CursorKind.COMPOUND_STMT:  (Line: 51, Col: 9)
|————CursorKind.DECL_STMT:  (Line: 51, Col: 9)
|—————CursorKind.VAR_DECL: _Expr_val (Line: 51, Col: 9)
|——————CursorKind.UNARY_OPERATOR:  (Line: 51, Col: 9)
|———————CursorKind.UNARY_OPERATOR:  (Line: 51, Col: 9)
|————————CursorKind.PAREN_EXPR:  (Line: 51, Col: 9)
|—————————CursorKind.BINARY_OPERATOR:  (Line: 51, Col: 9)
|——————————CursorKind.UNEXPOSED_EXPR: _Destination (Line: 51, Col: 9)
|———————————CursorKind.DECL_REF_EXPR: _Destination (Line: 51, Col: 9)
|——————————CursorKind.PAREN_EXPR:  (Line: 51, Col: 9)
|———————————CursorKind.CSTYLE_CAST_EXPR:  (Line: 51, Col: 9)
|————————————CursorKind.INTEGER_LITERAL:  (Line: 51, Col: 9)
|————CursorKind.IF_STMT:  (Line: 51, Col: 9)
|—————CursorKind.UNARY_OPERATOR:  (Line: 51, Col: 9)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 51, Col: 9)
|———————CursorKind.PAREN_EXPR:  (Line: 51, Col: 9)
|————————CursorKind.DECL_REF_EXPR: _Expr_val (Line: 51, Col: 9)
|—————CursorKind.COMPOUND_STMT:  (Line: 51, Col: 9)
|——————CursorKind.BINARY_OPERATOR:  (Line: 51, Col: 9)
|———————CursorKind.PAREN_EXPR:  (Line: 51, Col: 9)
|————————CursorKind.UNARY_OPERATOR:  (Line: 51, Col: 9)
|—————————CursorKind.CALL_EXPR: _errno (Line: 51, Col: 9)
|——————————CursorKind.UNEXPOSED_EXPR: _errno (Line: 51, Col: 9)
|———————————CursorKind.DECL_REF_EXPR: _errno (Line: 51, Col: 9)
|———————CursorKind.INTEGER_LITERAL:  (Line: 51, Col: 9)
|——————CursorKind.CALL_EXPR: _invalid_parameter_noinfo (Line: 51, Col: 9)
|———————CursorKind.UNEXPOSED_EXPR: _invalid_parameter_noinfo (Line: 51, Col: 9)
|————————CursorKind.DECL_REF_EXPR: _invalid_parameter_noinfo (Line: 51, Col: 9)
|——————CursorKind.RETURN_STMT:  (Line: 51, Col: 9)
|———————CursorKind.INTEGER_LITERAL:  (Line: 51, Col: 9)
|———CursorKind.NULL_STMT:  (Line: 51, Col: 76)
|———CursorKind.IF_STMT:  (Line: 52, Col: 9)
|————CursorKind.BINARY_OPERATOR:  (Line: 52, Col: 13)
|—————CursorKind.BINARY_OPERATOR:  (Line: 52, Col: 13)
|——————CursorKind.UNEXPOSED_EXPR: _Source (Line: 52, Col: 13)
|———————CursorKind.DECL_REF_EXPR: _Source (Line: 52, Col: 13)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 52, Col: 24)
|———————CursorKind.PAREN_EXPR:  (Line: 52, Col: 24)
|————————CursorKind.CSTYLE_CAST_EXPR:  (Line: 52, Col: 24)
|—————————CursorKind.INTEGER_LITERAL:  (Line: 52, Col: 24)
|—————CursorKind.BINARY_OPERATOR:  (Line: 52, Col: 32)
|——————CursorKind.UNEXPOSED_EXPR: _DestinationSize (Line: 52, Col: 32)
|———————CursorKind.DECL_REF_EXPR: _DestinationSize (Line: 52, Col: 32)
|——————CursorKind.UNEXPOSED_EXPR: _SourceSize (Line: 52, Col: 51)
|———————CursorKind.DECL_REF_EXPR: _SourceSize (Line: 52, Col: 51)
|————CursorKind.COMPOUND_STMT:  (Line: 53, Col: 9)
|—————CursorKind.CALL_EXPR: memset (Line: 54, Col: 13)
|——————CursorKind.UNEXPOSED_EXPR: memset (Line: 54, Col: 13)
|———————CursorKind.DECL_REF_EXPR: memset (Line: 54, Col: 13)
|——————CursorKind.UNEXPOSED_EXPR: _Destination (Line: 54, Col: 20)
|———————CursorKind.DECL_REF_EXPR: _Destination (Line: 54, Col: 20)
|——————CursorKind.INTEGER_LITERAL:  (Line: 54, Col: 34)
|——————CursorKind.UNEXPOSED_EXPR: _DestinationSize (Line: 54, Col: 37)
|———————CursorKind.DECL_REF_EXPR: _DestinationSize (Line: 54, Col: 37)
|—————CursorKind.COMPOUND_STMT:  (Line: 56, Col: 13)
|——————CursorKind.DECL_STMT:  (Line: 56, Col: 13)
|———————CursorKind.VAR_DECL: _Expr_val (Line: 56, Col: 13)
|————————CursorKind.UNARY_OPERATOR:  (Line: 56, Col: 13)
|—————————CursorKind.UNARY_OPERATOR:  (Line: 56, Col: 13)
|——————————CursorKind.PAREN_EXPR:  (Line: 56, Col: 13)
|———————————CursorKind.BINARY_OPERATOR:  (Line: 56, Col: 13)
|————————————CursorKind.UNEXPOSED_EXPR: _Source (Line: 56, Col: 13)
|—————————————CursorKind.DECL_REF_EXPR: _Source (Line: 56, Col: 13)
|————————————CursorKind.UNEXPOSED_EXPR:  (Line: 56, Col: 13)
|—————————————CursorKind.PAREN_EXPR:  (Line: 56, Col: 13)
|——————————————CursorKind.CSTYLE_CAST_EXPR:  (Line: 56, Col: 13)
|———————————————CursorKind.INTEGER_LITERAL:  (Line: 56, Col: 13)
|——————CursorKind.IF_STMT:  (Line: 56, Col: 13)
|———————CursorKind.UNARY_OPERATOR:  (Line: 56, Col: 13)
|————————CursorKind.UNEXPOSED_EXPR:  (Line: 56, Col: 13)
|—————————CursorKind.PAREN_EXPR:  (Line: 56, Col: 13)
|——————————CursorKind.DECL_REF_EXPR: _Expr_val (Line: 56, Col: 13)
|———————CursorKind.COMPOUND_STMT:  (Line: 56, Col: 13)
|————————CursorKind.BINARY_OPERATOR:  (Line: 56, Col: 13)
|—————————CursorKind.PAREN_EXPR:  (Line: 56, Col: 13)
|——————————CursorKind.UNARY_OPERATOR:  (Line: 56, Col: 13)
|———————————CursorKind.CALL_EXPR: _errno (Line: 56, Col: 13)
|————————————CursorKind.UNEXPOSED_EXPR: _errno (Line: 56, Col: 13)
|—————————————CursorKind.DECL_REF_EXPR: _errno (Line: 56, Col: 13)
|—————————CursorKind.INTEGER_LITERAL:  (Line: 56, Col: 13)
|————————CursorKind.CALL_EXPR: _invalid_parameter_noinfo (Line: 56, Col: 13)
|—————————CursorKind.UNEXPOSED_EXPR: _invalid_parameter_noinfo (Line: 56, Col: 13)
|——————————CursorKind.DECL_REF_EXPR: _invalid_parameter_noinfo (Line: 56, Col: 13)
|————————CursorKind.RETURN_STMT:  (Line: 56, Col: 13)
|—————————CursorKind.INTEGER_LITERAL:  (Line: 56, Col: 13)
|—————CursorKind.NULL_STMT:  (Line: 56, Col: 91)
|—————CursorKind.COMPOUND_STMT:  (Line: 57, Col: 13)
|——————CursorKind.DECL_STMT:  (Line: 57, Col: 13)
|———————CursorKind.VAR_DECL: _Expr_val (Line: 57, Col: 13)
|————————CursorKind.UNARY_OPERATOR:  (Line: 57, Col: 13)
|—————————CursorKind.UNARY_OPERATOR:  (Line: 57, Col: 13)
|——————————CursorKind.PAREN_EXPR:  (Line: 57, Col: 13)
|———————————CursorKind.BINARY_OPERATOR:  (Line: 57, Col: 13)
|————————————CursorKind.UNEXPOSED_EXPR: _DestinationSize (Line: 57, Col: 13)
|—————————————CursorKind.DECL_REF_EXPR: _DestinationSize (Line: 57, Col: 13)
|————————————CursorKind.UNEXPOSED_EXPR: _SourceSize (Line: 57, Col: 13)
|—————————————CursorKind.DECL_REF_EXPR: _SourceSize (Line: 57, Col: 13)
|——————CursorKind.IF_STMT:  (Line: 57, Col: 13)
|———————CursorKind.UNARY_OPERATOR:  (Line: 57, Col: 13)
|————————CursorKind.UNEXPOSED_EXPR:  (Line: 57, Col: 13)
|—————————CursorKind.PAREN_EXPR:  (Line: 57, Col: 13)
|——————————CursorKind.DECL_REF_EXPR: _Expr_val (Line: 57, Col: 13)
|———————CursorKind.COMPOUND_STMT:  (Line: 57, Col: 13)
|————————CursorKind.BINARY_OPERATOR:  (Line: 57, Col: 13)
|—————————CursorKind.PAREN_EXPR:  (Line: 57, Col: 13)
|——————————CursorKind.UNARY_OPERATOR:  (Line: 57, Col: 13)
|———————————CursorKind.CALL_EXPR: _errno (Line: 57, Col: 13)
|————————————CursorKind.UNEXPOSED_EXPR: _errno (Line: 57, Col: 13)
|—————————————CursorKind.DECL_REF_EXPR: _errno (Line: 57, Col: 13)
|—————————CursorKind.INTEGER_LITERAL:  (Line: 57, Col: 13)
|————————CursorKind.CALL_EXPR: _invalid_parameter_noinfo (Line: 57, Col: 13)
|—————————CursorKind.UNEXPOSED_EXPR: _invalid_parameter_noinfo (Line: 57, Col: 13)
|——————————CursorKind.DECL_REF_EXPR: _invalid_parameter_noinfo (Line: 57, Col: 13)
|————————CursorKind.RETURN_STMT:  (Line: 57, Col: 13)
|—————————CursorKind.INTEGER_LITERAL:  (Line: 57, Col: 13)
|—————CursorKind.NULL_STMT:  (Line: 57, Col: 91)
|—————CursorKind.RETURN_STMT:  (Line: 60, Col: 13)
|——————CursorKind.INTEGER_LITERAL:  (Line: 60, Col: 20)
|———CursorKind.CALL_EXPR: memcpy (Line: 62, Col: 9)
|————CursorKind.UNEXPOSED_EXPR: memcpy (Line: 62, Col: 9)
|—————CursorKind.DECL_REF_EXPR: memcpy (Line: 62, Col: 9)
|————CursorKind.UNEXPOSED_EXPR: _Destination (Line: 62, Col: 16)
|—————CursorKind.DECL_REF_EXPR: _Destination (Line: 62, Col: 16)
|————CursorKind.UNEXPOSED_EXPR: _Source (Line: 62, Col: 30)
|—————CursorKind.DECL_REF_EXPR: _Source (Line: 62, Col: 30)
|————CursorKind.UNEXPOSED_EXPR: _SourceSize (Line: 62, Col: 39)
|—————CursorKind.DECL_REF_EXPR: _SourceSize (Line: 62, Col: 39)
|———CursorKind.RETURN_STMT:  (Line: 63, Col: 9)
|————CursorKind.INTEGER_LITERAL:  (Line: 63, Col: 16)
|—CursorKind.FUNCTION_DECL: memmove_s(void *const, const rsize_t, const void *const, const rsize_t) (Line: 67, Col: 44)
|——CursorKind.TYPE_REF: errno_t (Line: 67, Col: 26)
|——CursorKind.PARM_DECL: _Destination (Line: 68, Col: 84)
|——CursorKind.PARM_DECL: _DestinationSize (Line: 69, Col: 84)
|———CursorKind.TYPE_REF: rsize_t (Line: 69, Col: 66)
|——CursorKind.PARM_DECL: _Source (Line: 70, Col: 84)
|——CursorKind.PARM_DECL: _SourceSize (Line: 71, Col: 84)
|———CursorKind.TYPE_REF: rsize_t (Line: 71, Col: 66)
|——CursorKind.COMPOUND_STMT:  (Line: 73, Col: 5)
|———CursorKind.IF_STMT:  (Line: 74, Col: 9)
|————CursorKind.BINARY_OPERATOR:  (Line: 74, Col: 13)
|—————CursorKind.UNEXPOSED_EXPR: _SourceSize (Line: 74, Col: 13)
|——————CursorKind.DECL_REF_EXPR: _SourceSize (Line: 74, Col: 13)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 74, Col: 28)
|——————CursorKind.INTEGER_LITERAL:  (Line: 74, Col: 28)
|————CursorKind.COMPOUND_STMT:  (Line: 75, Col: 9)
|—————CursorKind.RETURN_STMT:  (Line: 76, Col: 13)
|——————CursorKind.INTEGER_LITERAL:  (Line: 76, Col: 20)
|———CursorKind.COMPOUND_STMT:  (Line: 79, Col: 9)
|————CursorKind.DECL_STMT:  (Line: 79, Col: 9)
|—————CursorKind.VAR_DECL: _Expr_val (Line: 79, Col: 9)
|——————CursorKind.UNARY_OPERATOR:  (Line: 79, Col: 9)
|———————CursorKind.UNARY_OPERATOR:  (Line: 79, Col: 9)
|————————CursorKind.PAREN_EXPR:  (Line: 79, Col: 9)
|—————————CursorKind.BINARY_OPERATOR:  (Line: 79, Col: 9)
|——————————CursorKind.UNEXPOSED_EXPR: _Destination (Line: 79, Col: 9)
|———————————CursorKind.DECL_REF_EXPR: _Destination (Line: 79, Col: 9)
|——————————CursorKind.PAREN_EXPR:  (Line: 79, Col: 9)
|———————————CursorKind.CSTYLE_CAST_EXPR:  (Line: 79, Col: 9)
|————————————CursorKind.INTEGER_LITERAL:  (Line: 79, Col: 9)
|————CursorKind.IF_STMT:  (Line: 79, Col: 9)
|—————CursorKind.UNARY_OPERATOR:  (Line: 79, Col: 9)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 79, Col: 9)
|———————CursorKind.PAREN_EXPR:  (Line: 79, Col: 9)
|————————CursorKind.DECL_REF_EXPR: _Expr_val (Line: 79, Col: 9)
|—————CursorKind.COMPOUND_STMT:  (Line: 79, Col: 9)
|——————CursorKind.BINARY_OPERATOR:  (Line: 79, Col: 9)
|———————CursorKind.PAREN_EXPR:  (Line: 79, Col: 9)
|————————CursorKind.UNARY_OPERATOR:  (Line: 79, Col: 9)
|—————————CursorKind.CALL_EXPR: _errno (Line: 79, Col: 9)
|——————————CursorKind.UNEXPOSED_EXPR: _errno (Line: 79, Col: 9)
|———————————CursorKind.DECL_REF_EXPR: _errno (Line: 79, Col: 9)
|———————CursorKind.INTEGER_LITERAL:  (Line: 79, Col: 9)
|——————CursorKind.CALL_EXPR: _invalid_parameter_noinfo (Line: 79, Col: 9)
|———————CursorKind.UNEXPOSED_EXPR: _invalid_parameter_noinfo (Line: 79, Col: 9)
|————————CursorKind.DECL_REF_EXPR: _invalid_parameter_noinfo (Line: 79, Col: 9)
|——————CursorKind.RETURN_STMT:  (Line: 79, Col: 9)
|———————CursorKind.INTEGER_LITERAL:  (Line: 79, Col: 9)
|———CursorKind.NULL_STMT:  (Line: 79, Col: 87)
|———CursorKind.COMPOUND_STMT:  (Line: 80, Col: 9)
|————CursorKind.DECL_STMT:  (Line: 80, Col: 9)
|—————CursorKind.VAR_DECL: _Expr_val (Line: 80, Col: 9)
|——————CursorKind.UNARY_OPERATOR:  (Line: 80, Col: 9)
|———————CursorKind.UNARY_OPERATOR:  (Line: 80, Col: 9)
|————————CursorKind.PAREN_EXPR:  (Line: 80, Col: 9)
|—————————CursorKind.BINARY_OPERATOR:  (Line: 80, Col: 9)
|——————————CursorKind.UNEXPOSED_EXPR: _Source (Line: 80, Col: 9)
|———————————CursorKind.DECL_REF_EXPR: _Source (Line: 80, Col: 9)
|——————————CursorKind.UNEXPOSED_EXPR:  (Line: 80, Col: 9)
|———————————CursorKind.PAREN_EXPR:  (Line: 80, Col: 9)
|————————————CursorKind.CSTYLE_CAST_EXPR:  (Line: 80, Col: 9)
|—————————————CursorKind.INTEGER_LITERAL:  (Line: 80, Col: 9)
|————CursorKind.IF_STMT:  (Line: 80, Col: 9)
|—————CursorKind.UNARY_OPERATOR:  (Line: 80, Col: 9)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 80, Col: 9)
|———————CursorKind.PAREN_EXPR:  (Line: 80, Col: 9)
|————————CursorKind.DECL_REF_EXPR: _Expr_val (Line: 80, Col: 9)
|—————CursorKind.COMPOUND_STMT:  (Line: 80, Col: 9)
|——————CursorKind.BINARY_OPERATOR:  (Line: 80, Col: 9)
|———————CursorKind.PAREN_EXPR:  (Line: 80, Col: 9)
|————————CursorKind.UNARY_OPERATOR:  (Line: 80, Col: 9)
|—————————CursorKind.CALL_EXPR: _errno (Line: 80, Col: 9)
|——————————CursorKind.UNEXPOSED_EXPR: _errno (Line: 80, Col: 9)
|———————————CursorKind.DECL_REF_EXPR: _errno (Line: 80, Col: 9)
|———————CursorKind.INTEGER_LITERAL:  (Line: 80, Col: 9)
|——————CursorKind.CALL_EXPR: _invalid_parameter_noinfo (Line: 80, Col: 9)
|———————CursorKind.UNEXPOSED_EXPR: _invalid_parameter_noinfo (Line: 80, Col: 9)
|————————CursorKind.DECL_REF_EXPR: _invalid_parameter_noinfo (Line: 80, Col: 9)
|——————CursorKind.RETURN_STMT:  (Line: 80, Col: 9)
|———————CursorKind.INTEGER_LITERAL:  (Line: 80, Col: 9)
|———CursorKind.NULL_STMT:  (Line: 80, Col: 87)
|———CursorKind.COMPOUND_STMT:  (Line: 81, Col: 9)
|————CursorKind.DECL_STMT:  (Line: 81, Col: 9)
|—————CursorKind.VAR_DECL: _Expr_val (Line: 81, Col: 9)
|——————CursorKind.UNARY_OPERATOR:  (Line: 81, Col: 9)
|———————CursorKind.UNARY_OPERATOR:  (Line: 81, Col: 9)
|————————CursorKind.PAREN_EXPR:  (Line: 81, Col: 9)
|—————————CursorKind.BINARY_OPERATOR:  (Line: 81, Col: 9)
|——————————CursorKind.UNEXPOSED_EXPR: _DestinationSize (Line: 81, Col: 9)
|———————————CursorKind.DECL_REF_EXPR: _DestinationSize (Line: 81, Col: 9)
|——————————CursorKind.UNEXPOSED_EXPR: _SourceSize (Line: 81, Col: 9)
|———————————CursorKind.DECL_REF_EXPR: _SourceSize (Line: 81, Col: 9)
|————CursorKind.IF_STMT:  (Line: 81, Col: 9)
|—————CursorKind.UNARY_OPERATOR:  (Line: 81, Col: 9)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 81, Col: 9)
|———————CursorKind.PAREN_EXPR:  (Line: 81, Col: 9)
|————————CursorKind.DECL_REF_EXPR: _Expr_val (Line: 81, Col: 9)
|—————CursorKind.COMPOUND_STMT:  (Line: 81, Col: 9)
|——————CursorKind.BINARY_OPERATOR:  (Line: 81, Col: 9)
|———————CursorKind.PAREN_EXPR:  (Line: 81, Col: 9)
|————————CursorKind.UNARY_OPERATOR:  (Line: 81, Col: 9)
|—————————CursorKind.CALL_EXPR: _errno (Line: 81, Col: 9)
|——————————CursorKind.UNEXPOSED_EXPR: _errno (Line: 81, Col: 9)
|———————————CursorKind.DECL_REF_EXPR: _errno (Line: 81, Col: 9)
|———————CursorKind.INTEGER_LITERAL:  (Line: 81, Col: 9)
|——————CursorKind.CALL_EXPR: _invalid_parameter_noinfo (Line: 81, Col: 9)
|———————CursorKind.UNEXPOSED_EXPR: _invalid_parameter_noinfo (Line: 81, Col: 9)
|————————CursorKind.DECL_REF_EXPR: _invalid_parameter_noinfo (Line: 81, Col: 9)
|——————CursorKind.RETURN_STMT:  (Line: 81, Col: 9)
|———————CursorKind.INTEGER_LITERAL:  (Line: 81, Col: 9)
|———CursorKind.NULL_STMT:  (Line: 81, Col: 87)
|———CursorKind.CALL_EXPR: memmove (Line: 83, Col: 9)
|————CursorKind.UNEXPOSED_EXPR: memmove (Line: 83, Col: 9)
|—————CursorKind.DECL_REF_EXPR: memmove (Line: 83, Col: 9)
|————CursorKind.UNEXPOSED_EXPR: _Destination (Line: 83, Col: 17)
|—————CursorKind.DECL_REF_EXPR: _Destination (Line: 83, Col: 17)
|————CursorKind.UNEXPOSED_EXPR: _Source (Line: 83, Col: 31)
|—————CursorKind.DECL_REF_EXPR: _Source (Line: 83, Col: 31)
|————CursorKind.UNEXPOSED_EXPR: _SourceSize (Line: 83, Col: 40)
|—————CursorKind.DECL_REF_EXPR: _SourceSize (Line: 83, Col: 40)
|———CursorKind.RETURN_STMT:  (Line: 84, Col: 9)
|————CursorKind.INTEGER_LITERAL:  (Line: 84, Col: 16)
|—CursorKind.FUNCTION_DECL: _memicmp(const void *, const void *, size_t) (Line: 28, Col: 22)
|——CursorKind.PARM_DECL: _Buf1 (Line: 29, Col: 45)
|——CursorKind.PARM_DECL: _Buf2 (Line: 30, Col: 45)
|——CursorKind.PARM_DECL: _Size (Line: 31, Col: 45)
|———CursorKind.TYPE_REF: size_t (Line: 31, Col: 33)
|—CursorKind.FUNCTION_DECL: _memicmp_l(const void *, const void *, size_t, _locale_t) (Line: 35, Col: 22)
|——CursorKind.PARM_DECL: _Buf1 (Line: 36, Col: 45)
|——CursorKind.PARM_DECL: _Buf2 (Line: 37, Col: 45)
|——CursorKind.PARM_DECL: _Size (Line: 38, Col: 45)
|———CursorKind.TYPE_REF: size_t (Line: 38, Col: 33)
|——CursorKind.PARM_DECL: _Locale (Line: 39, Col: 45)
|———CursorKind.TYPE_REF: _locale_t (Line: 39, Col: 33)
|—CursorKind.FUNCTION_DECL: memccpy(void *, const void *, int, size_t) (Line: 83, Col: 28)
|——CursorKind.UNEXPOSED_ATTR:  (Line: 82, Col: 5)
|——CursorKind.PARM_DECL: _Dst (Line: 84, Col: 51)
|——CursorKind.PARM_DECL: _Src (Line: 85, Col: 51)
|——CursorKind.PARM_DECL: _Val (Line: 86, Col: 51)
|——CursorKind.PARM_DECL: _Size (Line: 87, Col: 51)
|———CursorKind.TYPE_REF: size_t (Line: 87, Col: 39)
|—CursorKind.FUNCTION_DECL: memicmp(const void *, const void *, size_t) (Line: 91, Col: 26)
|——CursorKind.UNEXPOSED_ATTR:  (Line: 90, Col: 20)
|——CursorKind.PARM_DECL: _Buf1 (Line: 92, Col: 49)
|——CursorKind.PARM_DECL: _Buf2 (Line: 93, Col: 49)
|——CursorKind.PARM_DECL: _Size (Line: 94, Col: 49)
|———CursorKind.TYPE_REF: size_t (Line: 94, Col: 37)
|—CursorKind.FUNCTION_DECL: wcscat_s(wchar_t *, rsize_t, const wchar_t *) (Line: 32, Col: 30)
|——CursorKind.TYPE_REF: errno_t (Line: 32, Col: 14)
|——CursorKind.PARM_DECL: _Destination (Line: 33, Col: 50)
|———CursorKind.TYPE_REF: wchar_t (Line: 33, Col: 41)
|——CursorKind.PARM_DECL: _SizeInWords (Line: 34, Col: 22)
|———CursorKind.TYPE_REF: rsize_t (Line: 34, Col: 14)
|——CursorKind.PARM_DECL: _Source (Line: 35, Col: 31)
|———CursorKind.TYPE_REF: wchar_t (Line: 35, Col: 16)
|—CursorKind.FUNCTION_DECL: wcscpy_s(wchar_t *, rsize_t, const wchar_t *) (Line: 39, Col: 30)
|——CursorKind.TYPE_REF: errno_t (Line: 39, Col: 14)
|——CursorKind.PARM_DECL: _Destination (Line: 40, Col: 47)
|———CursorKind.TYPE_REF: wchar_t (Line: 40, Col: 38)
|——CursorKind.PARM_DECL: _SizeInWords (Line: 41, Col: 22)
|———CursorKind.TYPE_REF: rsize_t (Line: 41, Col: 14)
|——CursorKind.PARM_DECL: _Source (Line: 42, Col: 31)
|———CursorKind.TYPE_REF: wchar_t (Line: 42, Col: 16)
|—CursorKind.FUNCTION_DECL: wcsncat_s(wchar_t *, rsize_t, const wchar_t *, rsize_t) (Line: 46, Col: 30)
|——CursorKind.TYPE_REF: errno_t (Line: 46, Col: 14)
|——CursorKind.PARM_DECL: _Destination (Line: 47, Col: 56)
|———CursorKind.TYPE_REF: wchar_t (Line: 47, Col: 41)
|——CursorKind.PARM_DECL: _SizeInWords (Line: 48, Col: 56)
|———CursorKind.TYPE_REF: rsize_t (Line: 48, Col: 41)
|——CursorKind.PARM_DECL: _Source (Line: 49, Col: 56)
|———CursorKind.TYPE_REF: wchar_t (Line: 49, Col: 41)
|——CursorKind.PARM_DECL: _MaxCount (Line: 50, Col: 56)
|———CursorKind.TYPE_REF: rsize_t (Line: 50, Col: 41)
|—CursorKind.FUNCTION_DECL: wcsncpy_s(wchar_t *, rsize_t, const wchar_t *, rsize_t) (Line: 54, Col: 30)
|——CursorKind.TYPE_REF: errno_t (Line: 54, Col: 14)
|——CursorKind.PARM_DECL: _Destination (Line: 55, Col: 53)
|———CursorKind.TYPE_REF: wchar_t (Line: 55, Col: 38)
|——CursorKind.PARM_DECL: _SizeInWords (Line: 56, Col: 53)
|———CursorKind.TYPE_REF: rsize_t (Line: 56, Col: 38)
|——CursorKind.PARM_DECL: _Source (Line: 57, Col: 53)
|———CursorKind.TYPE_REF: wchar_t (Line: 57, Col: 38)
|——CursorKind.PARM_DECL: _MaxCount (Line: 58, Col: 53)
|———CursorKind.TYPE_REF: rsize_t (Line: 58, Col: 38)
|—CursorKind.FUNCTION_DECL: wcstok_s(wchar_t *, const wchar_t *, wchar_t **) (Line: 62, Col: 31)
|——CursorKind.TYPE_REF: wchar_t (Line: 62, Col: 14)
|——CursorKind.PARM_DECL: _String (Line: 63, Col: 54)
|———CursorKind.TYPE_REF: wchar_t (Line: 63, Col: 39)
|——CursorKind.PARM_DECL: _Delimiter (Line: 64, Col: 54)
|———CursorKind.TYPE_REF: wchar_t (Line: 64, Col: 39)
|——CursorKind.PARM_DECL: _Context (Line: 65, Col: 54)
|———CursorKind.TYPE_REF: wchar_t (Line: 65, Col: 39)
|—CursorKind.FUNCTION_DECL: _wcsdup(const wchar_t *) (Line: 83, Col: 41)
|——CursorKind.UNEXPOSED_ATTR:  (Line: 83, Col: 10)
|——CursorKind.TYPE_REF: wchar_t (Line: 83, Col: 24)
|——CursorKind.PARM_DECL: _String (Line: 84, Col: 27)
|———CursorKind.TYPE_REF: wchar_t (Line: 84, Col: 12)
|—CursorKind.FUNCTION_DECL: wcscat(wchar_t *, const wchar_t *) (Line: 100, Col: 5)
|——CursorKind.UNEXPOSED_ATTR:  (Line: 100, Col: 5)
|——CursorKind.TYPE_REF: wchar_t (Line: 100, Col: 5)
|——CursorKind.PARM_DECL: _Destination (Line: 100, Col: 5)
|———CursorKind.TYPE_REF: wchar_t (Line: 100, Col: 5)
|——CursorKind.PARM_DECL: _Source (Line: 100, Col: 5)
|———CursorKind.TYPE_REF: wchar_t (Line: 100, Col: 5)
|—CursorKind.FUNCTION_DECL: wcscmp(const wchar_t *, const wchar_t *) (Line: 108, Col: 22)
|——CursorKind.PARM_DECL: _String1 (Line: 109, Col: 27)
|———CursorKind.TYPE_REF: wchar_t (Line: 109, Col: 12)
|——CursorKind.PARM_DECL: _String2 (Line: 110, Col: 27)
|———CursorKind.TYPE_REF: wchar_t (Line: 110, Col: 12)
|—CursorKind.FUNCTION_DECL: wcscpy(wchar_t *, const wchar_t *) (Line: 119, Col: 1)
|——CursorKind.UNEXPOSED_ATTR:  (Line: 119, Col: 1)
|——CursorKind.TYPE_REF: wchar_t (Line: 119, Col: 1)
|——CursorKind.PARM_DECL: _Destination (Line: 119, Col: 1)
|———CursorKind.TYPE_REF: wchar_t (Line: 119, Col: 1)
|——CursorKind.PARM_DECL: _Source (Line: 119, Col: 1)
|———CursorKind.TYPE_REF: wchar_t (Line: 119, Col: 1)
|—CursorKind.FUNCTION_DECL: wcscspn(const wchar_t *, const wchar_t *) (Line: 126, Col: 25)
|——CursorKind.TYPE_REF: size_t (Line: 126, Col: 10)
|——CursorKind.PARM_DECL: _String (Line: 127, Col: 27)
|———CursorKind.TYPE_REF: wchar_t (Line: 127, Col: 12)
|——CursorKind.PARM_DECL: _Control (Line: 128, Col: 27)
|———CursorKind.TYPE_REF: wchar_t (Line: 128, Col: 12)
|—CursorKind.FUNCTION_DECL: wcslen(const wchar_t *) (Line: 132, Col: 25)
|——CursorKind.TYPE_REF: size_t (Line: 132, Col: 10)
|——CursorKind.PARM_DECL: _String (Line: 133, Col: 27)
|———CursorKind.TYPE_REF: wchar_t (Line: 133, Col: 12)
|—CursorKind.FUNCTION_DECL: wcsnlen(const wchar_t *, size_t) (Line: 145, Col: 25)
|——CursorKind.TYPE_REF: size_t (Line: 145, Col: 10)
|——CursorKind.PARM_DECL: _Source (Line: 146, Col: 47)
|———CursorKind.TYPE_REF: wchar_t (Line: 146, Col: 32)
|——CursorKind.PARM_DECL: _MaxCount (Line: 147, Col: 47)
|———CursorKind.TYPE_REF: size_t (Line: 147, Col: 32)
|—CursorKind.FUNCTION_DECL: wcsnlen_s(const wchar_t *, size_t) (Line: 161, Col: 38)
|——CursorKind.TYPE_REF: size_t (Line: 161, Col: 21)
|——CursorKind.PARM_DECL: _Source (Line: 162, Col: 51)
|———CursorKind.TYPE_REF: wchar_t (Line: 162, Col: 36)
|——CursorKind.PARM_DECL: _MaxCount (Line: 163, Col: 51)
|———CursorKind.TYPE_REF: size_t (Line: 163, Col: 36)
|——CursorKind.COMPOUND_STMT:  (Line: 165, Col: 5)
|———CursorKind.RETURN_STMT:  (Line: 166, Col: 9)
|————CursorKind.CONDITIONAL_OPERATOR:  (Line: 166, Col: 16)
|—————CursorKind.PAREN_EXPR:  (Line: 166, Col: 16)
|——————CursorKind.BINARY_OPERATOR:  (Line: 166, Col: 17)
|———————CursorKind.UNEXPOSED_EXPR: _Source (Line: 166, Col: 17)
|————————CursorKind.DECL_REF_EXPR: _Source (Line: 166, Col: 17)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 166, Col: 28)
|————————CursorKind.INTEGER_LITERAL:  (Line: 166, Col: 28)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 166, Col: 33)
|——————CursorKind.INTEGER_LITERAL:  (Line: 166, Col: 33)
|—————CursorKind.CALL_EXPR: wcsnlen (Line: 166, Col: 37)
|——————CursorKind.UNEXPOSED_EXPR: wcsnlen (Line: 166, Col: 37)
|———————CursorKind.DECL_REF_EXPR: wcsnlen (Line: 166, Col: 37)
|——————CursorKind.UNEXPOSED_EXPR: _Source (Line: 166, Col: 45)
|———————CursorKind.DECL_REF_EXPR: _Source (Line: 166, Col: 45)
|——————CursorKind.UNEXPOSED_EXPR: _MaxCount (Line: 166, Col: 54)
|———————CursorKind.DECL_REF_EXPR: _MaxCount (Line: 166, Col: 54)
|—CursorKind.FUNCTION_DECL: wcsncat(wchar_t *, const wchar_t *, size_t) (Line: 178, Col: 1)
|——CursorKind.UNEXPOSED_ATTR:  (Line: 178, Col: 1)
|——CursorKind.TYPE_REF: wchar_t (Line: 178, Col: 1)
|——CursorKind.PARM_DECL: _Destination (Line: 178, Col: 1)
|———CursorKind.TYPE_REF: wchar_t (Line: 178, Col: 1)
|——CursorKind.PARM_DECL: _Source (Line: 178, Col: 1)
|———CursorKind.TYPE_REF: wchar_t (Line: 178, Col: 1)
|——CursorKind.PARM_DECL: _Count (Line: 178, Col: 1)
|———CursorKind.TYPE_REF: size_t (Line: 178, Col: 1)
|—CursorKind.FUNCTION_DECL: wcsncmp(const wchar_t *, const wchar_t *, size_t) (Line: 187, Col: 22)
|——CursorKind.PARM_DECL: _String1 (Line: 188, Col: 47)
|———CursorKind.TYPE_REF: wchar_t (Line: 188, Col: 32)
|——CursorKind.PARM_DECL: _String2 (Line: 189, Col: 47)
|———CursorKind.TYPE_REF: wchar_t (Line: 189, Col: 32)
|——CursorKind.PARM_DECL: _MaxCount (Line: 190, Col: 47)
|———CursorKind.TYPE_REF: size_t (Line: 190, Col: 32)
|—CursorKind.FUNCTION_DECL: wcsncpy(wchar_t *, const wchar_t *, size_t) (Line: 200, Col: 1)
|——CursorKind.UNEXPOSED_ATTR:  (Line: 200, Col: 1)
|——CursorKind.TYPE_REF: wchar_t (Line: 200, Col: 1)
|——CursorKind.PARM_DECL: _Destination (Line: 200, Col: 1)
|———CursorKind.TYPE_REF: wchar_t (Line: 200, Col: 1)
|——CursorKind.PARM_DECL: _Source (Line: 200, Col: 1)
|———CursorKind.TYPE_REF: wchar_t (Line: 200, Col: 1)
|——CursorKind.PARM_DECL: _Count (Line: 200, Col: 1)
|———CursorKind.TYPE_REF: size_t (Line: 200, Col: 1)
|—CursorKind.FUNCTION_DECL: wcspbrk(const wchar_t *, const wchar_t *) (Line: 209, Col: 41)
|——CursorKind.TYPE_REF: wchar_t (Line: 209, Col: 10)
|——CursorKind.PARM_DECL: _String (Line: 210, Col: 27)
|———CursorKind.TYPE_REF: wchar_t (Line: 210, Col: 12)
|——CursorKind.PARM_DECL: _Control (Line: 211, Col: 27)
|———CursorKind.TYPE_REF: wchar_t (Line: 211, Col: 12)
|—CursorKind.FUNCTION_DECL: wcsspn(const wchar_t *, const wchar_t *) (Line: 215, Col: 25)
|——CursorKind.TYPE_REF: size_t (Line: 215, Col: 10)
|——CursorKind.PARM_DECL: _String (Line: 216, Col: 27)
|———CursorKind.TYPE_REF: wchar_t (Line: 216, Col: 12)
|——CursorKind.PARM_DECL: _Control (Line: 217, Col: 27)
|———CursorKind.TYPE_REF: wchar_t (Line: 217, Col: 12)
|—CursorKind.FUNCTION_DECL: wcstok(wchar_t *, const wchar_t *, wchar_t **) (Line: 221, Col: 27)
|——CursorKind.UNEXPOSED_ATTR:  (Line: 220, Col: 16)
|——CursorKind.TYPE_REF: wchar_t (Line: 221, Col: 10)
|——CursorKind.PARM_DECL: _String (Line: 222, Col: 54)
|———CursorKind.TYPE_REF: wchar_t (Line: 222, Col: 39)
|——CursorKind.PARM_DECL: _Delimiter (Line: 223, Col: 54)
|———CursorKind.TYPE_REF: wchar_t (Line: 223, Col: 39)
|——CursorKind.PARM_DECL: _Context (Line: 224, Col: 54)
|———CursorKind.TYPE_REF: wchar_t (Line: 224, Col: 39)
|—CursorKind.FUNCTION_DECL: _wcstok(wchar_t *const, const wchar_t *const) (Line: 239, Col: 40)
|——CursorKind.UNEXPOSED_ATTR:  (Line: 238, Col: 20)
|——CursorKind.TYPE_REF: wchar_t (Line: 239, Col: 21)
|——CursorKind.PARM_DECL: _String (Line: 240, Col: 44)
|———CursorKind.TYPE_REF: wchar_t (Line: 240, Col: 23)
|——CursorKind.PARM_DECL: _Delimiter (Line: 241, Col: 44)
|———CursorKind.TYPE_REF: wchar_t (Line: 241, Col: 23)
|——CursorKind.COMPOUND_STMT:  (Line: 243, Col: 5)
|———CursorKind.RETURN_STMT:  (Line: 244, Col: 9)
|————CursorKind.CALL_EXPR: wcstok (Line: 244, Col: 16)
|—————CursorKind.UNEXPOSED_EXPR: wcstok (Line: 244, Col: 16)
|——————CursorKind.DECL_REF_EXPR: wcstok (Line: 244, Col: 16)
|—————CursorKind.UNEXPOSED_EXPR: _String (Line: 244, Col: 23)
|——————CursorKind.DECL_REF_EXPR: _String (Line: 244, Col: 23)
|—————CursorKind.UNEXPOSED_EXPR: _Delimiter (Line: 244, Col: 32)
|——————CursorKind.DECL_REF_EXPR: _Delimiter (Line: 244, Col: 32)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 244, Col: 44)
|——————CursorKind.INTEGER_LITERAL:  (Line: 244, Col: 44)
|—CursorKind.FUNCTION_DECL: _wcserror(int) (Line: 268, Col: 27)
|——CursorKind.UNEXPOSED_ATTR:  (Line: 267, Col: 16)
|——CursorKind.TYPE_REF: wchar_t (Line: 268, Col: 10)
|——CursorKind.PARM_DECL: _ErrorNumber (Line: 269, Col: 14)
|—CursorKind.FUNCTION_DECL: _wcserror_s(wchar_t *, size_t, int) (Line: 273, Col: 26)
|——CursorKind.TYPE_REF: errno_t (Line: 273, Col: 10)
|——CursorKind.PARM_DECL: _Buffer (Line: 274, Col: 47)
|———CursorKind.TYPE_REF: wchar_t (Line: 274, Col: 38)
|——CursorKind.PARM_DECL: _SizeInWords (Line: 275, Col: 47)
|———CursorKind.TYPE_REF: size_t (Line: 275, Col: 38)
|——CursorKind.PARM_DECL: _ErrorNumber (Line: 276, Col: 47)
|—CursorKind.FUNCTION_DECL: __wcserror(const wchar_t *) (Line: 288, Col: 27)
|——CursorKind.UNEXPOSED_ATTR:  (Line: 287, Col: 16)
|——CursorKind.TYPE_REF: wchar_t (Line: 288, Col: 10)
|——CursorKind.PARM_DECL: _String (Line: 289, Col: 31)
|———CursorKind.TYPE_REF: wchar_t (Line: 289, Col: 16)
|—CursorKind.FUNCTION_DECL: __wcserror_s(wchar_t *, size_t, const wchar_t *) (Line: 292, Col: 49)
|——CursorKind.TYPE_REF: errno_t (Line: 292, Col: 33)
|——CursorKind.PARM_DECL: _Buffer (Line: 293, Col: 53)
|———CursorKind.TYPE_REF: wchar_t (Line: 293, Col: 38)
|——CursorKind.PARM_DECL: _SizeInWords (Line: 294, Col: 53)
|———CursorKind.TYPE_REF: size_t (Line: 294, Col: 38)
|——CursorKind.PARM_DECL: _ErrorMessage (Line: 295, Col: 53)
|———CursorKind.TYPE_REF: wchar_t (Line: 295, Col: 38)
|—CursorKind.FUNCTION_DECL: _wcsicmp(const wchar_t *, const wchar_t *) (Line: 304, Col: 37)
|——CursorKind.PARM_DECL: _String1 (Line: 305, Col: 27)
|———CursorKind.TYPE_REF: wchar_t (Line: 305, Col: 12)
|——CursorKind.PARM_DECL: _String2 (Line: 306, Col: 27)
|———CursorKind.TYPE_REF: wchar_t (Line: 306, Col: 12)
|—CursorKind.FUNCTION_DECL: _wcsicmp_l(const wchar_t *, const wchar_t *, _locale_t) (Line: 309, Col: 37)
|——CursorKind.PARM_DECL: _String1 (Line: 310, Col: 29)
|———CursorKind.TYPE_REF: wchar_t (Line: 310, Col: 14)
|——CursorKind.PARM_DECL: _String2 (Line: 311, Col: 29)
|———CursorKind.TYPE_REF: wchar_t (Line: 311, Col: 14)
|——CursorKind.PARM_DECL: _Locale (Line: 312, Col: 29)
|———CursorKind.TYPE_REF: _locale_t (Line: 312, Col: 14)
|—CursorKind.FUNCTION_DECL: _wcsnicmp(const wchar_t *, const wchar_t *, size_t) (Line: 315, Col: 37)
|——CursorKind.PARM_DECL: _String1 (Line: 316, Col: 47)
|———CursorKind.TYPE_REF: wchar_t (Line: 316, Col: 32)
|——CursorKind.PARM_DECL: _String2 (Line: 317, Col: 47)
|———CursorKind.TYPE_REF: wchar_t (Line: 317, Col: 32)
|——CursorKind.PARM_DECL: _MaxCount (Line: 318, Col: 47)
|———CursorKind.TYPE_REF: size_t (Line: 318, Col: 32)
|—CursorKind.FUNCTION_DECL: _wcsnicmp_l(const wchar_t *, const wchar_t *, size_t, _locale_t) (Line: 321, Col: 37)
|——CursorKind.PARM_DECL: _String1 (Line: 322, Col: 47)
|———CursorKind.TYPE_REF: wchar_t (Line: 322, Col: 32)
|——CursorKind.PARM_DECL: _String2 (Line: 323, Col: 47)
|———CursorKind.TYPE_REF: wchar_t (Line: 323, Col: 32)
|——CursorKind.PARM_DECL: _MaxCount (Line: 324, Col: 47)
|———CursorKind.TYPE_REF: size_t (Line: 324, Col: 32)
|——CursorKind.PARM_DECL: _Locale (Line: 325, Col: 47)
|———CursorKind.TYPE_REF: _locale_t (Line: 325, Col: 32)
|—CursorKind.FUNCTION_DECL: _wcsnset_s(wchar_t *, size_t, wchar_t, size_t) (Line: 328, Col: 45)
|——CursorKind.TYPE_REF: errno_t (Line: 328, Col: 29)
|——CursorKind.PARM_DECL: _Destination (Line: 329, Col: 46)
|———CursorKind.TYPE_REF: wchar_t (Line: 329, Col: 37)
|——CursorKind.PARM_DECL: _SizeInWords (Line: 330, Col: 46)
|———CursorKind.TYPE_REF: size_t (Line: 330, Col: 37)
|——CursorKind.PARM_DECL: _Value (Line: 331, Col: 46)
|———CursorKind.TYPE_REF: wchar_t (Line: 331, Col: 37)
|——CursorKind.PARM_DECL: _MaxCount (Line: 332, Col: 46)
|———CursorKind.TYPE_REF: size_t (Line: 332, Col: 37)
|—CursorKind.FUNCTION_DECL: _wcsnset(wchar_t *, wchar_t, size_t) (Line: 342, Col: 1)
|——CursorKind.UNEXPOSED_ATTR:  (Line: 342, Col: 1)
|——CursorKind.TYPE_REF: wchar_t (Line: 342, Col: 1)
|——CursorKind.PARM_DECL: _String (Line: 342, Col: 1)
|———CursorKind.TYPE_REF: wchar_t (Line: 342, Col: 1)
|——CursorKind.PARM_DECL: _Value (Line: 342, Col: 1)
|———CursorKind.TYPE_REF: wchar_t (Line: 342, Col: 1)
|——CursorKind.PARM_DECL: _MaxCount (Line: 342, Col: 1)
|———CursorKind.TYPE_REF: size_t (Line: 342, Col: 1)
|—CursorKind.FUNCTION_DECL: _wcsrev(wchar_t *) (Line: 350, Col: 27)
|——CursorKind.TYPE_REF: wchar_t (Line: 350, Col: 10)
|——CursorKind.PARM_DECL: _String (Line: 351, Col: 24)
|———CursorKind.TYPE_REF: wchar_t (Line: 351, Col: 15)
|—CursorKind.FUNCTION_DECL: _wcsset_s(wchar_t *, size_t, wchar_t) (Line: 354, Col: 45)
|——CursorKind.TYPE_REF: errno_t (Line: 354, Col: 29)
|——CursorKind.PARM_DECL: _Destination (Line: 355, Col: 46)
|———CursorKind.TYPE_REF: wchar_t (Line: 355, Col: 37)
|——CursorKind.PARM_DECL: _SizeInWords (Line: 356, Col: 46)
|———CursorKind.TYPE_REF: size_t (Line: 356, Col: 37)
|——CursorKind.PARM_DECL: _Value (Line: 357, Col: 46)
|———CursorKind.TYPE_REF: wchar_t (Line: 357, Col: 37)
|—CursorKind.FUNCTION_DECL: _wcsset(wchar_t *, wchar_t) (Line: 366, Col: 1)
|——CursorKind.UNEXPOSED_ATTR:  (Line: 366, Col: 1)
|——CursorKind.TYPE_REF: wchar_t (Line: 366, Col: 1)
|——CursorKind.PARM_DECL: _String (Line: 366, Col: 1)
|———CursorKind.TYPE_REF: wchar_t (Line: 366, Col: 1)
|——CursorKind.PARM_DECL: _Value (Line: 366, Col: 1)
|———CursorKind.TYPE_REF: wchar_t (Line: 366, Col: 1)
|—CursorKind.FUNCTION_DECL: _wcslwr_s(wchar_t *, size_t) (Line: 373, Col: 45)
|——CursorKind.TYPE_REF: errno_t (Line: 373, Col: 29)
|——CursorKind.PARM_DECL: _String (Line: 374, Col: 46)
|———CursorKind.TYPE_REF: wchar_t (Line: 374, Col: 37)
|——CursorKind.PARM_DECL: _SizeInWords (Line: 375, Col: 46)
|———CursorKind.TYPE_REF: size_t (Line: 375, Col: 37)
|—CursorKind.FUNCTION_DECL: _wcslwr(wchar_t *) (Line: 383, Col: 1)
|——CursorKind.UNEXPOSED_ATTR:  (Line: 383, Col: 1)
|——CursorKind.TYPE_REF: wchar_t (Line: 383, Col: 1)
|——CursorKind.PARM_DECL: _String (Line: 383, Col: 1)
|———CursorKind.TYPE_REF: wchar_t (Line: 383, Col: 1)
|—CursorKind.FUNCTION_DECL: _wcslwr_s_l(wchar_t *, size_t, _locale_t) (Line: 389, Col: 26)
|——CursorKind.TYPE_REF: errno_t (Line: 389, Col: 10)
|——CursorKind.PARM_DECL: _String (Line: 390, Col: 47)
|———CursorKind.TYPE_REF: wchar_t (Line: 390, Col: 37)
|——CursorKind.PARM_DECL: _SizeInWords (Line: 391, Col: 47)
|———CursorKind.TYPE_REF: size_t (Line: 391, Col: 37)
|——CursorKind.PARM_DECL: _Locale (Line: 392, Col: 47)
|———CursorKind.TYPE_REF: _locale_t (Line: 392, Col: 37)
|—CursorKind.FUNCTION_DECL: _wcslwr_l(wchar_t *, _locale_t) (Line: 401, Col: 1)
|——CursorKind.UNEXPOSED_ATTR:  (Line: 401, Col: 1)
|——CursorKind.TYPE_REF: wchar_t (Line: 401, Col: 1)
|——CursorKind.PARM_DECL: _String (Line: 401, Col: 1)
|———CursorKind.TYPE_REF: wchar_t (Line: 401, Col: 1)
|——CursorKind.PARM_DECL: _Locale (Line: 401, Col: 1)
|———CursorKind.TYPE_REF: _locale_t (Line: 401, Col: 1)
|—CursorKind.FUNCTION_DECL: _wcsupr_s(wchar_t *, size_t) (Line: 409, Col: 26)
|——CursorKind.TYPE_REF: errno_t (Line: 409, Col: 10)
|——CursorKind.PARM_DECL: _String (Line: 410, Col: 39)
|———CursorKind.TYPE_REF: wchar_t (Line: 410, Col: 30)
|——CursorKind.PARM_DECL: _Size (Line: 411, Col: 39)
|———CursorKind.TYPE_REF: size_t (Line: 411, Col: 30)
|—CursorKind.FUNCTION_DECL: _wcsupr(wchar_t *) (Line: 419, Col: 1)
|——CursorKind.UNEXPOSED_ATTR:  (Line: 419, Col: 1)
|——CursorKind.TYPE_REF: wchar_t (Line: 419, Col: 1)
|——CursorKind.PARM_DECL: _String (Line: 419, Col: 1)
|———CursorKind.TYPE_REF: wchar_t (Line: 419, Col: 1)
|—CursorKind.FUNCTION_DECL: _wcsupr_s_l(wchar_t *, size_t, _locale_t) (Line: 425, Col: 26)
|——CursorKind.TYPE_REF: errno_t (Line: 425, Col: 10)
|——CursorKind.PARM_DECL: _String (Line: 426, Col: 40)
|———CursorKind.TYPE_REF: wchar_t (Line: 426, Col: 30)
|——CursorKind.PARM_DECL: _Size (Line: 427, Col: 40)
|———CursorKind.TYPE_REF: size_t (Line: 427, Col: 30)
|——CursorKind.PARM_DECL: _Locale (Line: 428, Col: 40)
|———CursorKind.TYPE_REF: _locale_t (Line: 428, Col: 30)
|—CursorKind.FUNCTION_DECL: _wcsupr_l(wchar_t *, _locale_t) (Line: 437, Col: 1)
|——CursorKind.UNEXPOSED_ATTR:  (Line: 437, Col: 1)
|——CursorKind.TYPE_REF: wchar_t (Line: 437, Col: 1)
|——CursorKind.PARM_DECL: _String (Line: 437, Col: 1)
|———CursorKind.TYPE_REF: wchar_t (Line: 437, Col: 1)
|——CursorKind.PARM_DECL: _Locale (Line: 437, Col: 1)
|———CursorKind.TYPE_REF: _locale_t (Line: 437, Col: 1)
|—CursorKind.FUNCTION_DECL: wcsxfrm(wchar_t *, const wchar_t *, size_t) (Line: 446, Col: 25)
|——CursorKind.TYPE_REF: size_t (Line: 446, Col: 10)
|——CursorKind.PARM_DECL: _Destination (Line: 447, Col: 62)
|———CursorKind.TYPE_REF: wchar_t (Line: 447, Col: 47)
|——CursorKind.PARM_DECL: _Source (Line: 448, Col: 62)
|———CursorKind.TYPE_REF: wchar_t (Line: 448, Col: 47)
|——CursorKind.PARM_DECL: _MaxCount (Line: 449, Col: 62)
|———CursorKind.TYPE_REF: size_t (Line: 449, Col: 47)
|—CursorKind.FUNCTION_DECL: _wcsxfrm_l(wchar_t *, const wchar_t *, size_t, _locale_t) (Line: 454, Col: 25)
|——CursorKind.TYPE_REF: size_t (Line: 454, Col: 10)
|——CursorKind.PARM_DECL: _Destination (Line: 455, Col: 62)
|———CursorKind.TYPE_REF: wchar_t (Line: 455, Col: 47)
|——CursorKind.PARM_DECL: _Source (Line: 456, Col: 62)
|———CursorKind.TYPE_REF: wchar_t (Line: 456, Col: 47)
|——CursorKind.PARM_DECL: _MaxCount (Line: 457, Col: 62)
|———CursorKind.TYPE_REF: size_t (Line: 457, Col: 47)
|——CursorKind.PARM_DECL: _Locale (Line: 458, Col: 62)
|———CursorKind.TYPE_REF: _locale_t (Line: 458, Col: 47)
|—CursorKind.FUNCTION_DECL: wcscoll(const wchar_t *, const wchar_t *) (Line: 462, Col: 22)
|——CursorKind.PARM_DECL: _String1 (Line: 463, Col: 27)
|———CursorKind.TYPE_REF: wchar_t (Line: 463, Col: 12)
|——CursorKind.PARM_DECL: _String2 (Line: 464, Col: 27)
|———CursorKind.TYPE_REF: wchar_t (Line: 464, Col: 12)
|—CursorKind.FUNCTION_DECL: _wcscoll_l(const wchar_t *, const wchar_t *, _locale_t) (Line: 468, Col: 22)
|——CursorKind.PARM_DECL: _String1 (Line: 469, Col: 29)
|———CursorKind.TYPE_REF: wchar_t (Line: 469, Col: 14)
|——CursorKind.PARM_DECL: _String2 (Line: 470, Col: 29)
|———CursorKind.TYPE_REF: wchar_t (Line: 470, Col: 14)
|——CursorKind.PARM_DECL: _Locale (Line: 471, Col: 29)
|———CursorKind.TYPE_REF: _locale_t (Line: 471, Col: 14)
|—CursorKind.FUNCTION_DECL: _wcsicoll(const wchar_t *, const wchar_t *) (Line: 475, Col: 22)
|——CursorKind.PARM_DECL: _String1 (Line: 476, Col: 27)
|———CursorKind.TYPE_REF: wchar_t (Line: 476, Col: 12)
|——CursorKind.PARM_DECL: _String2 (Line: 477, Col: 27)
|———CursorKind.TYPE_REF: wchar_t (Line: 477, Col: 12)
|—CursorKind.FUNCTION_DECL: _wcsicoll_l(const wchar_t *, const wchar_t *, _locale_t) (Line: 481, Col: 22)
|——CursorKind.PARM_DECL: _String1 (Line: 482, Col: 29)
|———CursorKind.TYPE_REF: wchar_t (Line: 482, Col: 14)
|——CursorKind.PARM_DECL: _String2 (Line: 483, Col: 29)
|———CursorKind.TYPE_REF: wchar_t (Line: 483, Col: 14)
|——CursorKind.PARM_DECL: _Locale (Line: 484, Col: 29)
|———CursorKind.TYPE_REF: _locale_t (Line: 484, Col: 14)
|—CursorKind.FUNCTION_DECL: _wcsncoll(const wchar_t *, const wchar_t *, size_t) (Line: 488, Col: 22)
|——CursorKind.PARM_DECL: _String1 (Line: 489, Col: 47)
|———CursorKind.TYPE_REF: wchar_t (Line: 489, Col: 32)
|——CursorKind.PARM_DECL: _String2 (Line: 490, Col: 47)
|———CursorKind.TYPE_REF: wchar_t (Line: 490, Col: 32)
|——CursorKind.PARM_DECL: _MaxCount (Line: 491, Col: 47)
|———CursorKind.TYPE_REF: size_t (Line: 491, Col: 32)
|—CursorKind.FUNCTION_DECL: _wcsncoll_l(const wchar_t *, const wchar_t *, size_t, _locale_t) (Line: 495, Col: 22)
|——CursorKind.PARM_DECL: _String1 (Line: 496, Col: 47)
|———CursorKind.TYPE_REF: wchar_t (Line: 496, Col: 32)
|——CursorKind.PARM_DECL: _String2 (Line: 497, Col: 47)
|———CursorKind.TYPE_REF: wchar_t (Line: 497, Col: 32)
|——CursorKind.PARM_DECL: _MaxCount (Line: 498, Col: 47)
|———CursorKind.TYPE_REF: size_t (Line: 498, Col: 32)
|——CursorKind.PARM_DECL: _Locale (Line: 499, Col: 47)
|———CursorKind.TYPE_REF: _locale_t (Line: 499, Col: 32)
|—CursorKind.FUNCTION_DECL: _wcsnicoll(const wchar_t *, const wchar_t *, size_t) (Line: 503, Col: 22)
|——CursorKind.PARM_DECL: _String1 (Line: 504, Col: 47)
|———CursorKind.TYPE_REF: wchar_t (Line: 504, Col: 32)
|——CursorKind.PARM_DECL: _String2 (Line: 505, Col: 47)
|———CursorKind.TYPE_REF: wchar_t (Line: 505, Col: 32)
|——CursorKind.PARM_DECL: _MaxCount (Line: 506, Col: 47)
|———CursorKind.TYPE_REF: size_t (Line: 506, Col: 32)
|—CursorKind.FUNCTION_DECL: _wcsnicoll_l(const wchar_t *, const wchar_t *, size_t, _locale_t) (Line: 510, Col: 22)
|——CursorKind.PARM_DECL: _String1 (Line: 511, Col: 47)
|———CursorKind.TYPE_REF: wchar_t (Line: 511, Col: 32)
|——CursorKind.PARM_DECL: _String2 (Line: 512, Col: 47)
|———CursorKind.TYPE_REF: wchar_t (Line: 512, Col: 32)
|——CursorKind.PARM_DECL: _MaxCount (Line: 513, Col: 47)
|———CursorKind.TYPE_REF: size_t (Line: 513, Col: 32)
|——CursorKind.PARM_DECL: _Locale (Line: 514, Col: 47)
|———CursorKind.TYPE_REF: _locale_t (Line: 514, Col: 32)
|—CursorKind.FUNCTION_DECL: wcsdup(const wchar_t *) (Line: 570, Col: 31)
|——CursorKind.UNEXPOSED_ATTR:  (Line: 569, Col: 20)
|——CursorKind.TYPE_REF: wchar_t (Line: 570, Col: 14)
|——CursorKind.PARM_DECL: _String (Line: 571, Col: 31)
|———CursorKind.TYPE_REF: wchar_t (Line: 571, Col: 16)
|—CursorKind.FUNCTION_DECL: wcsicmp(const wchar_t *, const wchar_t *) (Line: 582, Col: 26)
|——CursorKind.UNEXPOSED_ATTR:  (Line: 581, Col: 20)
|——CursorKind.PARM_DECL: _String1 (Line: 583, Col: 31)
|———CursorKind.TYPE_REF: wchar_t (Line: 583, Col: 16)
|——CursorKind.PARM_DECL: _String2 (Line: 584, Col: 31)
|———CursorKind.TYPE_REF: wchar_t (Line: 584, Col: 16)
|—CursorKind.FUNCTION_DECL: wcsnicmp(const wchar_t *, const wchar_t *, size_t) (Line: 588, Col: 26)
|——CursorKind.UNEXPOSED_ATTR:  (Line: 587, Col: 20)
|——CursorKind.PARM_DECL: _String1 (Line: 589, Col: 51)
|———CursorKind.TYPE_REF: wchar_t (Line: 589, Col: 36)
|——CursorKind.PARM_DECL: _String2 (Line: 590, Col: 51)
|———CursorKind.TYPE_REF: wchar_t (Line: 590, Col: 36)
|——CursorKind.PARM_DECL: _MaxCount (Line: 591, Col: 51)
|———CursorKind.TYPE_REF: size_t (Line: 591, Col: 36)
|—CursorKind.FUNCTION_DECL: wcsnset(wchar_t *, wchar_t, size_t) (Line: 596, Col: 31)
|——CursorKind.UNEXPOSED_ATTR:  (Line: 594, Col: 5)
|——CursorKind.TYPE_REF: wchar_t (Line: 596, Col: 14)
|——CursorKind.PARM_DECL: _String (Line: 597, Col: 47)
|———CursorKind.TYPE_REF: wchar_t (Line: 597, Col: 38)
|——CursorKind.PARM_DECL: _Value (Line: 598, Col: 47)
|———CursorKind.TYPE_REF: wchar_t (Line: 598, Col: 38)
|——CursorKind.PARM_DECL: _MaxCount (Line: 599, Col: 47)
|———CursorKind.TYPE_REF: size_t (Line: 599, Col: 38)
|—CursorKind.FUNCTION_DECL: wcsrev(wchar_t *) (Line: 604, Col: 31)
|——CursorKind.UNEXPOSED_ATTR:  (Line: 602, Col: 5)
|——CursorKind.TYPE_REF: wchar_t (Line: 604, Col: 14)
|——CursorKind.PARM_DECL: _String (Line: 605, Col: 28)
|———CursorKind.TYPE_REF: wchar_t (Line: 605, Col: 19)
|—CursorKind.FUNCTION_DECL: wcsset(wchar_t *, wchar_t) (Line: 610, Col: 31)
|——CursorKind.UNEXPOSED_ATTR:  (Line: 608, Col: 5)
|——CursorKind.TYPE_REF: wchar_t (Line: 610, Col: 14)
|——CursorKind.PARM_DECL: _String (Line: 611, Col: 28)
|———CursorKind.TYPE_REF: wchar_t (Line: 611, Col: 19)
|——CursorKind.PARM_DECL: _Value (Line: 612, Col: 28)
|———CursorKind.TYPE_REF: wchar_t (Line: 612, Col: 19)
|—CursorKind.FUNCTION_DECL: wcslwr(wchar_t *) (Line: 617, Col: 31)
|——CursorKind.UNEXPOSED_ATTR:  (Line: 615, Col: 5)
|——CursorKind.TYPE_REF: wchar_t (Line: 617, Col: 14)
|——CursorKind.PARM_DECL: _String (Line: 618, Col: 28)
|———CursorKind.TYPE_REF: wchar_t (Line: 618, Col: 19)
|—CursorKind.FUNCTION_DECL: wcsupr(wchar_t *) (Line: 623, Col: 31)
|——CursorKind.UNEXPOSED_ATTR:  (Line: 621, Col: 5)
|——CursorKind.TYPE_REF: wchar_t (Line: 623, Col: 14)
|——CursorKind.PARM_DECL: _String (Line: 624, Col: 28)
|———CursorKind.TYPE_REF: wchar_t (Line: 624, Col: 19)
|—CursorKind.FUNCTION_DECL: wcsicoll(const wchar_t *, const wchar_t *) (Line: 628, Col: 26)
|——CursorKind.UNEXPOSED_ATTR:  (Line: 627, Col: 20)
|——CursorKind.PARM_DECL: _String1 (Line: 629, Col: 31)
|———CursorKind.TYPE_REF: wchar_t (Line: 629, Col: 16)
|——CursorKind.PARM_DECL: _String2 (Line: 630, Col: 31)
|———CursorKind.TYPE_REF: wchar_t (Line: 630, Col: 16)
|—CursorKind.FUNCTION_DECL: strcpy_s(char *, rsize_t, const char *) (Line: 32, Col: 30)
|——CursorKind.TYPE_REF: errno_t (Line: 32, Col: 14)
|——CursorKind.PARM_DECL: _Destination (Line: 33, Col: 50)
|——CursorKind.PARM_DECL: _SizeInBytes (Line: 34, Col: 50)
|———CursorKind.TYPE_REF: rsize_t (Line: 34, Col: 38)
|——CursorKind.PARM_DECL: _Source (Line: 35, Col: 50)
|—CursorKind.FUNCTION_DECL: strcat_s(char *, rsize_t, const char *) (Line: 39, Col: 30)
|——CursorKind.TYPE_REF: errno_t (Line: 39, Col: 14)
|——CursorKind.PARM_DECL: _Destination (Line: 40, Col: 53)
|——CursorKind.PARM_DECL: _SizeInBytes (Line: 41, Col: 53)
|———CursorKind.TYPE_REF: rsize_t (Line: 41, Col: 41)
|——CursorKind.PARM_DECL: _Source (Line: 42, Col: 53)
|—CursorKind.FUNCTION_DECL: strerror_s(char *, size_t, int) (Line: 46, Col: 30)
|——CursorKind.TYPE_REF: errno_t (Line: 46, Col: 14)
|——CursorKind.PARM_DECL: _Buffer (Line: 47, Col: 45)
|——CursorKind.PARM_DECL: _SizeInBytes (Line: 48, Col: 45)
|———CursorKind.TYPE_REF: size_t (Line: 48, Col: 38)
|——CursorKind.PARM_DECL: _ErrorNumber (Line: 49, Col: 45)
|—CursorKind.FUNCTION_DECL: strncat_s(char *, rsize_t, const char *, rsize_t) (Line: 52, Col: 30)
|——CursorKind.TYPE_REF: errno_t (Line: 52, Col: 14)
|——CursorKind.PARM_DECL: _Destination (Line: 53, Col: 53)
|——CursorKind.PARM_DECL: _SizeInBytes (Line: 54, Col: 53)
|———CursorKind.TYPE_REF: rsize_t (Line: 54, Col: 41)
|——CursorKind.PARM_DECL: _Source (Line: 55, Col: 53)
|——CursorKind.PARM_DECL: _MaxCount (Line: 56, Col: 53)
|———CursorKind.TYPE_REF: rsize_t (Line: 56, Col: 41)
|—CursorKind.FUNCTION_DECL: strncpy_s(char *, rsize_t, const char *, rsize_t) (Line: 60, Col: 30)
|——CursorKind.TYPE_REF: errno_t (Line: 60, Col: 14)
|——CursorKind.PARM_DECL: _Destination (Line: 61, Col: 50)
|——CursorKind.PARM_DECL: _SizeInBytes (Line: 62, Col: 50)
|———CursorKind.TYPE_REF: rsize_t (Line: 62, Col: 38)
|——CursorKind.PARM_DECL: _Source (Line: 63, Col: 50)
|——CursorKind.PARM_DECL: _MaxCount (Line: 64, Col: 50)
|———CursorKind.TYPE_REF: rsize_t (Line: 64, Col: 38)
|—CursorKind.FUNCTION_DECL: strtok_s(char *, const char *, char **) (Line: 68, Col: 29)
|——CursorKind.PARM_DECL: _String (Line: 69, Col: 51)
|——CursorKind.PARM_DECL: _Delimiter (Line: 70, Col: 51)
|——CursorKind.PARM_DECL: _Context (Line: 71, Col: 51)
|—CursorKind.FUNCTION_DECL: _memccpy(void *, const void *, int, size_t) (Line: 76, Col: 24)
|——CursorKind.PARM_DECL: _Dst (Line: 77, Col: 51)
|——CursorKind.PARM_DECL: _Src (Line: 78, Col: 51)
|——CursorKind.PARM_DECL: _Val (Line: 79, Col: 51)
|——CursorKind.PARM_DECL: _MaxCount (Line: 80, Col: 51)
|———CursorKind.TYPE_REF: size_t (Line: 80, Col: 39)
|—CursorKind.FUNCTION_DECL: strcat(char *, const char *) (Line: 91, Col: 5)
|——CursorKind.UNEXPOSED_ATTR:  (Line: 91, Col: 5)
|——CursorKind.PARM_DECL: _Destination (Line: 91, Col: 5)
|——CursorKind.PARM_DECL: _Source (Line: 91, Col: 5)
|—CursorKind.FUNCTION_DECL: strcmp(const char *, const char *) (Line: 100, Col: 13)
|——CursorKind.PARM_DECL: _Str1 (Line: 101, Col: 24)
|——CursorKind.PARM_DECL: _Str2 (Line: 102, Col: 24)
|—CursorKind.FUNCTION_DECL: _strcmpi(const char *, const char *) (Line: 106, Col: 22)
|——CursorKind.PARM_DECL: _String1 (Line: 107, Col: 24)
|——CursorKind.PARM_DECL: _String2 (Line: 108, Col: 24)
|—CursorKind.FUNCTION_DECL: strcoll(const char *, const char *) (Line: 112, Col: 22)
|——CursorKind.PARM_DECL: _String1 (Line: 113, Col: 24)
|——CursorKind.PARM_DECL: _String2 (Line: 114, Col: 24)
|—CursorKind.FUNCTION_DECL: _strcoll_l(const char *, const char *, _locale_t) (Line: 118, Col: 22)
|——CursorKind.PARM_DECL: _String1 (Line: 119, Col: 26)
|——CursorKind.PARM_DECL: _String2 (Line: 120, Col: 26)
|——CursorKind.PARM_DECL: _Locale (Line: 121, Col: 26)
|———CursorKind.TYPE_REF: _locale_t (Line: 121, Col: 14)
|—CursorKind.FUNCTION_DECL: strcpy(char *, const char *) (Line: 130, Col: 1)
|——CursorKind.UNEXPOSED_ATTR:  (Line: 130, Col: 1)
|——CursorKind.PARM_DECL: _Destination (Line: 130, Col: 1)
|——CursorKind.PARM_DECL: _Source (Line: 130, Col: 1)
|—CursorKind.FUNCTION_DECL: strcspn(const char *, const char *) (Line: 137, Col: 25)
|——CursorKind.TYPE_REF: size_t (Line: 137, Col: 10)
|——CursorKind.PARM_DECL: _Str (Line: 138, Col: 24)
|——CursorKind.PARM_DECL: _Control (Line: 139, Col: 24)
|—CursorKind.FUNCTION_DECL: _strdup(const char *) (Line: 148, Col: 38)
|——CursorKind.UNEXPOSED_ATTR:  (Line: 148, Col: 10)
|——CursorKind.PARM_DECL: _Source (Line: 149, Col: 28)
|—CursorKind.FUNCTION_DECL: _strerror(const char *) (Line: 159, Col: 25)
|——CursorKind.UNEXPOSED_ATTR:  (Line: 158, Col: 16)
|——CursorKind.PARM_DECL: _ErrorMessage (Line: 160, Col: 28)
|—CursorKind.FUNCTION_DECL: _strerror_s(char *, size_t, const char *) (Line: 164, Col: 26)
|——CursorKind.TYPE_REF: errno_t (Line: 164, Col: 10)
|——CursorKind.PARM_DECL: _Buffer (Line: 165, Col: 46)
|——CursorKind.PARM_DECL: _SizeInBytes (Line: 166, Col: 46)
|———CursorKind.TYPE_REF: size_t (Line: 166, Col: 34)
|——CursorKind.PARM_DECL: _ErrorMessage (Line: 167, Col: 46)
|—CursorKind.FUNCTION_DECL: strerror(int) (Line: 178, Col: 24)
|——CursorKind.UNEXPOSED_ATTR:  (Line: 177, Col: 16)
|——CursorKind.PARM_DECL: _ErrorMessage (Line: 179, Col: 14)
|—CursorKind.FUNCTION_DECL: _stricmp(const char *, const char *) (Line: 189, Col: 22)
|——CursorKind.PARM_DECL: _String1 (Line: 190, Col: 24)
|——CursorKind.PARM_DECL: _String2 (Line: 191, Col: 24)
|—CursorKind.FUNCTION_DECL: _stricoll(const char *, const char *) (Line: 195, Col: 22)
|——CursorKind.PARM_DECL: _String1 (Line: 196, Col: 24)
|——CursorKind.PARM_DECL: _String2 (Line: 197, Col: 24)
|—CursorKind.FUNCTION_DECL: _stricoll_l(const char *, const char *, _locale_t) (Line: 201, Col: 22)
|——CursorKind.PARM_DECL: _String1 (Line: 202, Col: 26)
|——CursorKind.PARM_DECL: _String2 (Line: 203, Col: 26)
|——CursorKind.PARM_DECL: _Locale (Line: 204, Col: 26)
|———CursorKind.TYPE_REF: _locale_t (Line: 204, Col: 14)
|—CursorKind.FUNCTION_DECL: _stricmp_l(const char *, const char *, _locale_t) (Line: 208, Col: 22)
|——CursorKind.PARM_DECL: _String1 (Line: 209, Col: 26)
|——CursorKind.PARM_DECL: _String2 (Line: 210, Col: 26)
|——CursorKind.PARM_DECL: _Locale (Line: 211, Col: 26)
|———CursorKind.TYPE_REF: _locale_t (Line: 211, Col: 14)
|—CursorKind.FUNCTION_DECL: strlen(const char *) (Line: 215, Col: 16)
|——CursorKind.TYPE_REF: size_t (Line: 215, Col: 1)
|——CursorKind.PARM_DECL: _Str (Line: 216, Col: 24)
|—CursorKind.FUNCTION_DECL: _strlwr_s(char *, size_t) (Line: 220, Col: 26)
|——CursorKind.TYPE_REF: errno_t (Line: 220, Col: 10)
|——CursorKind.PARM_DECL: _String (Line: 221, Col: 37)
|——CursorKind.PARM_DECL: _Size (Line: 222, Col: 37)
|———CursorKind.TYPE_REF: size_t (Line: 222, Col: 30)
|—CursorKind.FUNCTION_DECL: _strlwr(char *) (Line: 230, Col: 1)
|——CursorKind.UNEXPOSED_ATTR:  (Line: 230, Col: 1)
|——CursorKind.PARM_DECL: _String (Line: 230, Col: 1)
|—CursorKind.FUNCTION_DECL: _strlwr_s_l(char *, size_t, _locale_t) (Line: 236, Col: 26)
|——CursorKind.TYPE_REF: errno_t (Line: 236, Col: 10)
|——CursorKind.PARM_DECL: _String (Line: 237, Col: 40)
|——CursorKind.PARM_DECL: _Size (Line: 238, Col: 40)
|———CursorKind.TYPE_REF: size_t (Line: 238, Col: 30)
|——CursorKind.PARM_DECL: _Locale (Line: 239, Col: 40)
|———CursorKind.TYPE_REF: _locale_t (Line: 239, Col: 30)
|—CursorKind.FUNCTION_DECL: _strlwr_l(char *, _locale_t) (Line: 248, Col: 1)
|——CursorKind.UNEXPOSED_ATTR:  (Line: 248, Col: 1)
|——CursorKind.PARM_DECL: _String (Line: 248, Col: 1)
|——CursorKind.PARM_DECL: _Locale (Line: 248, Col: 1)
|———CursorKind.TYPE_REF: _locale_t (Line: 248, Col: 1)
|—CursorKind.FUNCTION_DECL: strncat(char *, const char *, size_t) (Line: 262, Col: 1)
|——CursorKind.UNEXPOSED_ATTR:  (Line: 262, Col: 1)
|——CursorKind.PARM_DECL: _Destination (Line: 262, Col: 1)
|——CursorKind.PARM_DECL: _Source (Line: 262, Col: 1)
|——CursorKind.PARM_DECL: _Count (Line: 262, Col: 1)
|———CursorKind.TYPE_REF: size_t (Line: 262, Col: 1)
|—CursorKind.FUNCTION_DECL: strncmp(const char *, const char *, size_t) (Line: 271, Col: 22)
|——CursorKind.PARM_DECL: _Str1 (Line: 272, Col: 44)
|——CursorKind.PARM_DECL: _Str2 (Line: 273, Col: 44)
|——CursorKind.PARM_DECL: _MaxCount (Line: 274, Col: 44)
|———CursorKind.TYPE_REF: size_t (Line: 274, Col: 32)
|—CursorKind.FUNCTION_DECL: _strnicmp(const char *, const char *, size_t) (Line: 278, Col: 22)
|——CursorKind.PARM_DECL: _String1 (Line: 279, Col: 44)
|——CursorKind.PARM_DECL: _String2 (Line: 280, Col: 44)
|——CursorKind.PARM_DECL: _MaxCount (Line: 281, Col: 44)
|———CursorKind.TYPE_REF: size_t (Line: 281, Col: 32)
|—CursorKind.FUNCTION_DECL: _strnicmp_l(const char *, const char *, size_t, _locale_t) (Line: 285, Col: 22)
|——CursorKind.PARM_DECL: _String1 (Line: 286, Col: 44)
|——CursorKind.PARM_DECL: _String2 (Line: 287, Col: 44)
|——CursorKind.PARM_DECL: _MaxCount (Line: 288, Col: 44)
|———CursorKind.TYPE_REF: size_t (Line: 288, Col: 32)
|——CursorKind.PARM_DECL: _Locale (Line: 289, Col: 44)
|———CursorKind.TYPE_REF: _locale_t (Line: 289, Col: 32)
|—CursorKind.FUNCTION_DECL: _strnicoll(const char *, const char *, size_t) (Line: 293, Col: 22)
|——CursorKind.PARM_DECL: _String1 (Line: 294, Col: 44)
|——CursorKind.PARM_DECL: _String2 (Line: 295, Col: 44)
|——CursorKind.PARM_DECL: _MaxCount (Line: 296, Col: 44)
|———CursorKind.TYPE_REF: size_t (Line: 296, Col: 32)
|—CursorKind.FUNCTION_DECL: _strnicoll_l(const char *, const char *, size_t, _locale_t) (Line: 300, Col: 22)
|——CursorKind.PARM_DECL: _String1 (Line: 301, Col: 44)
|——CursorKind.PARM_DECL: _String2 (Line: 302, Col: 44)
|——CursorKind.PARM_DECL: _MaxCount (Line: 303, Col: 44)
|———CursorKind.TYPE_REF: size_t (Line: 303, Col: 32)
|——CursorKind.PARM_DECL: _Locale (Line: 304, Col: 44)
|———CursorKind.TYPE_REF: _locale_t (Line: 304, Col: 32)
|—CursorKind.FUNCTION_DECL: _strncoll(const char *, const char *, size_t) (Line: 308, Col: 22)
|——CursorKind.PARM_DECL: _String1 (Line: 309, Col: 44)
|——CursorKind.PARM_DECL: _String2 (Line: 310, Col: 44)
|——CursorKind.PARM_DECL: _MaxCount (Line: 311, Col: 44)
|———CursorKind.TYPE_REF: size_t (Line: 311, Col: 32)
|—CursorKind.FUNCTION_DECL: _strncoll_l(const char *, const char *, size_t, _locale_t) (Line: 315, Col: 22)
|——CursorKind.PARM_DECL: _String1 (Line: 316, Col: 44)
|——CursorKind.PARM_DECL: _String2 (Line: 317, Col: 44)
|——CursorKind.PARM_DECL: _MaxCount (Line: 318, Col: 44)
|———CursorKind.TYPE_REF: size_t (Line: 318, Col: 32)
|——CursorKind.PARM_DECL: _Locale (Line: 319, Col: 44)
|———CursorKind.TYPE_REF: _locale_t (Line: 319, Col: 32)
|—CursorKind.FUNCTION_DECL: __strncnt(const char *, size_t) (Line: 322, Col: 25)
|——CursorKind.TYPE_REF: size_t (Line: 322, Col: 10)
|——CursorKind.PARM_DECL: _String (Line: 323, Col: 41)
|——CursorKind.PARM_DECL: _Count (Line: 324, Col: 41)
|———CursorKind.TYPE_REF: size_t (Line: 324, Col: 29)
|—CursorKind.FUNCTION_DECL: strncpy(char *, const char *, size_t) (Line: 334, Col: 1)
|——CursorKind.UNEXPOSED_ATTR:  (Line: 334, Col: 1)
|——CursorKind.PARM_DECL: _Destination (Line: 334, Col: 1)
|——CursorKind.PARM_DECL: _Source (Line: 334, Col: 1)
|——CursorKind.PARM_DECL: _Count (Line: 334, Col: 1)
|———CursorKind.TYPE_REF: size_t (Line: 334, Col: 1)
|—CursorKind.FUNCTION_DECL: strnlen(const char *, size_t) (Line: 351, Col: 25)
|——CursorKind.TYPE_REF: size_t (Line: 351, Col: 10)
|——CursorKind.PARM_DECL: _String (Line: 352, Col: 44)
|——CursorKind.PARM_DECL: _MaxCount (Line: 353, Col: 44)
|———CursorKind.TYPE_REF: size_t (Line: 353, Col: 32)
|—CursorKind.FUNCTION_DECL: strnlen_s(const char *, size_t) (Line: 367, Col: 38)
|——CursorKind.TYPE_REF: size_t (Line: 367, Col: 21)
|——CursorKind.PARM_DECL: _String (Line: 368, Col: 48)
|——CursorKind.PARM_DECL: _MaxCount (Line: 369, Col: 48)
|———CursorKind.TYPE_REF: size_t (Line: 369, Col: 36)
|——CursorKind.COMPOUND_STMT:  (Line: 371, Col: 5)
|———CursorKind.RETURN_STMT:  (Line: 372, Col: 9)
|————CursorKind.CONDITIONAL_OPERATOR:  (Line: 372, Col: 16)
|—————CursorKind.BINARY_OPERATOR:  (Line: 372, Col: 16)
|——————CursorKind.UNEXPOSED_EXPR: _String (Line: 372, Col: 16)
|———————CursorKind.DECL_REF_EXPR: _String (Line: 372, Col: 16)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 372, Col: 27)
|———————CursorKind.INTEGER_LITERAL:  (Line: 372, Col: 27)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 372, Col: 31)
|——————CursorKind.INTEGER_LITERAL:  (Line: 372, Col: 31)
|—————CursorKind.CALL_EXPR: strnlen (Line: 372, Col: 35)
|——————CursorKind.UNEXPOSED_EXPR: strnlen (Line: 372, Col: 35)
|———————CursorKind.DECL_REF_EXPR: strnlen (Line: 372, Col: 35)
|——————CursorKind.UNEXPOSED_EXPR: _String (Line: 372, Col: 43)
|———————CursorKind.DECL_REF_EXPR: _String (Line: 372, Col: 43)
|——————CursorKind.UNEXPOSED_EXPR: _MaxCount (Line: 372, Col: 52)
|———————CursorKind.DECL_REF_EXPR: _MaxCount (Line: 372, Col: 52)
|—CursorKind.FUNCTION_DECL: _strnset_s(char *, size_t, int, size_t) (Line: 378, Col: 26)
|——CursorKind.TYPE_REF: errno_t (Line: 378, Col: 10)
|——CursorKind.PARM_DECL: _String (Line: 379, Col: 44)
|——CursorKind.PARM_DECL: _SizeInBytes (Line: 380, Col: 44)
|———CursorKind.TYPE_REF: size_t (Line: 380, Col: 37)
|——CursorKind.PARM_DECL: _Value (Line: 381, Col: 44)
|——CursorKind.PARM_DECL: _MaxCount (Line: 382, Col: 44)
|———CursorKind.TYPE_REF: size_t (Line: 382, Col: 37)
|—CursorKind.FUNCTION_DECL: _strnset(char *, int, size_t) (Line: 392, Col: 1)
|——CursorKind.UNEXPOSED_ATTR:  (Line: 392, Col: 1)
|——CursorKind.PARM_DECL: _Destination (Line: 392, Col: 1)
|——CursorKind.PARM_DECL: _Value (Line: 392, Col: 1)
|——CursorKind.PARM_DECL: _Count (Line: 392, Col: 1)
|———CursorKind.TYPE_REF: size_t (Line: 392, Col: 1)
|—CursorKind.FUNCTION_DECL: strpbrk(const char *, const char *) (Line: 401, Col: 38)
|——CursorKind.PARM_DECL: _Str (Line: 402, Col: 24)
|——CursorKind.PARM_DECL: _Control (Line: 403, Col: 24)
|—CursorKind.FUNCTION_DECL: _strrev(char *) (Line: 406, Col: 24)
|——CursorKind.PARM_DECL: _Str (Line: 407, Col: 21)
|—CursorKind.FUNCTION_DECL: _strset_s(char *, size_t, int) (Line: 411, Col: 26)
|——CursorKind.TYPE_REF: errno_t (Line: 411, Col: 10)
|——CursorKind.PARM_DECL: _Destination (Line: 412, Col: 48)
|——CursorKind.PARM_DECL: _DestinationSize (Line: 413, Col: 48)
|———CursorKind.TYPE_REF: size_t (Line: 413, Col: 41)
|——CursorKind.PARM_DECL: _Value (Line: 414, Col: 48)
|—CursorKind.FUNCTION_DECL: _strset(char *, int) (Line: 423, Col: 1)
|——CursorKind.UNEXPOSED_ATTR:  (Line: 423, Col: 1)
|——CursorKind.PARM_DECL: _Destination (Line: 423, Col: 1)
|——CursorKind.PARM_DECL: _Value (Line: 423, Col: 1)
|—CursorKind.FUNCTION_DECL: strspn(const char *, const char *) (Line: 430, Col: 25)
|——CursorKind.TYPE_REF: size_t (Line: 430, Col: 10)
|——CursorKind.PARM_DECL: _Str (Line: 431, Col: 24)
|——CursorKind.PARM_DECL: _Control (Line: 432, Col: 24)
|—CursorKind.FUNCTION_DECL: strtok(char *, const char *) (Line: 436, Col: 24)
|——CursorKind.UNEXPOSED_ATTR:  (Line: 435, Col: 16)
|——CursorKind.PARM_DECL: _String (Line: 437, Col: 31)
|——CursorKind.PARM_DECL: _Delimiter (Line: 438, Col: 31)
|—CursorKind.FUNCTION_DECL: _strupr_s(char *, size_t) (Line: 442, Col: 26)
|——CursorKind.TYPE_REF: errno_t (Line: 442, Col: 10)
|——CursorKind.PARM_DECL: _String (Line: 443, Col: 37)
|——CursorKind.PARM_DECL: _Size (Line: 444, Col: 37)
|———CursorKind.TYPE_REF: size_t (Line: 444, Col: 30)
|—CursorKind.FUNCTION_DECL: _strupr(char *) (Line: 452, Col: 1)
|——CursorKind.UNEXPOSED_ATTR:  (Line: 452, Col: 1)
|——CursorKind.PARM_DECL: _String (Line: 452, Col: 1)
|—CursorKind.FUNCTION_DECL: _strupr_s_l(char *, size_t, _locale_t) (Line: 458, Col: 26)
|——CursorKind.TYPE_REF: errno_t (Line: 458, Col: 10)
|——CursorKind.PARM_DECL: _String (Line: 459, Col: 40)
|——CursorKind.PARM_DECL: _Size (Line: 460, Col: 40)
|———CursorKind.TYPE_REF: size_t (Line: 460, Col: 30)
|——CursorKind.PARM_DECL: _Locale (Line: 461, Col: 40)
|———CursorKind.TYPE_REF: _locale_t (Line: 461, Col: 30)
|—CursorKind.FUNCTION_DECL: _strupr_l(char *, _locale_t) (Line: 470, Col: 1)
|——CursorKind.UNEXPOSED_ATTR:  (Line: 470, Col: 1)
|——CursorKind.PARM_DECL: _String (Line: 470, Col: 1)
|——CursorKind.PARM_DECL: _Locale (Line: 470, Col: 1)
|———CursorKind.TYPE_REF: _locale_t (Line: 470, Col: 1)
|—CursorKind.FUNCTION_DECL: strxfrm(char *, const char *, size_t) (Line: 479, Col: 25)
|——CursorKind.TYPE_REF: size_t (Line: 479, Col: 10)
|——CursorKind.PARM_DECL: _Destination (Line: 480, Col: 59)
|——CursorKind.PARM_DECL: _Source (Line: 481, Col: 59)
|——CursorKind.PARM_DECL: _MaxCount (Line: 482, Col: 59)
|———CursorKind.TYPE_REF: size_t (Line: 482, Col: 47)
|—CursorKind.FUNCTION_DECL: _strxfrm_l(char *, const char *, size_t, _locale_t) (Line: 487, Col: 25)
|——CursorKind.TYPE_REF: size_t (Line: 487, Col: 10)
|——CursorKind.PARM_DECL: _Destination (Line: 488, Col: 59)
|——CursorKind.PARM_DECL: _Source (Line: 489, Col: 59)
|——CursorKind.PARM_DECL: _MaxCount (Line: 490, Col: 59)
|———CursorKind.TYPE_REF: size_t (Line: 490, Col: 47)
|——CursorKind.PARM_DECL: _Locale (Line: 491, Col: 59)
|———CursorKind.TYPE_REF: _locale_t (Line: 491, Col: 47)
|—CursorKind.FUNCTION_DECL: strdup(const char *) (Line: 532, Col: 28)
|——CursorKind.UNEXPOSED_ATTR:  (Line: 531, Col: 20)
|——CursorKind.PARM_DECL: _String (Line: 533, Col: 32)
|—CursorKind.FUNCTION_DECL: strcmpi(const char *, const char *) (Line: 539, Col: 26)
|——CursorKind.UNEXPOSED_ATTR:  (Line: 538, Col: 20)
|——CursorKind.PARM_DECL: _String1 (Line: 540, Col: 28)
|——CursorKind.PARM_DECL: _String2 (Line: 541, Col: 28)
|—CursorKind.FUNCTION_DECL: stricmp(const char *, const char *) (Line: 545, Col: 26)
|——CursorKind.UNEXPOSED_ATTR:  (Line: 544, Col: 20)
|——CursorKind.PARM_DECL: _String1 (Line: 546, Col: 28)
|——CursorKind.PARM_DECL: _String2 (Line: 547, Col: 28)
|—CursorKind.FUNCTION_DECL: strlwr(char *) (Line: 551, Col: 28)
|——CursorKind.UNEXPOSED_ATTR:  (Line: 550, Col: 5)
|——CursorKind.PARM_DECL: _String (Line: 552, Col: 25)
|—CursorKind.FUNCTION_DECL: strnicmp(const char *, const char *, size_t) (Line: 556, Col: 26)
|——CursorKind.UNEXPOSED_ATTR:  (Line: 555, Col: 20)
|——CursorKind.PARM_DECL: _String1 (Line: 557, Col: 48)
|——CursorKind.PARM_DECL: _String2 (Line: 558, Col: 48)
|——CursorKind.PARM_DECL: _MaxCount (Line: 559, Col: 48)
|———CursorKind.TYPE_REF: size_t (Line: 559, Col: 36)
|—CursorKind.FUNCTION_DECL: strnset(char *, int, size_t) (Line: 563, Col: 28)
|——CursorKind.UNEXPOSED_ATTR:  (Line: 562, Col: 5)
|——CursorKind.PARM_DECL: _String (Line: 564, Col: 45)
|——CursorKind.PARM_DECL: _Value (Line: 565, Col: 45)
|——CursorKind.PARM_DECL: _MaxCount (Line: 566, Col: 45)
|———CursorKind.TYPE_REF: size_t (Line: 566, Col: 38)
|—CursorKind.FUNCTION_DECL: strrev(char *) (Line: 570, Col: 28)
|——CursorKind.UNEXPOSED_ATTR:  (Line: 569, Col: 5)
|——CursorKind.PARM_DECL: _String (Line: 571, Col: 25)
|—CursorKind.FUNCTION_DECL: strset(char *, int) (Line: 575, Col: 19)
|——CursorKind.UNEXPOSED_ATTR:  (Line: 574, Col: 5)
|——CursorKind.PARM_DECL: _String (Line: 576, Col: 25)
|——CursorKind.PARM_DECL: _Value (Line: 577, Col: 25)
|—CursorKind.FUNCTION_DECL: strupr(char *) (Line: 580, Col: 28)
|——CursorKind.UNEXPOSED_ATTR:  (Line: 579, Col: 5)
|——CursorKind.PARM_DECL: _String (Line: 581, Col: 25)
|—CursorKind.FUNCTION_DECL: writel(void *, uint32_t) (Line: 29, Col: 20)
|——CursorKind.PARM_DECL: addr (Line: 29, Col: 33)
|——CursorKind.PARM_DECL: val (Line: 29, Col: 48)
|———CursorKind.TYPE_REF: uint32_t (Line: 29, Col: 39)
|——CursorKind.COMPOUND_STMT:  (Line: 29, Col: 53)
|———CursorKind.ASM_STMT:  (Line: 30, Col: 5)
|———CursorKind.BINARY_OPERATOR:  (Line: 31, Col: 5)
|————CursorKind.UNARY_OPERATOR:  (Line: 31, Col: 5)
|—————CursorKind.CSTYLE_CAST_EXPR:  (Line: 31, Col: 6)
|——————CursorKind.TYPE_REF: uint32_t (Line: 31, Col: 16)
|——————CursorKind.UNEXPOSED_EXPR: addr (Line: 31, Col: 27)
|———————CursorKind.DECL_REF_EXPR: addr (Line: 31, Col: 27)
|————CursorKind.UNEXPOSED_EXPR: val (Line: 31, Col: 34)
|—————CursorKind.DECL_REF_EXPR: val (Line: 31, Col: 34)
|—CursorKind.FUNCTION_DECL: readl(const void *) (Line: 33, Col: 24)
|——CursorKind.TYPE_REF: uint32_t (Line: 33, Col: 15)
|——CursorKind.PARM_DECL: addr (Line: 33, Col: 42)
|——CursorKind.COMPOUND_STMT:  (Line: 33, Col: 48)
|———CursorKind.DECL_STMT:  (Line: 34, Col: 5)
|————CursorKind.VAR_DECL: val (Line: 34, Col: 14)
|—————CursorKind.TYPE_REF: uint32_t (Line: 34, Col: 5)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 34, Col: 20)
|——————CursorKind.UNARY_OPERATOR:  (Line: 34, Col: 20)
|———————CursorKind.CSTYLE_CAST_EXPR:  (Line: 34, Col: 21)
|————————CursorKind.TYPE_REF: uint32_t (Line: 34, Col: 37)
|————————CursorKind.UNEXPOSED_EXPR: addr (Line: 34, Col: 48)
|—————————CursorKind.DECL_REF_EXPR: addr (Line: 34, Col: 48)
|———CursorKind.ASM_STMT:  (Line: 35, Col: 5)
|———CursorKind.RETURN_STMT:  (Line: 36, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: val (Line: 36, Col: 12)
|—————CursorKind.DECL_REF_EXPR: val (Line: 36, Col: 12)
|—CursorKind.FUNCTION_DECL: rp2040_clear_reset(uint32_t) (Line: 41, Col: 1)
|——CursorKind.PARM_DECL: reset_bit (Line: 41, Col: 29)
|———CursorKind.TYPE_REF: uint32_t (Line: 41, Col: 20)
|——CursorKind.COMPOUND_STMT:  (Line: 42, Col: 1)
|———CursorKind.IF_STMT:  (Line: 43, Col: 5)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 43, Col: 9)
|————CursorKind.COMPOUND_STMT:  (Line: 43, Col: 39)
|—————CursorKind.WHILE_STMT:  (Line: 46, Col: 9)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 46, Col: 16)
|——————CursorKind.NULL_STMT:  (Line: 47, Col: 13)
|—CursorKind.FUNCTION_DECL: rp2040_gpio_peripheral(uint32_t, int, int) (Line: 53, Col: 1)
|——CursorKind.PARM_DECL: gpio (Line: 53, Col: 33)
|———CursorKind.TYPE_REF: uint32_t (Line: 53, Col: 24)
|——CursorKind.PARM_DECL: func (Line: 53, Col: 43)
|——CursorKind.PARM_DECL: pull_up (Line: 53, Col: 53)
|——CursorKind.COMPOUND_STMT:  (Line: 54, Col: 1)
|—CursorKind.VAR_DECL: can2040_program_instructions (Line: 82, Col: 23)
|——CursorKind.TYPE_REF: uint16_t (Line: 82, Col: 14)
|——CursorKind.INIT_LIST_EXPR:  (Line: 82, Col: 56)
|———CursorKind.UNEXPOSED_EXPR:  (Line: 83, Col: 5)
|————CursorKind.INTEGER_LITERAL:  (Line: 83, Col: 5)
|———CursorKind.UNEXPOSED_EXPR:  (Line: 84, Col: 5)
|————CursorKind.INTEGER_LITERAL:  (Line: 84, Col: 5)
|———CursorKind.UNEXPOSED_EXPR:  (Line: 85, Col: 5)
|————CursorKind.INTEGER_LITERAL:  (Line: 85, Col: 5)
|———CursorKind.UNEXPOSED_EXPR:  (Line: 86, Col: 5)
|————CursorKind.INTEGER_LITERAL:  (Line: 86, Col: 5)
|———CursorKind.UNEXPOSED_EXPR:  (Line: 87, Col: 5)
|————CursorKind.INTEGER_LITERAL:  (Line: 87, Col: 5)
|———CursorKind.UNEXPOSED_EXPR:  (Line: 88, Col: 5)
|————CursorKind.INTEGER_LITERAL:  (Line: 88, Col: 5)
|———CursorKind.UNEXPOSED_EXPR:  (Line: 89, Col: 5)
|————CursorKind.INTEGER_LITERAL:  (Line: 89, Col: 5)
|———CursorKind.UNEXPOSED_EXPR:  (Line: 90, Col: 5)
|————CursorKind.INTEGER_LITERAL:  (Line: 90, Col: 5)
|———CursorKind.UNEXPOSED_EXPR:  (Line: 91, Col: 5)
|————CursorKind.INTEGER_LITERAL:  (Line: 91, Col: 5)
|———CursorKind.UNEXPOSED_EXPR:  (Line: 92, Col: 5)
|————CursorKind.INTEGER_LITERAL:  (Line: 92, Col: 5)
|———CursorKind.UNEXPOSED_EXPR:  (Line: 93, Col: 5)
|————CursorKind.INTEGER_LITERAL:  (Line: 93, Col: 5)
|———CursorKind.UNEXPOSED_EXPR:  (Line: 94, Col: 5)
|————CursorKind.INTEGER_LITERAL:  (Line: 94, Col: 5)
|———CursorKind.UNEXPOSED_EXPR:  (Line: 95, Col: 5)
|————CursorKind.INTEGER_LITERAL:  (Line: 95, Col: 5)
|———CursorKind.UNEXPOSED_EXPR:  (Line: 96, Col: 5)
|————CursorKind.INTEGER_LITERAL:  (Line: 96, Col: 5)
|———CursorKind.UNEXPOSED_EXPR:  (Line: 97, Col: 5)
|————CursorKind.INTEGER_LITERAL:  (Line: 97, Col: 5)
|———CursorKind.UNEXPOSED_EXPR:  (Line: 98, Col: 5)
|————CursorKind.INTEGER_LITERAL:  (Line: 98, Col: 5)
|———CursorKind.UNEXPOSED_EXPR:  (Line: 99, Col: 5)
|————CursorKind.INTEGER_LITERAL:  (Line: 99, Col: 5)
|———CursorKind.UNEXPOSED_EXPR:  (Line: 100, Col: 5)
|————CursorKind.INTEGER_LITERAL:  (Line: 100, Col: 5)
|———CursorKind.UNEXPOSED_EXPR:  (Line: 101, Col: 5)
|————CursorKind.INTEGER_LITERAL:  (Line: 101, Col: 5)
|———CursorKind.UNEXPOSED_EXPR:  (Line: 102, Col: 5)
|————CursorKind.INTEGER_LITERAL:  (Line: 102, Col: 5)
|———CursorKind.UNEXPOSED_EXPR:  (Line: 103, Col: 5)
|————CursorKind.INTEGER_LITERAL:  (Line: 103, Col: 5)
|———CursorKind.UNEXPOSED_EXPR:  (Line: 104, Col: 5)
|————CursorKind.INTEGER_LITERAL:  (Line: 104, Col: 5)
|———CursorKind.UNEXPOSED_EXPR:  (Line: 105, Col: 5)
|————CursorKind.INTEGER_LITERAL:  (Line: 105, Col: 5)
|———CursorKind.UNEXPOSED_EXPR:  (Line: 106, Col: 5)
|————CursorKind.INTEGER_LITERAL:  (Line: 106, Col: 5)
|———CursorKind.UNEXPOSED_EXPR:  (Line: 107, Col: 5)
|————CursorKind.INTEGER_LITERAL:  (Line: 107, Col: 5)
|———CursorKind.UNEXPOSED_EXPR:  (Line: 108, Col: 5)
|————CursorKind.INTEGER_LITERAL:  (Line: 108, Col: 5)
|———CursorKind.UNEXPOSED_EXPR:  (Line: 109, Col: 5)
|————CursorKind.INTEGER_LITERAL:  (Line: 109, Col: 5)
|———CursorKind.UNEXPOSED_EXPR:  (Line: 110, Col: 5)
|————CursorKind.INTEGER_LITERAL:  (Line: 110, Col: 5)
|———CursorKind.UNEXPOSED_EXPR:  (Line: 111, Col: 5)
|————CursorKind.INTEGER_LITERAL:  (Line: 111, Col: 5)
|———CursorKind.UNEXPOSED_EXPR:  (Line: 112, Col: 5)
|————CursorKind.INTEGER_LITERAL:  (Line: 112, Col: 5)
|———CursorKind.UNEXPOSED_EXPR:  (Line: 113, Col: 5)
|————CursorKind.INTEGER_LITERAL:  (Line: 113, Col: 5)
|———CursorKind.UNEXPOSED_EXPR:  (Line: 114, Col: 5)
|————CursorKind.INTEGER_LITERAL:  (Line: 114, Col: 5)
|—CursorKind.FUNCTION_DECL: pio_sync_setup(struct can2040 *) (Line: 119, Col: 1)
|——CursorKind.PARM_DECL: cd (Line: 119, Col: 32)
|———CursorKind.TYPE_REF: struct can2040 (Line: 119, Col: 23)
|——CursorKind.COMPOUND_STMT:  (Line: 120, Col: 1)
|———CursorKind.DECL_STMT:  (Line: 122, Col: 5)
|————CursorKind.STRUCT_DECL: pio_sm_hw (Line: 122, Col: 12)
|————CursorKind.VAR_DECL: sm (Line: 122, Col: 23)
|—————CursorKind.TYPE_REF: struct pio_sm_hw (Line: 122, Col: 12)
|———CursorKind.BINARY_OPERATOR:  (Line: 130, Col: 5)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 130, Col: 5)
|—————CursorKind.DECL_REF_EXPR: sm (Line: 130, Col: 5)
|————CursorKind.INTEGER_LITERAL:  (Line: 130, Col: 17)
|———CursorKind.BINARY_OPERATOR:  (Line: 131, Col: 5)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 131, Col: 5)
|—————CursorKind.DECL_REF_EXPR: sm (Line: 131, Col: 5)
|————CursorKind.INTEGER_LITERAL:  (Line: 131, Col: 19)
|———CursorKind.BINARY_OPERATOR:  (Line: 133, Col: 5)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 133, Col: 5)
|—————CursorKind.DECL_REF_EXPR: sm (Line: 133, Col: 5)
|————CursorKind.INTEGER_LITERAL:  (Line: 133, Col: 17)
|———CursorKind.BINARY_OPERATOR:  (Line: 134, Col: 5)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 134, Col: 5)
|—————CursorKind.DECL_REF_EXPR: sm (Line: 134, Col: 5)
|————CursorKind.INTEGER_LITERAL:  (Line: 134, Col: 17)
|—CursorKind.FUNCTION_DECL: pio_rx_setup(struct can2040 *) (Line: 139, Col: 1)
|——CursorKind.PARM_DECL: cd (Line: 139, Col: 30)
|———CursorKind.TYPE_REF: struct can2040 (Line: 139, Col: 21)
|——CursorKind.COMPOUND_STMT:  (Line: 140, Col: 1)
|———CursorKind.DECL_STMT:  (Line: 142, Col: 5)
|————CursorKind.STRUCT_DECL: pio_sm_hw (Line: 142, Col: 12)
|————CursorKind.VAR_DECL: sm (Line: 142, Col: 23)
|—————CursorKind.TYPE_REF: struct pio_sm_hw (Line: 142, Col: 12)
|———CursorKind.BINARY_OPERATOR:  (Line: 147, Col: 5)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 147, Col: 5)
|—————CursorKind.DECL_REF_EXPR: sm (Line: 147, Col: 5)
|————CursorKind.INTEGER_LITERAL:  (Line: 147, Col: 21)
|———CursorKind.BINARY_OPERATOR:  (Line: 151, Col: 5)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 151, Col: 5)
|—————CursorKind.DECL_REF_EXPR: sm (Line: 151, Col: 5)
|————CursorKind.INTEGER_LITERAL:  (Line: 151, Col: 17)
|—CursorKind.FUNCTION_DECL: pio_ack_setup(struct can2040 *) (Line: 156, Col: 1)
|——CursorKind.PARM_DECL: cd (Line: 156, Col: 31)
|———CursorKind.TYPE_REF: struct can2040 (Line: 156, Col: 22)
|——CursorKind.COMPOUND_STMT:  (Line: 157, Col: 1)
|———CursorKind.DECL_STMT:  (Line: 159, Col: 5)
|————CursorKind.STRUCT_DECL: pio_sm_hw (Line: 159, Col: 12)
|————CursorKind.VAR_DECL: sm (Line: 159, Col: 23)
|—————CursorKind.TYPE_REF: struct pio_sm_hw (Line: 159, Col: 12)
|———CursorKind.BINARY_OPERATOR:  (Line: 164, Col: 5)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 164, Col: 5)
|—————CursorKind.DECL_REF_EXPR: sm (Line: 164, Col: 5)
|————CursorKind.INTEGER_LITERAL:  (Line: 164, Col: 21)
|———CursorKind.BINARY_OPERATOR:  (Line: 165, Col: 5)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 165, Col: 5)
|—————CursorKind.DECL_REF_EXPR: sm (Line: 165, Col: 5)
|————CursorKind.INTEGER_LITERAL:  (Line: 165, Col: 17)
|———CursorKind.BINARY_OPERATOR:  (Line: 166, Col: 5)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 166, Col: 5)
|—————CursorKind.DECL_REF_EXPR: sm (Line: 166, Col: 5)
|————CursorKind.INTEGER_LITERAL:  (Line: 166, Col: 17)
|———CursorKind.BINARY_OPERATOR:  (Line: 167, Col: 5)
|————CursorKind.BINARY_OPERATOR:  (Line: 167, Col: 5)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 167, Col: 5)
|——————CursorKind.DECL_REF_EXPR: sm (Line: 167, Col: 5)
|—————CursorKind.INTEGER_LITERAL:  (Line: 167, Col: 17)
|————CursorKind.BINARY_OPERATOR:  (Line: 168, Col: 5)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 168, Col: 5)
|——————CursorKind.DECL_REF_EXPR: sm (Line: 168, Col: 5)
|—————CursorKind.INTEGER_LITERAL:  (Line: 168, Col: 17)
|—CursorKind.FUNCTION_DECL: pio_tx_setup(struct can2040 *) (Line: 173, Col: 1)
|——CursorKind.PARM_DECL: cd (Line: 173, Col: 30)
|———CursorKind.TYPE_REF: struct can2040 (Line: 173, Col: 21)
|——CursorKind.COMPOUND_STMT:  (Line: 174, Col: 1)
|———CursorKind.DECL_STMT:  (Line: 176, Col: 5)
|————CursorKind.STRUCT_DECL: pio_sm_hw (Line: 176, Col: 12)
|————CursorKind.VAR_DECL: sm (Line: 176, Col: 23)
|—————CursorKind.TYPE_REF: struct pio_sm_hw (Line: 176, Col: 12)
|———CursorKind.BINARY_OPERATOR:  (Line: 184, Col: 5)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 184, Col: 5)
|—————CursorKind.DECL_REF_EXPR: sm (Line: 184, Col: 5)
|————CursorKind.INTEGER_LITERAL:  (Line: 184, Col: 17)
|———CursorKind.BINARY_OPERATOR:  (Line: 185, Col: 5)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 185, Col: 5)
|—————CursorKind.DECL_REF_EXPR: sm (Line: 185, Col: 5)
|————CursorKind.INTEGER_LITERAL:  (Line: 185, Col: 17)
|—CursorKind.FUNCTION_DECL: pio_tx_did_conflict(struct can2040 *) (Line: 190, Col: 1)
|——CursorKind.PARM_DECL: cd (Line: 190, Col: 37)
|———CursorKind.TYPE_REF: struct can2040 (Line: 190, Col: 28)
|——CursorKind.COMPOUND_STMT:  (Line: 191, Col: 1)
|—CursorKind.FUNCTION_DECL: pio_tx_reset(struct can2040 *) (Line: 198, Col: 1)
|——CursorKind.PARM_DECL: cd (Line: 198, Col: 30)
|———CursorKind.TYPE_REF: struct can2040 (Line: 198, Col: 21)
|——CursorKind.COMPOUND_STMT:  (Line: 199, Col: 1)
|———CursorKind.DECL_STMT:  (Line: 205, Col: 5)
|————CursorKind.STRUCT_DECL: pio_sm_hw (Line: 205, Col: 12)
|————CursorKind.VAR_DECL: sm (Line: 205, Col: 23)
|—————CursorKind.TYPE_REF: struct pio_sm_hw (Line: 205, Col: 12)
|———CursorKind.BINARY_OPERATOR:  (Line: 206, Col: 5)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 206, Col: 5)
|—————CursorKind.DECL_REF_EXPR: sm (Line: 206, Col: 5)
|————CursorKind.INTEGER_LITERAL:  (Line: 206, Col: 21)
|—CursorKind.FUNCTION_DECL: pio_tx_send(struct can2040 *, uint32_t *, uint32_t) (Line: 213, Col: 1)
|——CursorKind.PARM_DECL: cd (Line: 213, Col: 29)
|———CursorKind.TYPE_REF: struct can2040 (Line: 213, Col: 20)
|——CursorKind.PARM_DECL: data (Line: 213, Col: 43)
|———CursorKind.TYPE_REF: uint32_t (Line: 213, Col: 33)
|——CursorKind.PARM_DECL: count (Line: 213, Col: 58)
|———CursorKind.TYPE_REF: uint32_t (Line: 213, Col: 49)
|——CursorKind.COMPOUND_STMT:  (Line: 214, Col: 1)
|———CursorKind.CALL_EXPR: pio_tx_reset (Line: 216, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: pio_tx_reset (Line: 216, Col: 5)
|—————CursorKind.DECL_REF_EXPR: pio_tx_reset (Line: 216, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: cd (Line: 216, Col: 18)
|—————CursorKind.UNEXPOSED_EXPR: cd (Line: 216, Col: 18)
|——————CursorKind.DECL_REF_EXPR: cd (Line: 216, Col: 18)
|———CursorKind.DECL_STMT:  (Line: 218, Col: 5)
|————CursorKind.VAR_DECL: i (Line: 218, Col: 9)
|———CursorKind.DECL_STMT:  (Line: 221, Col: 5)
|————CursorKind.STRUCT_DECL: pio_sm_hw (Line: 221, Col: 12)
|————CursorKind.VAR_DECL: sm (Line: 221, Col: 23)
|—————CursorKind.TYPE_REF: struct pio_sm_hw (Line: 221, Col: 12)
|———CursorKind.BINARY_OPERATOR:  (Line: 222, Col: 5)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 222, Col: 5)
|—————CursorKind.DECL_REF_EXPR: sm (Line: 222, Col: 5)
|————CursorKind.INTEGER_LITERAL:  (Line: 222, Col: 17)
|———CursorKind.BINARY_OPERATOR:  (Line: 223, Col: 5)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 223, Col: 5)
|—————CursorKind.DECL_REF_EXPR: sm (Line: 223, Col: 5)
|————CursorKind.INTEGER_LITERAL:  (Line: 223, Col: 17)
|———CursorKind.BINARY_OPERATOR:  (Line: 224, Col: 5)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 224, Col: 5)
|—————CursorKind.DECL_REF_EXPR: sm (Line: 224, Col: 5)
|————CursorKind.INTEGER_LITERAL:  (Line: 224, Col: 17)
|—CursorKind.FUNCTION_DECL: pio_ack_check(struct can2040 *, uint32_t, uint32_t) (Line: 230, Col: 1)
|——CursorKind.PARM_DECL: cd (Line: 230, Col: 31)
|———CursorKind.TYPE_REF: struct can2040 (Line: 230, Col: 22)
|——CursorKind.PARM_DECL: crc_bits (Line: 230, Col: 44)
|———CursorKind.TYPE_REF: uint32_t (Line: 230, Col: 35)
|——CursorKind.PARM_DECL: rx_bit_pos (Line: 230, Col: 63)
|———CursorKind.TYPE_REF: uint32_t (Line: 230, Col: 54)
|——CursorKind.COMPOUND_STMT:  (Line: 231, Col: 1)
|———CursorKind.DECL_STMT:  (Line: 233, Col: 5)
|————CursorKind.VAR_DECL: key (Line: 233, Col: 14)
|—————CursorKind.TYPE_REF: uint32_t (Line: 233, Col: 5)
|—————CursorKind.BINARY_OPERATOR:  (Line: 233, Col: 20)
|——————CursorKind.PAREN_EXPR:  (Line: 233, Col: 20)
|———————CursorKind.BINARY_OPERATOR:  (Line: 233, Col: 21)
|————————CursorKind.UNEXPOSED_EXPR: crc_bits (Line: 233, Col: 21)
|—————————CursorKind.DECL_REF_EXPR: crc_bits (Line: 233, Col: 21)
|————————CursorKind.UNEXPOSED_EXPR:  (Line: 233, Col: 32)
|—————————CursorKind.INTEGER_LITERAL:  (Line: 233, Col: 32)
|——————CursorKind.PAREN_EXPR:  (Line: 233, Col: 44)
|———————CursorKind.BINARY_OPERATOR:  (Line: 233, Col: 45)
|————————CursorKind.PAREN_EXPR:  (Line: 233, Col: 45)
|—————————CursorKind.UNARY_OPERATOR:  (Line: 233, Col: 46)
|——————————CursorKind.UNEXPOSED_EXPR: rx_bit_pos (Line: 233, Col: 47)
|———————————CursorKind.DECL_REF_EXPR: rx_bit_pos (Line: 233, Col: 47)
|————————CursorKind.INTEGER_LITERAL:  (Line: 233, Col: 62)
|—CursorKind.FUNCTION_DECL: pio_ack_inject(struct can2040 *, uint32_t, uint32_t) (Line: 243, Col: 1)
|——CursorKind.PARM_DECL: cd (Line: 243, Col: 32)
|———CursorKind.TYPE_REF: struct can2040 (Line: 243, Col: 23)
|——CursorKind.PARM_DECL: crc_bits (Line: 243, Col: 45)
|———CursorKind.TYPE_REF: uint32_t (Line: 243, Col: 36)
|——CursorKind.PARM_DECL: rx_bit_pos (Line: 243, Col: 64)
|———CursorKind.TYPE_REF: uint32_t (Line: 243, Col: 55)
|——CursorKind.COMPOUND_STMT:  (Line: 244, Col: 1)
|———CursorKind.CALL_EXPR: pio_tx_reset (Line: 246, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: pio_tx_reset (Line: 246, Col: 5)
|—————CursorKind.DECL_REF_EXPR: pio_tx_reset (Line: 246, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: cd (Line: 246, Col: 18)
|—————CursorKind.UNEXPOSED_EXPR: cd (Line: 246, Col: 18)
|——————CursorKind.DECL_REF_EXPR: cd (Line: 246, Col: 18)
|———CursorKind.DECL_STMT:  (Line: 249, Col: 5)
|————CursorKind.STRUCT_DECL: pio_sm_hw (Line: 249, Col: 12)
|————CursorKind.VAR_DECL: sm (Line: 249, Col: 23)
|—————CursorKind.TYPE_REF: struct pio_sm_hw (Line: 249, Col: 12)
|———CursorKind.BINARY_OPERATOR:  (Line: 250, Col: 5)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 250, Col: 5)
|—————CursorKind.DECL_REF_EXPR: sm (Line: 250, Col: 5)
|————CursorKind.INTEGER_LITERAL:  (Line: 250, Col: 17)
|———CursorKind.BINARY_OPERATOR:  (Line: 251, Col: 5)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 251, Col: 5)
|—————CursorKind.DECL_REF_EXPR: sm (Line: 251, Col: 5)
|————CursorKind.INTEGER_LITERAL:  (Line: 251, Col: 17)
|———CursorKind.BINARY_OPERATOR:  (Line: 252, Col: 5)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 252, Col: 5)
|—————CursorKind.DECL_REF_EXPR: sm (Line: 252, Col: 5)
|————CursorKind.INTEGER_LITERAL:  (Line: 252, Col: 17)
|———CursorKind.DECL_STMT:  (Line: 255, Col: 5)
|————CursorKind.VAR_DECL: key (Line: 255, Col: 14)
|—————CursorKind.TYPE_REF: uint32_t (Line: 255, Col: 5)
|—————CursorKind.BINARY_OPERATOR:  (Line: 255, Col: 20)
|——————CursorKind.PAREN_EXPR:  (Line: 255, Col: 20)
|———————CursorKind.BINARY_OPERATOR:  (Line: 255, Col: 21)
|————————CursorKind.UNEXPOSED_EXPR: crc_bits (Line: 255, Col: 21)
|—————————CursorKind.DECL_REF_EXPR: crc_bits (Line: 255, Col: 21)
|————————CursorKind.UNEXPOSED_EXPR:  (Line: 255, Col: 32)
|—————————CursorKind.INTEGER_LITERAL:  (Line: 255, Col: 32)
|——————CursorKind.PAREN_EXPR:  (Line: 255, Col: 44)
|———————CursorKind.BINARY_OPERATOR:  (Line: 255, Col: 45)
|————————CursorKind.PAREN_EXPR:  (Line: 255, Col: 45)
|—————————CursorKind.UNARY_OPERATOR:  (Line: 255, Col: 46)
|——————————CursorKind.UNEXPOSED_EXPR: rx_bit_pos (Line: 255, Col: 47)
|———————————CursorKind.DECL_REF_EXPR: rx_bit_pos (Line: 255, Col: 47)
|————————CursorKind.INTEGER_LITERAL:  (Line: 255, Col: 62)
|—CursorKind.FUNCTION_DECL: pio_ack_cancel(struct can2040 *) (Line: 265, Col: 1)
|——CursorKind.PARM_DECL: cd (Line: 265, Col: 32)
|———CursorKind.TYPE_REF: struct can2040 (Line: 265, Col: 23)
|——CursorKind.COMPOUND_STMT:  (Line: 266, Col: 1)
|—CursorKind.FUNCTION_DECL: pio_rx_check_stall(struct can2040 *) (Line: 273, Col: 1)
|——CursorKind.PARM_DECL: cd (Line: 273, Col: 36)
|———CursorKind.TYPE_REF: struct can2040 (Line: 273, Col: 27)
|——CursorKind.COMPOUND_STMT:  (Line: 274, Col: 1)
|—CursorKind.FUNCTION_DECL: pio_sync_set_may_start_tx_irq(struct can2040 *) (Line: 281, Col: 1)
|——CursorKind.PARM_DECL: cd (Line: 281, Col: 47)
|———CursorKind.TYPE_REF: struct can2040 (Line: 281, Col: 38)
|——CursorKind.COMPOUND_STMT:  (Line: 282, Col: 1)
|—CursorKind.FUNCTION_DECL: pio_sync_atomic_enable_may_start_tx_irq(struct can2040 *) (Line: 289, Col: 1)
|——CursorKind.PARM_DECL: cd (Line: 289, Col: 57)
|———CursorKind.TYPE_REF: struct can2040 (Line: 289, Col: 48)
|——CursorKind.COMPOUND_STMT:  (Line: 290, Col: 1)
|—CursorKind.FUNCTION_DECL: pio_sync_disable_irqs(struct can2040 *) (Line: 297, Col: 1)
|——CursorKind.PARM_DECL: cd (Line: 297, Col: 39)
|———CursorKind.TYPE_REF: struct can2040 (Line: 297, Col: 30)
|——CursorKind.COMPOUND_STMT:  (Line: 298, Col: 1)
|—CursorKind.FUNCTION_DECL: pio_sync_normal_start_signal(struct can2040 *) (Line: 305, Col: 1)
|——CursorKind.PARM_DECL: cd (Line: 305, Col: 46)
|———CursorKind.TYPE_REF: struct can2040 (Line: 305, Col: 37)
|——CursorKind.COMPOUND_STMT:  (Line: 306, Col: 1)
|———CursorKind.DECL_STMT:  (Line: 308, Col: 5)
|————CursorKind.VAR_DECL: eom_idx (Line: 308, Col: 14)
|—————CursorKind.TYPE_REF: uint32_t (Line: 308, Col: 5)
|—————CursorKind.INTEGER_LITERAL:  (Line: 308, Col: 24)
|—CursorKind.FUNCTION_DECL: pio_sync_slow_start_signal(struct can2040 *) (Line: 314, Col: 1)
|——CursorKind.PARM_DECL: cd (Line: 314, Col: 44)
|———CursorKind.TYPE_REF: struct can2040 (Line: 314, Col: 35)
|——CursorKind.COMPOUND_STMT:  (Line: 315, Col: 1)
|———CursorKind.DECL_STMT:  (Line: 317, Col: 5)
|————CursorKind.VAR_DECL: eom_idx (Line: 317, Col: 14)
|—————CursorKind.TYPE_REF: uint32_t (Line: 317, Col: 5)
|—————CursorKind.INTEGER_LITERAL:  (Line: 317, Col: 24)
|—CursorKind.FUNCTION_DECL: pio_sm_setup(struct can2040 *) (Line: 323, Col: 1)
|——CursorKind.PARM_DECL: cd (Line: 323, Col: 30)
|———CursorKind.TYPE_REF: struct can2040 (Line: 323, Col: 21)
|——CursorKind.COMPOUND_STMT:  (Line: 324, Col: 1)
|———CursorKind.DECL_STMT:  (Line: 331, Col: 5)
|————CursorKind.VAR_DECL: i (Line: 331, Col: 9)
|———CursorKind.CALL_EXPR: pio_sync_setup (Line: 336, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: pio_sync_setup (Line: 336, Col: 5)
|—————CursorKind.DECL_REF_EXPR: pio_sync_setup (Line: 336, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: cd (Line: 336, Col: 20)
|—————CursorKind.UNEXPOSED_EXPR: cd (Line: 336, Col: 20)
|——————CursorKind.DECL_REF_EXPR: cd (Line: 336, Col: 20)
|———CursorKind.CALL_EXPR: pio_rx_setup (Line: 337, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: pio_rx_setup (Line: 337, Col: 5)
|—————CursorKind.DECL_REF_EXPR: pio_rx_setup (Line: 337, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: cd (Line: 337, Col: 18)
|—————CursorKind.UNEXPOSED_EXPR: cd (Line: 337, Col: 18)
|——————CursorKind.DECL_REF_EXPR: cd (Line: 337, Col: 18)
|———CursorKind.CALL_EXPR: pio_ack_setup (Line: 338, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: pio_ack_setup (Line: 338, Col: 5)
|—————CursorKind.DECL_REF_EXPR: pio_ack_setup (Line: 338, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: cd (Line: 338, Col: 19)
|—————CursorKind.UNEXPOSED_EXPR: cd (Line: 338, Col: 19)
|——————CursorKind.DECL_REF_EXPR: cd (Line: 338, Col: 19)
|———CursorKind.CALL_EXPR: pio_tx_setup (Line: 339, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: pio_tx_setup (Line: 339, Col: 5)
|—————CursorKind.DECL_REF_EXPR: pio_tx_setup (Line: 339, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: cd (Line: 339, Col: 18)
|—————CursorKind.UNEXPOSED_EXPR: cd (Line: 339, Col: 18)
|——————CursorKind.DECL_REF_EXPR: cd (Line: 339, Col: 18)
|—CursorKind.FUNCTION_DECL: pio_setup(struct can2040 *, uint32_t, uint32_t) (Line: 349, Col: 1)
|——CursorKind.PARM_DECL: cd (Line: 349, Col: 27)
|———CursorKind.TYPE_REF: struct can2040 (Line: 349, Col: 18)
|——CursorKind.PARM_DECL: sys_clock (Line: 349, Col: 40)
|———CursorKind.TYPE_REF: uint32_t (Line: 349, Col: 31)
|——CursorKind.PARM_DECL: bitrate (Line: 349, Col: 60)
|———CursorKind.TYPE_REF: uint32_t (Line: 349, Col: 51)
|——CursorKind.COMPOUND_STMT:  (Line: 350, Col: 1)
|———CursorKind.DECL_STMT:  (Line: 352, Col: 5)
|————CursorKind.VAR_DECL: rb (Line: 352, Col: 14)
|—————CursorKind.TYPE_REF: uint32_t (Line: 352, Col: 5)
|———CursorKind.CALL_EXPR: rp2040_clear_reset (Line: 353, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: rp2040_clear_reset (Line: 353, Col: 5)
|—————CursorKind.DECL_REF_EXPR: rp2040_clear_reset (Line: 353, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: rb (Line: 353, Col: 24)
|—————CursorKind.DECL_REF_EXPR: rb (Line: 353, Col: 24)
|———CursorKind.DECL_STMT:  (Line: 357, Col: 5)
|————CursorKind.VAR_DECL: div (Line: 357, Col: 14)
|—————CursorKind.TYPE_REF: uint32_t (Line: 357, Col: 5)
|—————CursorKind.BINARY_OPERATOR:  (Line: 357, Col: 20)
|——————CursorKind.BINARY_OPERATOR:  (Line: 357, Col: 20)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 357, Col: 20)
|————————CursorKind.PAREN_EXPR:  (Line: 357, Col: 20)
|—————————CursorKind.BINARY_OPERATOR:  (Line: 357, Col: 21)
|——————————CursorKind.INTEGER_LITERAL:  (Line: 357, Col: 21)
|——————————CursorKind.INTEGER_LITERAL:  (Line: 357, Col: 27)
|———————CursorKind.UNEXPOSED_EXPR: sys_clock (Line: 357, Col: 48)
|————————CursorKind.DECL_REF_EXPR: sys_clock (Line: 357, Col: 48)
|——————CursorKind.UNEXPOSED_EXPR: bitrate (Line: 357, Col: 60)
|———————CursorKind.DECL_REF_EXPR: bitrate (Line: 357, Col: 60)
|———CursorKind.DECL_STMT:  (Line: 358, Col: 5)
|————CursorKind.VAR_DECL: i (Line: 358, Col: 9)
|———CursorKind.CALL_EXPR: pio_sm_setup (Line: 363, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: pio_sm_setup (Line: 363, Col: 5)
|—————CursorKind.DECL_REF_EXPR: pio_sm_setup (Line: 363, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: cd (Line: 363, Col: 18)
|—————CursorKind.UNEXPOSED_EXPR: cd (Line: 363, Col: 18)
|——————CursorKind.DECL_REF_EXPR: cd (Line: 363, Col: 18)
|———CursorKind.CALL_EXPR: rp2040_gpio_peripheral (Line: 366, Col: 5)
|————CursorKind.DECL_REF_EXPR: rp2040_gpio_peripheral (Line: 366, Col: 5)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 366, Col: 28)
|—————CursorKind.DECL_REF_EXPR: cd (Line: 366, Col: 28)
|————CursorKind.INTEGER_LITERAL:  (Line: 366, Col: 41)
|————CursorKind.INTEGER_LITERAL:  (Line: 366, Col: 51)
|———CursorKind.CALL_EXPR: rp2040_gpio_peripheral (Line: 367, Col: 5)
|————CursorKind.DECL_REF_EXPR: rp2040_gpio_peripheral (Line: 367, Col: 5)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 367, Col: 28)
|—————CursorKind.DECL_REF_EXPR: cd (Line: 367, Col: 28)
|————CursorKind.INTEGER_LITERAL:  (Line: 367, Col: 41)
|————CursorKind.INTEGER_LITERAL:  (Line: 367, Col: 51)
|—CursorKind.VAR_DECL: crc_table (Line: 376, Col: 23)
|——CursorKind.TYPE_REF: uint16_t (Line: 376, Col: 14)
|——CursorKind.INTEGER_LITERAL:  (Line: 376, Col: 33)
|——CursorKind.INIT_LIST_EXPR:  (Line: 376, Col: 39)
|———CursorKind.UNEXPOSED_EXPR:  (Line: 377, Col: 5)
|————CursorKind.INTEGER_LITERAL:  (Line: 377, Col: 5)
|———CursorKind.UNEXPOSED_EXPR:  (Line: 377, Col: 13)
|————CursorKind.INTEGER_LITERAL:  (Line: 377, Col: 13)
|———CursorKind.UNEXPOSED_EXPR:  (Line: 377, Col: 21)
|————CursorKind.INTEGER_LITERAL:  (Line: 377, Col: 21)
|———CursorKind.UNEXPOSED_EXPR:  (Line: 377, Col: 29)
|————CursorKind.INTEGER_LITERAL:  (Line: 377, Col: 29)
|———CursorKind.UNEXPOSED_EXPR:  (Line: 377, Col: 37)
|————CursorKind.INTEGER_LITERAL:  (Line: 377, Col: 37)
|———CursorKind.UNEXPOSED_EXPR:  (Line: 377, Col: 45)
|————CursorKind.INTEGER_LITERAL:  (Line: 377, Col: 45)
|———CursorKind.UNEXPOSED_EXPR:  (Line: 377, Col: 53)
|————CursorKind.INTEGER_LITERAL:  (Line: 377, Col: 53)
|———CursorKind.UNEXPOSED_EXPR:  (Line: 377, Col: 61)
|————CursorKind.INTEGER_LITERAL:  (Line: 377, Col: 61)
|———CursorKind.UNEXPOSED_EXPR:  (Line: 378, Col: 5)
|————CursorKind.INTEGER_LITERAL:  (Line: 378, Col: 5)
|———CursorKind.UNEXPOSED_EXPR:  (Line: 378, Col: 13)
|————CursorKind.INTEGER_LITERAL:  (Line: 378, Col: 13)
|———CursorKind.UNEXPOSED_EXPR:  (Line: 378, Col: 21)
|————CursorKind.INTEGER_LITERAL:  (Line: 378, Col: 21)
|———CursorKind.UNEXPOSED_EXPR:  (Line: 378, Col: 29)
|————CursorKind.INTEGER_LITERAL:  (Line: 378, Col: 29)
|———CursorKind.UNEXPOSED_EXPR:  (Line: 378, Col: 37)
|————CursorKind.INTEGER_LITERAL:  (Line: 378, Col: 37)
|———CursorKind.UNEXPOSED_EXPR:  (Line: 378, Col: 45)
|————CursorKind.INTEGER_LITERAL:  (Line: 378, Col: 45)
|———CursorKind.UNEXPOSED_EXPR:  (Line: 378, Col: 53)
|————CursorKind.INTEGER_LITERAL:  (Line: 378, Col: 53)
|———CursorKind.UNEXPOSED_EXPR:  (Line: 378, Col: 61)
|————CursorKind.INTEGER_LITERAL:  (Line: 378, Col: 61)
|—CursorKind.FUNCTION_DECL: crcbits(uint32_t, uint32_t, uint32_t) (Line: 383, Col: 1)
|——CursorKind.TYPE_REF: uint32_t (Line: 382, Col: 8)
|——CursorKind.PARM_DECL: crc (Line: 383, Col: 18)
|———CursorKind.TYPE_REF: uint32_t (Line: 383, Col: 9)
|——CursorKind.PARM_DECL: data (Line: 383, Col: 32)
|———CursorKind.TYPE_REF: uint32_t (Line: 383, Col: 23)
|——CursorKind.PARM_DECL: count (Line: 383, Col: 47)
|———CursorKind.TYPE_REF: uint32_t (Line: 383, Col: 38)
|——CursorKind.COMPOUND_STMT:  (Line: 384, Col: 1)
|———CursorKind.DECL_STMT:  (Line: 385, Col: 5)
|————CursorKind.VAR_DECL: i (Line: 385, Col: 9)
|———CursorKind.FOR_STMT:  (Line: 386, Col: 5)
|————CursorKind.BINARY_OPERATOR:  (Line: 386, Col: 10)
|—————CursorKind.DECL_REF_EXPR: i (Line: 386, Col: 10)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 386, Col: 12)
|——————CursorKind.BINARY_OPERATOR:  (Line: 386, Col: 12)
|———————CursorKind.UNEXPOSED_EXPR: count (Line: 386, Col: 12)
|————————CursorKind.DECL_REF_EXPR: count (Line: 386, Col: 12)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 386, Col: 18)
|————————CursorKind.INTEGER_LITERAL:  (Line: 386, Col: 18)
|————CursorKind.BINARY_OPERATOR:  (Line: 386, Col: 21)
|—————CursorKind.UNEXPOSED_EXPR: i (Line: 386, Col: 21)
|——————CursorKind.DECL_REF_EXPR: i (Line: 386, Col: 21)
|—————CursorKind.INTEGER_LITERAL:  (Line: 386, Col: 24)
|————CursorKind.COMPOUND_ASSIGNMENT_OPERATOR:  (Line: 386, Col: 27)
|—————CursorKind.DECL_REF_EXPR: i (Line: 386, Col: 27)
|—————CursorKind.INTEGER_LITERAL:  (Line: 386, Col: 30)
|————CursorKind.COMPOUND_STMT:  (Line: 386, Col: 33)
|—————CursorKind.DECL_STMT:  (Line: 387, Col: 9)
|——————CursorKind.VAR_DECL: pos (Line: 387, Col: 18)
|———————CursorKind.TYPE_REF: uint32_t (Line: 387, Col: 9)
|———————CursorKind.BINARY_OPERATOR:  (Line: 387, Col: 24)
|————————CursorKind.PAREN_EXPR:  (Line: 387, Col: 24)
|—————————CursorKind.BINARY_OPERATOR:  (Line: 387, Col: 25)
|——————————CursorKind.PAREN_EXPR:  (Line: 387, Col: 25)
|———————————CursorKind.BINARY_OPERATOR:  (Line: 387, Col: 26)
|————————————CursorKind.UNEXPOSED_EXPR: crc (Line: 387, Col: 26)
|—————————————CursorKind.DECL_REF_EXPR: crc (Line: 387, Col: 26)
|————————————CursorKind.INTEGER_LITERAL:  (Line: 387, Col: 33)
|——————————CursorKind.PAREN_EXPR:  (Line: 387, Col: 39)
|———————————CursorKind.BINARY_OPERATOR:  (Line: 387, Col: 40)
|————————————CursorKind.UNEXPOSED_EXPR: data (Line: 387, Col: 40)
|—————————————CursorKind.DECL_REF_EXPR: data (Line: 387, Col: 40)
|————————————CursorKind.UNEXPOSED_EXPR: i (Line: 387, Col: 48)
|—————————————CursorKind.DECL_REF_EXPR: i (Line: 387, Col: 48)
|————————CursorKind.UNEXPOSED_EXPR:  (Line: 387, Col: 54)
|—————————CursorKind.INTEGER_LITERAL:  (Line: 387, Col: 54)
|—————CursorKind.BINARY_OPERATOR:  (Line: 388, Col: 9)
|——————CursorKind.DECL_REF_EXPR: crc (Line: 388, Col: 9)
|——————CursorKind.BINARY_OPERATOR:  (Line: 388, Col: 15)
|———————CursorKind.PAREN_EXPR:  (Line: 388, Col: 15)
|————————CursorKind.BINARY_OPERATOR:  (Line: 388, Col: 16)
|—————————CursorKind.UNEXPOSED_EXPR: crc (Line: 388, Col: 16)
|——————————CursorKind.DECL_REF_EXPR: crc (Line: 388, Col: 16)
|—————————CursorKind.INTEGER_LITERAL:  (Line: 388, Col: 23)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 388, Col: 28)
|————————CursorKind.UNEXPOSED_EXPR:  (Line: 388, Col: 28)
|—————————CursorKind.ARRAY_SUBSCRIPT_EXPR:  (Line: 388, Col: 28)
|——————————CursorKind.UNEXPOSED_EXPR: crc_table (Line: 388, Col: 28)
|———————————CursorKind.DECL_REF_EXPR: crc_table (Line: 388, Col: 28)
|——————————CursorKind.UNEXPOSED_EXPR: pos (Line: 388, Col: 38)
|———————————CursorKind.DECL_REF_EXPR: pos (Line: 388, Col: 38)
|———CursorKind.RETURN_STMT:  (Line: 390, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: crc (Line: 390, Col: 12)
|—————CursorKind.DECL_REF_EXPR: crc (Line: 390, Col: 12)
|—CursorKind.FUNCTION_DECL: unstuf_add_bits(struct can2040_bitunstuffer *, uint32_t, uint32_t) (Line: 400, Col: 1)
|——CursorKind.PARM_DECL: bu (Line: 400, Col: 46)
|———CursorKind.TYPE_REF: struct can2040_bitunstuffer (Line: 400, Col: 24)
|——CursorKind.PARM_DECL: data (Line: 400, Col: 59)
|———CursorKind.TYPE_REF: uint32_t (Line: 400, Col: 50)
|——CursorKind.PARM_DECL: count (Line: 400, Col: 74)
|———CursorKind.TYPE_REF: uint32_t (Line: 400, Col: 65)
|——CursorKind.COMPOUND_STMT:  (Line: 401, Col: 1)
|———CursorKind.DECL_STMT:  (Line: 402, Col: 5)
|————CursorKind.VAR_DECL: mask (Line: 402, Col: 14)
|—————CursorKind.TYPE_REF: uint32_t (Line: 402, Col: 5)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 402, Col: 21)
|——————CursorKind.BINARY_OPERATOR:  (Line: 402, Col: 21)
|———————CursorKind.PAREN_EXPR:  (Line: 402, Col: 21)
|————————CursorKind.BINARY_OPERATOR:  (Line: 402, Col: 22)
|—————————CursorKind.INTEGER_LITERAL:  (Line: 402, Col: 22)
|—————————CursorKind.UNEXPOSED_EXPR: count (Line: 402, Col: 27)
|——————————CursorKind.DECL_REF_EXPR: count (Line: 402, Col: 27)
|———————CursorKind.INTEGER_LITERAL:  (Line: 402, Col: 36)
|———CursorKind.BINARY_OPERATOR:  (Line: 403, Col: 5)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 403, Col: 5)
|—————CursorKind.DECL_REF_EXPR: bu (Line: 403, Col: 5)
|————CursorKind.BINARY_OPERATOR:  (Line: 403, Col: 24)
|—————CursorKind.PAREN_EXPR:  (Line: 403, Col: 24)
|——————CursorKind.BINARY_OPERATOR:  (Line: 403, Col: 25)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 403, Col: 25)
|————————CursorKind.DECL_REF_EXPR: bu (Line: 403, Col: 25)
|———————CursorKind.DECL_REF_EXPR: count (Line: 403, Col: 45)
|—————CursorKind.PAREN_EXPR:  (Line: 403, Col: 54)
|——————CursorKind.BINARY_OPERATOR:  (Line: 403, Col: 55)
|———————CursorKind.UNEXPOSED_EXPR: data (Line: 403, Col: 55)
|————————CursorKind.DECL_REF_EXPR: data (Line: 403, Col: 55)
|———————CursorKind.UNEXPOSED_EXPR: mask (Line: 403, Col: 62)
|————————CursorKind.DECL_REF_EXPR: mask (Line: 403, Col: 62)
|———CursorKind.BINARY_OPERATOR:  (Line: 404, Col: 5)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 404, Col: 5)
|—————CursorKind.DECL_REF_EXPR: bu (Line: 404, Col: 5)
|————CursorKind.DECL_REF_EXPR: count (Line: 404, Col: 23)
|—CursorKind.FUNCTION_DECL: unstuf_set_count(struct can2040_bitunstuffer *, uint32_t) (Line: 409, Col: 1)
|——CursorKind.PARM_DECL: bu (Line: 409, Col: 47)
|———CursorKind.TYPE_REF: struct can2040_bitunstuffer (Line: 409, Col: 25)
|——CursorKind.PARM_DECL: count (Line: 409, Col: 60)
|———CursorKind.TYPE_REF: uint32_t (Line: 409, Col: 51)
|——CursorKind.COMPOUND_STMT:  (Line: 410, Col: 1)
|———CursorKind.BINARY_OPERATOR:  (Line: 411, Col: 5)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 411, Col: 5)
|—————CursorKind.DECL_REF_EXPR: bu (Line: 411, Col: 5)
|————CursorKind.INTEGER_LITERAL:  (Line: 411, Col: 26)
|———CursorKind.BINARY_OPERATOR:  (Line: 412, Col: 5)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 412, Col: 5)
|—————CursorKind.DECL_REF_EXPR: bu (Line: 412, Col: 5)
|————CursorKind.DECL_REF_EXPR: count (Line: 412, Col: 25)
|—CursorKind.FUNCTION_DECL: unstuf_clear_state(struct can2040_bitunstuffer *) (Line: 417, Col: 1)
|——CursorKind.PARM_DECL: bu (Line: 417, Col: 49)
|———CursorKind.TYPE_REF: struct can2040_bitunstuffer (Line: 417, Col: 27)
|——CursorKind.COMPOUND_STMT:  (Line: 418, Col: 1)
|———CursorKind.DECL_STMT:  (Line: 419, Col: 5)
|————CursorKind.VAR_DECL: lb (Line: 419, Col: 14)
|—————CursorKind.TYPE_REF: uint32_t (Line: 419, Col: 5)
|—————CursorKind.BINARY_OPERATOR:  (Line: 419, Col: 19)
|——————CursorKind.INTEGER_LITERAL:  (Line: 419, Col: 19)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 419, Col: 24)
|———————CursorKind.DECL_REF_EXPR: bu (Line: 419, Col: 24)
|———CursorKind.BINARY_OPERATOR:  (Line: 420, Col: 5)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 420, Col: 5)
|—————CursorKind.DECL_REF_EXPR: bu (Line: 420, Col: 5)
|————CursorKind.BINARY_OPERATOR:  (Line: 420, Col: 24)
|—————CursorKind.PAREN_EXPR:  (Line: 420, Col: 24)
|——————CursorKind.BINARY_OPERATOR:  (Line: 420, Col: 25)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 420, Col: 25)
|————————CursorKind.DECL_REF_EXPR: bu (Line: 420, Col: 25)
|———————CursorKind.PAREN_EXPR:  (Line: 420, Col: 44)
|————————CursorKind.BINARY_OPERATOR:  (Line: 420, Col: 45)
|—————————CursorKind.UNEXPOSED_EXPR: lb (Line: 420, Col: 45)
|——————————CursorKind.DECL_REF_EXPR: lb (Line: 420, Col: 45)
|—————————CursorKind.UNEXPOSED_EXPR:  (Line: 420, Col: 50)
|——————————CursorKind.INTEGER_LITERAL:  (Line: 420, Col: 50)
|—————CursorKind.DECL_REF_EXPR: lb (Line: 420, Col: 56)
|—CursorKind.FUNCTION_DECL: unstuf_pull_bits(struct can2040_bitunstuffer *) (Line: 425, Col: 1)
|——CursorKind.PARM_DECL: bu (Line: 425, Col: 47)
|———CursorKind.TYPE_REF: struct can2040_bitunstuffer (Line: 425, Col: 25)
|——CursorKind.COMPOUND_STMT:  (Line: 426, Col: 1)
|———CursorKind.DECL_STMT:  (Line: 427, Col: 5)
|————CursorKind.VAR_DECL: sb (Line: 427, Col: 14)
|—————CursorKind.TYPE_REF: uint32_t (Line: 427, Col: 5)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 427, Col: 19)
|——————CursorKind.DECL_REF_EXPR: bu (Line: 427, Col: 19)
|————CursorKind.VAR_DECL: edges (Line: 427, Col: 37)
|—————CursorKind.TYPE_REF: uint32_t (Line: 427, Col: 5)
|—————CursorKind.BINARY_OPERATOR:  (Line: 427, Col: 45)
|——————CursorKind.UNEXPOSED_EXPR: sb (Line: 427, Col: 45)
|———————CursorKind.DECL_REF_EXPR: sb (Line: 427, Col: 45)
|——————CursorKind.PAREN_EXPR:  (Line: 427, Col: 50)
|———————CursorKind.BINARY_OPERATOR:  (Line: 427, Col: 51)
|————————CursorKind.UNEXPOSED_EXPR: sb (Line: 427, Col: 51)
|—————————CursorKind.DECL_REF_EXPR: sb (Line: 427, Col: 51)
|————————CursorKind.INTEGER_LITERAL:  (Line: 427, Col: 57)
|———CursorKind.DECL_STMT:  (Line: 428, Col: 5)
|————CursorKind.VAR_DECL: ub (Line: 428, Col: 14)
|—————CursorKind.TYPE_REF: uint32_t (Line: 428, Col: 5)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 428, Col: 19)
|——————CursorKind.DECL_REF_EXPR: bu (Line: 428, Col: 19)
|———CursorKind.DECL_STMT:  (Line: 429, Col: 5)
|————CursorKind.VAR_DECL: cs (Line: 429, Col: 14)
|—————CursorKind.TYPE_REF: uint32_t (Line: 429, Col: 5)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 429, Col: 19)
|——————CursorKind.DECL_REF_EXPR: bu (Line: 429, Col: 19)
|————CursorKind.VAR_DECL: cu (Line: 429, Col: 36)
|—————CursorKind.TYPE_REF: uint32_t (Line: 429, Col: 5)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 429, Col: 41)
|——————CursorKind.DECL_REF_EXPR: bu (Line: 429, Col: 41)
|———CursorKind.FOR_STMT:  (Line: 430, Col: 5)
|————CursorKind.COMPOUND_STMT:  (Line: 430, Col: 14)
|—————CursorKind.IF_STMT:  (Line: 431, Col: 9)
|——————CursorKind.UNARY_OPERATOR:  (Line: 431, Col: 13)
|———————CursorKind.UNEXPOSED_EXPR: cu (Line: 431, Col: 14)
|————————CursorKind.DECL_REF_EXPR: cu (Line: 431, Col: 14)
|——————CursorKind.COMPOUND_STMT:  (Line: 431, Col: 18)
|———————CursorKind.BINARY_OPERATOR:  (Line: 433, Col: 13)
|————————CursorKind.UNEXPOSED_EXPR:  (Line: 433, Col: 13)
|—————————CursorKind.DECL_REF_EXPR: bu (Line: 433, Col: 13)
|————————CursorKind.DECL_REF_EXPR: ub (Line: 433, Col: 34)
|———————CursorKind.BINARY_OPERATOR:  (Line: 434, Col: 13)
|————————CursorKind.UNEXPOSED_EXPR:  (Line: 434, Col: 13)
|—————————CursorKind.DECL_REF_EXPR: bu (Line: 434, Col: 13)
|————————CursorKind.DECL_REF_EXPR: cs (Line: 434, Col: 31)
|———————CursorKind.BINARY_OPERATOR:  (Line: 435, Col: 13)
|————————CursorKind.UNEXPOSED_EXPR:  (Line: 435, Col: 13)
|—————————CursorKind.DECL_REF_EXPR: bu (Line: 435, Col: 13)
|————————CursorKind.DECL_REF_EXPR: cu (Line: 435, Col: 33)
|———————CursorKind.RETURN_STMT:  (Line: 436, Col: 13)
|————————CursorKind.INTEGER_LITERAL:  (Line: 436, Col: 20)
|—————CursorKind.IF_STMT:  (Line: 438, Col: 9)
|——————CursorKind.UNARY_OPERATOR:  (Line: 438, Col: 13)
|———————CursorKind.UNEXPOSED_EXPR: cs (Line: 438, Col: 14)
|————————CursorKind.DECL_REF_EXPR: cs (Line: 438, Col: 14)
|——————CursorKind.COMPOUND_STMT:  (Line: 438, Col: 18)
|———————CursorKind.BINARY_OPERATOR:  (Line: 440, Col: 13)
|————————CursorKind.UNEXPOSED_EXPR:  (Line: 440, Col: 13)
|—————————CursorKind.DECL_REF_EXPR: bu (Line: 440, Col: 13)
|————————CursorKind.DECL_REF_EXPR: ub (Line: 440, Col: 34)
|———————CursorKind.BINARY_OPERATOR:  (Line: 441, Col: 13)
|————————CursorKind.UNEXPOSED_EXPR:  (Line: 441, Col: 13)
|—————————CursorKind.DECL_REF_EXPR: bu (Line: 441, Col: 13)
|————————CursorKind.DECL_REF_EXPR: cs (Line: 441, Col: 31)
|———————CursorKind.BINARY_OPERATOR:  (Line: 442, Col: 13)
|————————CursorKind.UNEXPOSED_EXPR:  (Line: 442, Col: 13)
|—————————CursorKind.DECL_REF_EXPR: bu (Line: 442, Col: 13)
|————————CursorKind.DECL_REF_EXPR: cu (Line: 442, Col: 33)
|———————CursorKind.RETURN_STMT:  (Line: 443, Col: 13)
|————————CursorKind.INTEGER_LITERAL:  (Line: 443, Col: 20)
|—————CursorKind.UNARY_OPERATOR:  (Line: 445, Col: 9)
|——————CursorKind.DECL_REF_EXPR: cs (Line: 445, Col: 9)
|—————CursorKind.IF_STMT:  (Line: 446, Col: 9)
|——————CursorKind.BINARY_OPERATOR:  (Line: 446, Col: 13)
|———————CursorKind.PAREN_EXPR:  (Line: 446, Col: 13)
|————————CursorKind.BINARY_OPERATOR:  (Line: 446, Col: 14)
|—————————CursorKind.UNEXPOSED_EXPR: edges (Line: 446, Col: 14)
|——————————CursorKind.DECL_REF_EXPR: edges (Line: 446, Col: 14)
|—————————CursorKind.PAREN_EXPR:  (Line: 446, Col: 23)
|——————————CursorKind.BINARY_OPERATOR:  (Line: 446, Col: 24)
|———————————CursorKind.UNEXPOSED_EXPR: cs (Line: 446, Col: 24)
|————————————CursorKind.DECL_REF_EXPR: cs (Line: 446, Col: 24)
|———————————CursorKind.UNEXPOSED_EXPR:  (Line: 446, Col: 27)
|————————————CursorKind.INTEGER_LITERAL:  (Line: 446, Col: 27)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 446, Col: 33)
|————————CursorKind.INTEGER_LITERAL:  (Line: 446, Col: 33)
|——————CursorKind.COMPOUND_STMT:  (Line: 446, Col: 38)
|———————CursorKind.UNARY_OPERATOR:  (Line: 448, Col: 13)
|————————CursorKind.DECL_REF_EXPR: cu (Line: 448, Col: 13)
|———————CursorKind.COMPOUND_ASSIGNMENT_OPERATOR:  (Line: 449, Col: 13)
|————————CursorKind.DECL_REF_EXPR: ub (Line: 449, Col: 13)
|————————CursorKind.BINARY_OPERATOR:  (Line: 449, Col: 19)
|—————————CursorKind.PAREN_EXPR:  (Line: 449, Col: 19)
|——————————CursorKind.BINARY_OPERATOR:  (Line: 449, Col: 20)
|———————————CursorKind.PAREN_EXPR:  (Line: 449, Col: 20)
|————————————CursorKind.BINARY_OPERATOR:  (Line: 449, Col: 21)
|—————————————CursorKind.UNEXPOSED_EXPR: sb (Line: 449, Col: 21)
|——————————————CursorKind.DECL_REF_EXPR: sb (Line: 449, Col: 21)
|—————————————CursorKind.UNEXPOSED_EXPR: cs (Line: 449, Col: 27)
|——————————————CursorKind.DECL_REF_EXPR: cs (Line: 449, Col: 27)
|———————————CursorKind.UNEXPOSED_EXPR:  (Line: 449, Col: 33)
|————————————CursorKind.INTEGER_LITERAL:  (Line: 449, Col: 33)
|—————————CursorKind.UNEXPOSED_EXPR: cu (Line: 449, Col: 39)
|——————————CursorKind.DECL_REF_EXPR: cu (Line: 449, Col: 39)
|——————CursorKind.IF_STMT:  (Line: 450, Col: 16)
|———————CursorKind.BINARY_OPERATOR:  (Line: 450, Col: 20)
|————————CursorKind.PAREN_EXPR:  (Line: 450, Col: 20)
|—————————CursorKind.BINARY_OPERATOR:  (Line: 450, Col: 21)
|——————————CursorKind.PAREN_EXPR:  (Line: 450, Col: 21)
|———————————CursorKind.BINARY_OPERATOR:  (Line: 450, Col: 22)
|————————————CursorKind.UNEXPOSED_EXPR: edges (Line: 450, Col: 22)
|—————————————CursorKind.DECL_REF_EXPR: edges (Line: 450, Col: 22)
|————————————CursorKind.UNEXPOSED_EXPR: cs (Line: 450, Col: 31)
|—————————————CursorKind.DECL_REF_EXPR: cs (Line: 450, Col: 31)
|——————————CursorKind.UNEXPOSED_EXPR:  (Line: 450, Col: 37)
|———————————CursorKind.INTEGER_LITERAL:  (Line: 450, Col: 37)
|————————CursorKind.UNEXPOSED_EXPR:  (Line: 450, Col: 46)
|—————————CursorKind.INTEGER_LITERAL:  (Line: 450, Col: 46)
|———————CursorKind.COMPOUND_STMT:  (Line: 450, Col: 52)
|————————CursorKind.BINARY_OPERATOR:  (Line: 452, Col: 13)
|—————————CursorKind.UNEXPOSED_EXPR:  (Line: 452, Col: 13)
|——————————CursorKind.DECL_REF_EXPR: bu (Line: 452, Col: 13)
|—————————CursorKind.DECL_REF_EXPR: ub (Line: 452, Col: 34)
|————————CursorKind.BINARY_OPERATOR:  (Line: 453, Col: 13)
|—————————CursorKind.UNEXPOSED_EXPR:  (Line: 453, Col: 13)
|——————————CursorKind.DECL_REF_EXPR: bu (Line: 453, Col: 13)
|—————————CursorKind.DECL_REF_EXPR: cs (Line: 453, Col: 31)
|————————CursorKind.BINARY_OPERATOR:  (Line: 454, Col: 13)
|—————————CursorKind.UNEXPOSED_EXPR:  (Line: 454, Col: 13)
|——————————CursorKind.DECL_REF_EXPR: bu (Line: 454, Col: 13)
|—————————CursorKind.DECL_REF_EXPR: cu (Line: 454, Col: 33)
|————————CursorKind.IF_STMT:  (Line: 455, Col: 13)
|—————————CursorKind.BINARY_OPERATOR:  (Line: 455, Col: 17)
|——————————CursorKind.PAREN_EXPR:  (Line: 455, Col: 17)
|———————————CursorKind.BINARY_OPERATOR:  (Line: 455, Col: 18)
|————————————CursorKind.UNEXPOSED_EXPR: sb (Line: 455, Col: 18)
|—————————————CursorKind.DECL_REF_EXPR: sb (Line: 455, Col: 18)
|————————————CursorKind.UNEXPOSED_EXPR: cs (Line: 455, Col: 24)
|—————————————CursorKind.DECL_REF_EXPR: cs (Line: 455, Col: 24)
|——————————CursorKind.UNEXPOSED_EXPR:  (Line: 455, Col: 30)
|———————————CursorKind.INTEGER_LITERAL:  (Line: 455, Col: 30)
|—————————CursorKind.RETURN_STMT:  (Line: 456, Col: 17)
|——————————CursorKind.UNARY_OPERATOR:  (Line: 456, Col: 24)
|———————————CursorKind.INTEGER_LITERAL:  (Line: 456, Col: 25)
|————————CursorKind.RETURN_STMT:  (Line: 457, Col: 13)
|—————————CursorKind.UNARY_OPERATOR:  (Line: 457, Col: 20)
|——————————CursorKind.INTEGER_LITERAL:  (Line: 457, Col: 21)
|—CursorKind.FUNCTION_DECL: bitstuff(uint32_t *, uint32_t) (Line: 469, Col: 1)
|——CursorKind.TYPE_REF: uint32_t (Line: 468, Col: 8)
|——CursorKind.PARM_DECL: pb (Line: 469, Col: 20)
|———CursorKind.TYPE_REF: uint32_t (Line: 469, Col: 10)
|——CursorKind.PARM_DECL: num_bits (Line: 469, Col: 33)
|———CursorKind.TYPE_REF: uint32_t (Line: 469, Col: 24)
|——CursorKind.COMPOUND_STMT:  (Line: 470, Col: 1)
|———CursorKind.DECL_STMT:  (Line: 471, Col: 5)
|————CursorKind.VAR_DECL: b (Line: 471, Col: 14)
|—————CursorKind.TYPE_REF: uint32_t (Line: 471, Col: 5)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 471, Col: 18)
|——————CursorKind.UNARY_OPERATOR:  (Line: 471, Col: 18)
|———————CursorKind.UNEXPOSED_EXPR: pb (Line: 471, Col: 19)
|————————CursorKind.DECL_REF_EXPR: pb (Line: 471, Col: 19)
|————CursorKind.VAR_DECL: edges (Line: 471, Col: 23)
|—————CursorKind.TYPE_REF: uint32_t (Line: 471, Col: 5)
|—————CursorKind.BINARY_OPERATOR:  (Line: 471, Col: 31)
|——————CursorKind.UNEXPOSED_EXPR: b (Line: 471, Col: 31)
|———————CursorKind.DECL_REF_EXPR: b (Line: 471, Col: 31)
|——————CursorKind.PAREN_EXPR:  (Line: 471, Col: 35)
|———————CursorKind.BINARY_OPERATOR:  (Line: 471, Col: 36)
|————————CursorKind.UNEXPOSED_EXPR: b (Line: 471, Col: 36)
|—————————CursorKind.DECL_REF_EXPR: b (Line: 471, Col: 36)
|————————CursorKind.INTEGER_LITERAL:  (Line: 471, Col: 41)
|————CursorKind.VAR_DECL: count (Line: 471, Col: 45)
|—————CursorKind.TYPE_REF: uint32_t (Line: 471, Col: 5)
|—————CursorKind.UNEXPOSED_EXPR: num_bits (Line: 471, Col: 53)
|——————CursorKind.DECL_REF_EXPR: num_bits (Line: 471, Col: 53)
|———CursorKind.DECL_STMT:  (Line: 472, Col: 5)
|————CursorKind.VAR_DECL: i (Line: 472, Col: 9)
|———CursorKind.FOR_STMT:  (Line: 473, Col: 5)
|————CursorKind.BINARY_OPERATOR:  (Line: 473, Col: 10)
|—————CursorKind.DECL_REF_EXPR: i (Line: 473, Col: 10)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 473, Col: 12)
|——————CursorKind.BINARY_OPERATOR:  (Line: 473, Col: 12)
|———————CursorKind.UNEXPOSED_EXPR: num_bits (Line: 473, Col: 12)
|————————CursorKind.DECL_REF_EXPR: num_bits (Line: 473, Col: 12)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 473, Col: 21)
|————————CursorKind.INTEGER_LITERAL:  (Line: 473, Col: 21)
|————CursorKind.BINARY_OPERATOR:  (Line: 473, Col: 24)
|—————CursorKind.UNEXPOSED_EXPR: i (Line: 473, Col: 24)
|——————CursorKind.DECL_REF_EXPR: i (Line: 473, Col: 24)
|—————CursorKind.INTEGER_LITERAL:  (Line: 473, Col: 27)
|————CursorKind.UNARY_OPERATOR:  (Line: 473, Col: 30)
|—————CursorKind.DECL_REF_EXPR: i (Line: 473, Col: 30)
|————CursorKind.COMPOUND_STMT:  (Line: 473, Col: 35)
|—————CursorKind.IF_STMT:  (Line: 474, Col: 9)
|——————CursorKind.UNARY_OPERATOR:  (Line: 474, Col: 13)
|———————CursorKind.PAREN_EXPR:  (Line: 474, Col: 14)
|————————CursorKind.BINARY_OPERATOR:  (Line: 474, Col: 15)
|—————————CursorKind.PAREN_EXPR:  (Line: 474, Col: 15)
|——————————CursorKind.BINARY_OPERATOR:  (Line: 474, Col: 16)
|———————————CursorKind.UNEXPOSED_EXPR: edges (Line: 474, Col: 16)
|————————————CursorKind.DECL_REF_EXPR: edges (Line: 474, Col: 16)
|———————————CursorKind.UNEXPOSED_EXPR: i (Line: 474, Col: 25)
|————————————CursorKind.DECL_REF_EXPR: i (Line: 474, Col: 25)
|—————————CursorKind.UNEXPOSED_EXPR:  (Line: 474, Col: 30)
|——————————CursorKind.INTEGER_LITERAL:  (Line: 474, Col: 30)
|——————CursorKind.COMPOUND_STMT:  (Line: 474, Col: 36)
|———————CursorKind.DECL_STMT:  (Line: 475, Col: 13)
|————————CursorKind.VAR_DECL: mask (Line: 475, Col: 22)
|—————————CursorKind.TYPE_REF: uint32_t (Line: 475, Col: 13)
|—————————CursorKind.UNEXPOSED_EXPR:  (Line: 475, Col: 29)
|——————————CursorKind.BINARY_OPERATOR:  (Line: 475, Col: 29)
|———————————CursorKind.PAREN_EXPR:  (Line: 475, Col: 29)
|————————————CursorKind.BINARY_OPERATOR:  (Line: 475, Col: 30)
|—————————————CursorKind.INTEGER_LITERAL:  (Line: 475, Col: 30)
|—————————————CursorKind.PAREN_EXPR:  (Line: 475, Col: 35)
|——————————————CursorKind.BINARY_OPERATOR:  (Line: 475, Col: 36)
|———————————————CursorKind.UNEXPOSED_EXPR: i (Line: 475, Col: 36)
|————————————————CursorKind.DECL_REF_EXPR: i (Line: 475, Col: 36)
|———————————————CursorKind.INTEGER_LITERAL:  (Line: 475, Col: 40)
|———————————CursorKind.INTEGER_LITERAL:  (Line: 475, Col: 46)
|———————CursorKind.DECL_STMT:  (Line: 476, Col: 13)
|————————CursorKind.VAR_DECL: low (Line: 476, Col: 22)
|—————————CursorKind.TYPE_REF: uint32_t (Line: 476, Col: 13)
|—————————CursorKind.BINARY_OPERATOR:  (Line: 476, Col: 28)
|——————————CursorKind.UNEXPOSED_EXPR: b (Line: 476, Col: 28)
|———————————CursorKind.DECL_REF_EXPR: b (Line: 476, Col: 28)
|——————————CursorKind.UNEXPOSED_EXPR: mask (Line: 476, Col: 32)
|———————————CursorKind.DECL_REF_EXPR: mask (Line: 476, Col: 32)
|————————CursorKind.VAR_DECL: high (Line: 476, Col: 38)
|—————————CursorKind.TYPE_REF: uint32_t (Line: 476, Col: 13)
|—————————CursorKind.BINARY_OPERATOR:  (Line: 476, Col: 45)
|——————————CursorKind.PAREN_EXPR:  (Line: 476, Col: 45)
|———————————CursorKind.BINARY_OPERATOR:  (Line: 476, Col: 46)
|————————————CursorKind.UNEXPOSED_EXPR: b (Line: 476, Col: 46)
|—————————————CursorKind.DECL_REF_EXPR: b (Line: 476, Col: 46)
|————————————CursorKind.UNARY_OPERATOR:  (Line: 476, Col: 50)
|—————————————CursorKind.PAREN_EXPR:  (Line: 476, Col: 51)
|——————————————CursorKind.BINARY_OPERATOR:  (Line: 476, Col: 52)
|———————————————CursorKind.UNEXPOSED_EXPR: mask (Line: 476, Col: 52)
|————————————————CursorKind.DECL_REF_EXPR: mask (Line: 476, Col: 52)
|———————————————CursorKind.INTEGER_LITERAL:  (Line: 476, Col: 60)
|——————————CursorKind.INTEGER_LITERAL:  (Line: 476, Col: 67)
|———————CursorKind.BINARY_OPERATOR:  (Line: 477, Col: 13)
|————————CursorKind.DECL_REF_EXPR: b (Line: 477, Col: 13)
|————————CursorKind.BINARY_OPERATOR:  (Line: 477, Col: 17)
|—————————CursorKind.BINARY_OPERATOR:  (Line: 477, Col: 17)
|——————————CursorKind.UNEXPOSED_EXPR: high (Line: 477, Col: 17)
|———————————CursorKind.DECL_REF_EXPR: high (Line: 477, Col: 17)
|——————————CursorKind.UNEXPOSED_EXPR: low (Line: 477, Col: 24)
|———————————CursorKind.DECL_REF_EXPR: low (Line: 477, Col: 24)
|—————————CursorKind.UNEXPOSED_EXPR:  (Line: 477, Col: 30)
|——————————CursorKind.PAREN_EXPR:  (Line: 477, Col: 30)
|———————————CursorKind.BINARY_OPERATOR:  (Line: 477, Col: 31)
|————————————CursorKind.INTEGER_LITERAL:  (Line: 477, Col: 31)
|————————————CursorKind.UNEXPOSED_EXPR: i (Line: 477, Col: 36)
|—————————————CursorKind.DECL_REF_EXPR: i (Line: 477, Col: 36)
|———————CursorKind.COMPOUND_ASSIGNMENT_OPERATOR:  (Line: 478, Col: 13)
|————————CursorKind.DECL_REF_EXPR: i (Line: 478, Col: 13)
|————————CursorKind.INTEGER_LITERAL:  (Line: 478, Col: 18)
|———————CursorKind.UNARY_OPERATOR:  (Line: 479, Col: 13)
|————————CursorKind.DECL_REF_EXPR: count (Line: 479, Col: 13)
|———————CursorKind.BINARY_OPERATOR:  (Line: 480, Col: 13)
|————————CursorKind.DECL_REF_EXPR: edges (Line: 480, Col: 13)
|————————CursorKind.BINARY_OPERATOR:  (Line: 480, Col: 21)
|—————————CursorKind.UNEXPOSED_EXPR: b (Line: 480, Col: 21)
|——————————CursorKind.DECL_REF_EXPR: b (Line: 480, Col: 21)
|—————————CursorKind.PAREN_EXPR:  (Line: 480, Col: 25)
|——————————CursorKind.BINARY_OPERATOR:  (Line: 480, Col: 26)
|———————————CursorKind.UNEXPOSED_EXPR: b (Line: 480, Col: 26)
|————————————CursorKind.DECL_REF_EXPR: b (Line: 480, Col: 26)
|———————————CursorKind.INTEGER_LITERAL:  (Line: 480, Col: 31)
|———CursorKind.BINARY_OPERATOR:  (Line: 483, Col: 5)
|————CursorKind.UNARY_OPERATOR:  (Line: 483, Col: 5)
|—————CursorKind.UNEXPOSED_EXPR: pb (Line: 483, Col: 6)
|——————CursorKind.DECL_REF_EXPR: pb (Line: 483, Col: 6)
|————CursorKind.UNEXPOSED_EXPR: b (Line: 483, Col: 11)
|—————CursorKind.DECL_REF_EXPR: b (Line: 483, Col: 11)
|———CursorKind.RETURN_STMT:  (Line: 484, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: count (Line: 484, Col: 12)
|—————CursorKind.DECL_REF_EXPR: count (Line: 484, Col: 12)
|—CursorKind.STRUCT_DECL: bitstuffer_s (Line: 488, Col: 8)
|——CursorKind.FIELD_DECL: prev_stuffed (Line: 489, Col: 14)
|———CursorKind.TYPE_REF: uint32_t (Line: 489, Col: 5)
|——CursorKind.FIELD_DECL: bitpos (Line: 489, Col: 28)
|———CursorKind.TYPE_REF: uint32_t (Line: 489, Col: 5)
|——CursorKind.FIELD_DECL: buf (Line: 489, Col: 37)
|———CursorKind.TYPE_REF: uint32_t (Line: 489, Col: 5)
|—CursorKind.FUNCTION_DECL: bs_pushraw(struct bitstuffer_s *, uint32_t, uint32_t) (Line: 494, Col: 1)
|——CursorKind.PARM_DECL: bs (Line: 494, Col: 33)
|———CursorKind.TYPE_REF: struct bitstuffer_s (Line: 494, Col: 19)
|——CursorKind.PARM_DECL: data (Line: 494, Col: 46)
|———CursorKind.TYPE_REF: uint32_t (Line: 494, Col: 37)
|——CursorKind.PARM_DECL: count (Line: 494, Col: 61)
|———CursorKind.TYPE_REF: uint32_t (Line: 494, Col: 52)
|——CursorKind.COMPOUND_STMT:  (Line: 495, Col: 1)
|———CursorKind.DECL_STMT:  (Line: 496, Col: 5)
|————CursorKind.VAR_DECL: bitpos (Line: 496, Col: 14)
|—————CursorKind.TYPE_REF: uint32_t (Line: 496, Col: 5)
|—————CursorKind.UNEXPOSED_EXPR: bitpos (Line: 496, Col: 27)
|——————CursorKind.MEMBER_REF_EXPR: bitpos (Line: 496, Col: 27)
|———————CursorKind.UNEXPOSED_EXPR: bs (Line: 496, Col: 23)
|————————CursorKind.DECL_REF_EXPR: bs (Line: 496, Col: 23)
|———CursorKind.DECL_STMT:  (Line: 497, Col: 5)
|————CursorKind.VAR_DECL: wp (Line: 497, Col: 14)
|—————CursorKind.TYPE_REF: uint32_t (Line: 497, Col: 5)
|—————CursorKind.BINARY_OPERATOR:  (Line: 497, Col: 19)
|——————CursorKind.UNEXPOSED_EXPR: bitpos (Line: 497, Col: 19)
|———————CursorKind.DECL_REF_EXPR: bitpos (Line: 497, Col: 19)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 497, Col: 28)
|———————CursorKind.INTEGER_LITERAL:  (Line: 497, Col: 28)
|————CursorKind.VAR_DECL: bitused (Line: 497, Col: 32)
|—————CursorKind.TYPE_REF: uint32_t (Line: 497, Col: 5)
|—————CursorKind.BINARY_OPERATOR:  (Line: 497, Col: 42)
|——————CursorKind.UNEXPOSED_EXPR: bitpos (Line: 497, Col: 42)
|———————CursorKind.DECL_REF_EXPR: bitpos (Line: 497, Col: 42)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 497, Col: 51)
|———————CursorKind.INTEGER_LITERAL:  (Line: 497, Col: 51)
|————CursorKind.VAR_DECL: bitavail (Line: 497, Col: 55)
|—————CursorKind.TYPE_REF: uint32_t (Line: 497, Col: 5)
|—————CursorKind.BINARY_OPERATOR:  (Line: 497, Col: 66)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 497, Col: 66)
|———————CursorKind.INTEGER_LITERAL:  (Line: 497, Col: 66)
|——————CursorKind.UNEXPOSED_EXPR: bitused (Line: 497, Col: 71)
|———————CursorKind.DECL_REF_EXPR: bitused (Line: 497, Col: 71)
|———CursorKind.DECL_STMT:  (Line: 498, Col: 5)
|————CursorKind.VAR_DECL: fb (Line: 498, Col: 15)
|—————CursorKind.TYPE_REF: uint32_t (Line: 498, Col: 5)
|—————CursorKind.UNARY_OPERATOR:  (Line: 498, Col: 20)
|——————CursorKind.ARRAY_SUBSCRIPT_EXPR:  (Line: 498, Col: 21)
|———————CursorKind.UNEXPOSED_EXPR: buf (Line: 498, Col: 25)
|————————CursorKind.MEMBER_REF_EXPR: buf (Line: 498, Col: 25)
|—————————CursorKind.UNEXPOSED_EXPR: bs (Line: 498, Col: 21)
|——————————CursorKind.DECL_REF_EXPR: bs (Line: 498, Col: 21)
|———————CursorKind.UNEXPOSED_EXPR: wp (Line: 498, Col: 29)
|————————CursorKind.DECL_REF_EXPR: wp (Line: 498, Col: 29)
|———CursorKind.IF_STMT:  (Line: 499, Col: 5)
|————CursorKind.BINARY_OPERATOR:  (Line: 499, Col: 9)
|—————CursorKind.UNEXPOSED_EXPR: bitavail (Line: 499, Col: 9)
|——————CursorKind.DECL_REF_EXPR: bitavail (Line: 499, Col: 9)
|—————CursorKind.UNEXPOSED_EXPR: count (Line: 499, Col: 21)
|——————CursorKind.DECL_REF_EXPR: count (Line: 499, Col: 21)
|————CursorKind.COMPOUND_STMT:  (Line: 499, Col: 28)
|—————CursorKind.COMPOUND_ASSIGNMENT_OPERATOR:  (Line: 500, Col: 9)
|——————CursorKind.ARRAY_SUBSCRIPT_EXPR:  (Line: 500, Col: 9)
|———————CursorKind.UNEXPOSED_EXPR: fb (Line: 500, Col: 9)
|————————CursorKind.DECL_REF_EXPR: fb (Line: 500, Col: 9)
|———————CursorKind.INTEGER_LITERAL:  (Line: 500, Col: 12)
|——————CursorKind.BINARY_OPERATOR:  (Line: 500, Col: 18)
|———————CursorKind.UNEXPOSED_EXPR: data (Line: 500, Col: 18)
|————————CursorKind.DECL_REF_EXPR: data (Line: 500, Col: 18)
|———————CursorKind.PAREN_EXPR:  (Line: 500, Col: 26)
|————————CursorKind.BINARY_OPERATOR:  (Line: 500, Col: 27)
|—————————CursorKind.UNEXPOSED_EXPR: bitavail (Line: 500, Col: 27)
|——————————CursorKind.DECL_REF_EXPR: bitavail (Line: 500, Col: 27)
|—————————CursorKind.UNEXPOSED_EXPR: count (Line: 500, Col: 38)
|——————————CursorKind.DECL_REF_EXPR: count (Line: 500, Col: 38)
|————CursorKind.COMPOUND_STMT:  (Line: 501, Col: 12)
|—————CursorKind.COMPOUND_ASSIGNMENT_OPERATOR:  (Line: 502, Col: 9)
|——————CursorKind.ARRAY_SUBSCRIPT_EXPR:  (Line: 502, Col: 9)
|———————CursorKind.UNEXPOSED_EXPR: fb (Line: 502, Col: 9)
|————————CursorKind.DECL_REF_EXPR: fb (Line: 502, Col: 9)
|———————CursorKind.INTEGER_LITERAL:  (Line: 502, Col: 12)
|——————CursorKind.BINARY_OPERATOR:  (Line: 502, Col: 18)
|———————CursorKind.UNEXPOSED_EXPR: data (Line: 502, Col: 18)
|————————CursorKind.DECL_REF_EXPR: data (Line: 502, Col: 18)
|———————CursorKind.PAREN_EXPR:  (Line: 502, Col: 26)
|————————CursorKind.BINARY_OPERATOR:  (Line: 502, Col: 27)
|—————————CursorKind.UNEXPOSED_EXPR: count (Line: 502, Col: 27)
|——————————CursorKind.DECL_REF_EXPR: count (Line: 502, Col: 27)
|—————————CursorKind.UNEXPOSED_EXPR: bitavail (Line: 502, Col: 35)
|——————————CursorKind.DECL_REF_EXPR: bitavail (Line: 502, Col: 35)
|—————CursorKind.COMPOUND_ASSIGNMENT_OPERATOR:  (Line: 503, Col: 9)
|——————CursorKind.ARRAY_SUBSCRIPT_EXPR:  (Line: 503, Col: 9)
|———————CursorKind.UNEXPOSED_EXPR: fb (Line: 503, Col: 9)
|————————CursorKind.DECL_REF_EXPR: fb (Line: 503, Col: 9)
|———————CursorKind.INTEGER_LITERAL:  (Line: 503, Col: 12)
|——————CursorKind.BINARY_OPERATOR:  (Line: 503, Col: 18)
|———————CursorKind.UNEXPOSED_EXPR: data (Line: 503, Col: 18)
|————————CursorKind.DECL_REF_EXPR: data (Line: 503, Col: 18)
|———————CursorKind.PAREN_EXPR:  (Line: 503, Col: 26)
|————————CursorKind.BINARY_OPERATOR:  (Line: 503, Col: 27)
|—————————CursorKind.UNEXPOSED_EXPR:  (Line: 503, Col: 27)
|——————————CursorKind.INTEGER_LITERAL:  (Line: 503, Col: 27)
|—————————CursorKind.PAREN_EXPR:  (Line: 503, Col: 32)
|——————————CursorKind.BINARY_OPERATOR:  (Line: 503, Col: 33)
|———————————CursorKind.UNEXPOSED_EXPR: count (Line: 503, Col: 33)
|————————————CursorKind.DECL_REF_EXPR: count (Line: 503, Col: 33)
|———————————CursorKind.UNEXPOSED_EXPR: bitavail (Line: 503, Col: 41)
|————————————CursorKind.DECL_REF_EXPR: bitavail (Line: 503, Col: 41)
|———CursorKind.BINARY_OPERATOR:  (Line: 505, Col: 5)
|————CursorKind.MEMBER_REF_EXPR: bitpos (Line: 505, Col: 9)
|—————CursorKind.UNEXPOSED_EXPR: bs (Line: 505, Col: 5)
|——————CursorKind.DECL_REF_EXPR: bs (Line: 505, Col: 5)
|————CursorKind.BINARY_OPERATOR:  (Line: 505, Col: 18)
|—————CursorKind.UNEXPOSED_EXPR: bitpos (Line: 505, Col: 18)
|——————CursorKind.DECL_REF_EXPR: bitpos (Line: 505, Col: 18)
|—————CursorKind.UNEXPOSED_EXPR: count (Line: 505, Col: 27)
|——————CursorKind.DECL_REF_EXPR: count (Line: 505, Col: 27)
|—CursorKind.FUNCTION_DECL: bs_push(struct bitstuffer_s *, uint32_t, uint32_t) (Line: 510, Col: 1)
|——CursorKind.PARM_DECL: bs (Line: 510, Col: 30)
|———CursorKind.TYPE_REF: struct bitstuffer_s (Line: 510, Col: 16)
|——CursorKind.PARM_DECL: data (Line: 510, Col: 43)
|———CursorKind.TYPE_REF: uint32_t (Line: 510, Col: 34)
|——CursorKind.PARM_DECL: count (Line: 510, Col: 58)
|———CursorKind.TYPE_REF: uint32_t (Line: 510, Col: 49)
|——CursorKind.COMPOUND_STMT:  (Line: 511, Col: 1)
|———CursorKind.COMPOUND_ASSIGNMENT_OPERATOR:  (Line: 512, Col: 5)
|————CursorKind.DECL_REF_EXPR: data (Line: 512, Col: 5)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 512, Col: 13)
|—————CursorKind.BINARY_OPERATOR:  (Line: 512, Col: 13)
|——————CursorKind.PAREN_EXPR:  (Line: 512, Col: 13)
|———————CursorKind.BINARY_OPERATOR:  (Line: 512, Col: 14)
|————————CursorKind.INTEGER_LITERAL:  (Line: 512, Col: 14)
|————————CursorKind.UNEXPOSED_EXPR: count (Line: 512, Col: 19)
|—————————CursorKind.DECL_REF_EXPR: count (Line: 512, Col: 19)
|——————CursorKind.INTEGER_LITERAL:  (Line: 512, Col: 28)
|———CursorKind.DECL_STMT:  (Line: 513, Col: 5)
|————CursorKind.VAR_DECL: stuf (Line: 513, Col: 14)
|—————CursorKind.TYPE_REF: uint32_t (Line: 513, Col: 5)
|—————CursorKind.BINARY_OPERATOR:  (Line: 513, Col: 21)
|——————CursorKind.PAREN_EXPR:  (Line: 513, Col: 21)
|———————CursorKind.BINARY_OPERATOR:  (Line: 513, Col: 22)
|————————CursorKind.UNEXPOSED_EXPR: prev_stuffed (Line: 513, Col: 26)
|—————————CursorKind.MEMBER_REF_EXPR: prev_stuffed (Line: 513, Col: 26)
|——————————CursorKind.UNEXPOSED_EXPR: bs (Line: 513, Col: 22)
|———————————CursorKind.DECL_REF_EXPR: bs (Line: 513, Col: 22)
|————————CursorKind.UNEXPOSED_EXPR: count (Line: 513, Col: 42)
|—————————CursorKind.DECL_REF_EXPR: count (Line: 513, Col: 42)
|——————CursorKind.UNEXPOSED_EXPR: data (Line: 513, Col: 51)
|———————CursorKind.DECL_REF_EXPR: data (Line: 513, Col: 51)
|———CursorKind.DECL_STMT:  (Line: 514, Col: 5)
|————CursorKind.VAR_DECL: newcount (Line: 514, Col: 14)
|—————CursorKind.TYPE_REF: uint32_t (Line: 514, Col: 5)
|—————CursorKind.CALL_EXPR: bitstuff (Line: 514, Col: 25)
|——————CursorKind.UNEXPOSED_EXPR: bitstuff (Line: 514, Col: 25)
|———————CursorKind.DECL_REF_EXPR: bitstuff (Line: 514, Col: 25)
|——————CursorKind.UNARY_OPERATOR:  (Line: 514, Col: 34)
|———————CursorKind.DECL_REF_EXPR: stuf (Line: 514, Col: 35)
|——————CursorKind.UNEXPOSED_EXPR: count (Line: 514, Col: 41)
|———————CursorKind.DECL_REF_EXPR: count (Line: 514, Col: 41)
|———CursorKind.CALL_EXPR: bs_pushraw (Line: 515, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: bs_pushraw (Line: 515, Col: 5)
|—————CursorKind.DECL_REF_EXPR: bs_pushraw (Line: 515, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: bs (Line: 515, Col: 16)
|—————CursorKind.DECL_REF_EXPR: bs (Line: 515, Col: 16)
|————CursorKind.UNEXPOSED_EXPR: stuf (Line: 515, Col: 20)
|—————CursorKind.DECL_REF_EXPR: stuf (Line: 515, Col: 20)
|————CursorKind.UNEXPOSED_EXPR: newcount (Line: 515, Col: 26)
|—————CursorKind.DECL_REF_EXPR: newcount (Line: 515, Col: 26)
|———CursorKind.BINARY_OPERATOR:  (Line: 516, Col: 5)
|————CursorKind.MEMBER_REF_EXPR: prev_stuffed (Line: 516, Col: 9)
|—————CursorKind.UNEXPOSED_EXPR: bs (Line: 516, Col: 5)
|——————CursorKind.DECL_REF_EXPR: bs (Line: 516, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: stuf (Line: 516, Col: 24)
|—————CursorKind.DECL_REF_EXPR: stuf (Line: 516, Col: 24)
|—CursorKind.FUNCTION_DECL: bs_finalize(struct bitstuffer_s *) (Line: 521, Col: 1)
|——CursorKind.TYPE_REF: uint32_t (Line: 520, Col: 8)
|——CursorKind.PARM_DECL: bs (Line: 521, Col: 34)
|———CursorKind.TYPE_REF: struct bitstuffer_s (Line: 521, Col: 20)
|——CursorKind.COMPOUND_STMT:  (Line: 522, Col: 1)
|———CursorKind.DECL_STMT:  (Line: 523, Col: 5)
|————CursorKind.VAR_DECL: bitpos (Line: 523, Col: 14)
|—————CursorKind.TYPE_REF: uint32_t (Line: 523, Col: 5)
|—————CursorKind.UNEXPOSED_EXPR: bitpos (Line: 523, Col: 27)
|——————CursorKind.MEMBER_REF_EXPR: bitpos (Line: 523, Col: 27)
|———————CursorKind.UNEXPOSED_EXPR: bs (Line: 523, Col: 23)
|————————CursorKind.DECL_REF_EXPR: bs (Line: 523, Col: 23)
|———CursorKind.DECL_STMT:  (Line: 524, Col: 5)
|————CursorKind.VAR_DECL: words (Line: 524, Col: 14)
|—————CursorKind.TYPE_REF: uint32_t (Line: 524, Col: 5)
|—————CursorKind.PAREN_EXPR:  (Line: 524, Col: 22)
|——————CursorKind.BINARY_OPERATOR:  (Line: 524, Col: 22)
|———————CursorKind.PAREN_EXPR:  (Line: 524, Col: 22)
|————————CursorKind.BINARY_OPERATOR:  (Line: 524, Col: 22)
|—————————CursorKind.BINARY_OPERATOR:  (Line: 524, Col: 22)
|——————————CursorKind.UNEXPOSED_EXPR:  (Line: 524, Col: 22)
|———————————CursorKind.PAREN_EXPR:  (Line: 524, Col: 22)
|————————————CursorKind.DECL_REF_EXPR: bitpos (Line: 524, Col: 22)
|——————————CursorKind.UNEXPOSED_EXPR:  (Line: 524, Col: 22)
|———————————CursorKind.PAREN_EXPR:  (Line: 524, Col: 22)
|————————————CursorKind.INTEGER_LITERAL:  (Line: 524, Col: 22)
|—————————CursorKind.UNEXPOSED_EXPR:  (Line: 524, Col: 22)
|——————————CursorKind.INTEGER_LITERAL:  (Line: 524, Col: 22)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 524, Col: 22)
|————————CursorKind.PAREN_EXPR:  (Line: 524, Col: 22)
|—————————CursorKind.INTEGER_LITERAL:  (Line: 524, Col: 22)
|———CursorKind.DECL_STMT:  (Line: 525, Col: 5)
|————CursorKind.VAR_DECL: extra (Line: 525, Col: 14)
|—————CursorKind.TYPE_REF: uint32_t (Line: 525, Col: 5)
|—————CursorKind.BINARY_OPERATOR:  (Line: 525, Col: 22)
|——————CursorKind.BINARY_OPERATOR:  (Line: 525, Col: 22)
|———————CursorKind.UNEXPOSED_EXPR: words (Line: 525, Col: 22)
|————————CursorKind.DECL_REF_EXPR: words (Line: 525, Col: 22)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 525, Col: 30)
|————————CursorKind.INTEGER_LITERAL:  (Line: 525, Col: 30)
|——————CursorKind.UNEXPOSED_EXPR: bitpos (Line: 525, Col: 35)
|———————CursorKind.DECL_REF_EXPR: bitpos (Line: 525, Col: 35)
|———CursorKind.IF_STMT:  (Line: 526, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: extra (Line: 526, Col: 9)
|—————CursorKind.DECL_REF_EXPR: extra (Line: 526, Col: 9)
|————CursorKind.COMPOUND_ASSIGNMENT_OPERATOR:  (Line: 527, Col: 9)
|—————CursorKind.ARRAY_SUBSCRIPT_EXPR:  (Line: 527, Col: 9)
|——————CursorKind.UNEXPOSED_EXPR: buf (Line: 527, Col: 13)
|———————CursorKind.MEMBER_REF_EXPR: buf (Line: 527, Col: 13)
|————————CursorKind.UNEXPOSED_EXPR: bs (Line: 527, Col: 9)
|—————————CursorKind.DECL_REF_EXPR: bs (Line: 527, Col: 9)
|——————CursorKind.BINARY_OPERATOR:  (Line: 527, Col: 17)
|———————CursorKind.UNEXPOSED_EXPR: words (Line: 527, Col: 17)
|————————CursorKind.DECL_REF_EXPR: words (Line: 527, Col: 17)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 527, Col: 25)
|————————CursorKind.INTEGER_LITERAL:  (Line: 527, Col: 25)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 527, Col: 31)
|——————CursorKind.BINARY_OPERATOR:  (Line: 527, Col: 31)
|———————CursorKind.PAREN_EXPR:  (Line: 527, Col: 31)
|————————CursorKind.BINARY_OPERATOR:  (Line: 527, Col: 32)
|—————————CursorKind.INTEGER_LITERAL:  (Line: 527, Col: 32)
|—————————CursorKind.UNEXPOSED_EXPR: extra (Line: 527, Col: 37)
|——————————CursorKind.DECL_REF_EXPR: extra (Line: 527, Col: 37)
|———————CursorKind.INTEGER_LITERAL:  (Line: 527, Col: 46)
|———CursorKind.RETURN_STMT:  (Line: 528, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: words (Line: 528, Col: 12)
|—————CursorKind.DECL_REF_EXPR: words (Line: 528, Col: 12)
|—CursorKind.FUNCTION_DECL: report_error(struct can2040 *, uint32_t) (Line: 538, Col: 1)
|——CursorKind.PARM_DECL: cd (Line: 538, Col: 30)
|———CursorKind.TYPE_REF: struct can2040 (Line: 538, Col: 21)
|——CursorKind.PARM_DECL: error_code (Line: 538, Col: 43)
|———CursorKind.TYPE_REF: uint32_t (Line: 538, Col: 34)
|——CursorKind.COMPOUND_STMT:  (Line: 539, Col: 1)
|———CursorKind.DECL_STMT:  (Line: 540, Col: 5)
|————CursorKind.STRUCT_DECL: can2040_msg (Line: 540, Col: 12)
|————CursorKind.VAR_DECL: msg (Line: 540, Col: 24)
|—————CursorKind.TYPE_REF: struct can2040_msg (Line: 540, Col: 12)
|—CursorKind.FUNCTION_DECL: report_rx_msg(struct can2040 *) (Line: 546, Col: 1)
|——CursorKind.PARM_DECL: cd (Line: 546, Col: 31)
|———CursorKind.TYPE_REF: struct can2040 (Line: 546, Col: 22)
|——CursorKind.COMPOUND_STMT:  (Line: 547, Col: 1)
|—CursorKind.FUNCTION_DECL: report_tx_msg(struct can2040 *, struct can2040_msg *) (Line: 553, Col: 1)
|——CursorKind.PARM_DECL: cd (Line: 553, Col: 31)
|———CursorKind.TYPE_REF: struct can2040 (Line: 553, Col: 22)
|——CursorKind.PARM_DECL: msg (Line: 553, Col: 55)
|———CursorKind.TYPE_REF: struct can2040_msg (Line: 553, Col: 42)
|——CursorKind.COMPOUND_STMT:  (Line: 554, Col: 1)
|—CursorKind.ENUM_DECL: enum (unnamed at src/can2040.c:564:1) (Line: 564, Col: 1)
|——CursorKind.ENUM_CONSTANT_DECL: TS_IDLE (Line: 565, Col: 5)
|——CursorKind.ENUM_CONSTANT_DECL: TS_QUEUED (Line: 565, Col: 14)
|——CursorKind.ENUM_CONSTANT_DECL: TS_CONFIRM_ACK (Line: 565, Col: 25)
|——CursorKind.ENUM_CONSTANT_DECL: TS_ACKING_RX (Line: 565, Col: 41)
|—CursorKind.FUNCTION_DECL: tx_qpos(struct can2040 *, uint32_t) (Line: 570, Col: 1)
|——CursorKind.TYPE_REF: uint32_t (Line: 569, Col: 8)
|——CursorKind.PARM_DECL: cd (Line: 570, Col: 25)
|———CursorKind.TYPE_REF: struct can2040 (Line: 570, Col: 16)
|——CursorKind.PARM_DECL: pos (Line: 570, Col: 38)
|———CursorKind.TYPE_REF: uint32_t (Line: 570, Col: 29)
|——CursorKind.COMPOUND_STMT:  (Line: 571, Col: 1)
|———CursorKind.RETURN_STMT:  (Line: 572, Col: 5)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 572, Col: 12)
|—————CursorKind.BINARY_OPERATOR:  (Line: 572, Col: 12)
|——————CursorKind.UNEXPOSED_EXPR: pos (Line: 572, Col: 12)
|———————CursorKind.UNEXPOSED_EXPR: pos (Line: 572, Col: 12)
|————————CursorKind.DECL_REF_EXPR: pos (Line: 572, Col: 12)
|——————CursorKind.PAREN_EXPR:  (Line: 572, Col: 18)
|———————CursorKind.BINARY_OPERATOR:  (Line: 572, Col: 18)
|————————CursorKind.CXX_UNARY_EXPR:  (Line: 572, Col: 18)
|—————————CursorKind.PAREN_EXPR:  (Line: 572, Col: 18)
|——————————CursorKind.UNEXPOSED_EXPR:  (Line: 572, Col: 18)
|———————————CursorKind.DECL_REF_EXPR: cd (Line: 572, Col: 18)
|————————CursorKind.CXX_UNARY_EXPR:  (Line: 572, Col: 18)
|—————————CursorKind.PAREN_EXPR:  (Line: 572, Col: 18)
|——————————CursorKind.ARRAY_SUBSCRIPT_EXPR:  (Line: 572, Col: 18)
|———————————CursorKind.UNEXPOSED_EXPR:  (Line: 572, Col: 18)
|————————————CursorKind.UNEXPOSED_EXPR:  (Line: 572, Col: 18)
|—————————————CursorKind.DECL_REF_EXPR: cd (Line: 572, Col: 18)
|———————————CursorKind.INTEGER_LITERAL:  (Line: 572, Col: 18)
|—CursorKind.FUNCTION_DECL: tx_schedule_transmit(struct can2040 *) (Line: 577, Col: 1)
|——CursorKind.PARM_DECL: cd (Line: 577, Col: 38)
|———CursorKind.TYPE_REF: struct can2040 (Line: 577, Col: 29)
|——CursorKind.COMPOUND_STMT:  (Line: 578, Col: 1)
|———CursorKind.CALL_EXPR: pio_sync_disable_irqs (Line: 579, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: pio_sync_disable_irqs (Line: 579, Col: 5)
|—————CursorKind.DECL_REF_EXPR: pio_sync_disable_irqs (Line: 579, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: cd (Line: 579, Col: 27)
|—————CursorKind.UNEXPOSED_EXPR: cd (Line: 579, Col: 27)
|——————CursorKind.DECL_REF_EXPR: cd (Line: 579, Col: 27)
|———CursorKind.IF_STMT:  (Line: 580, Col: 5)
|————CursorKind.BINARY_OPERATOR:  (Line: 580, Col: 9)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 580, Col: 9)
|——————CursorKind.DECL_REF_EXPR: cd (Line: 580, Col: 9)
|—————CursorKind.DECL_REF_EXPR: TS_CONFIRM_ACK (Line: 580, Col: 25)
|————CursorKind.COMPOUND_STMT:  (Line: 580, Col: 41)
|—————CursorKind.CALL_EXPR: pio_ack_cancel (Line: 581, Col: 9)
|——————CursorKind.UNEXPOSED_EXPR: pio_ack_cancel (Line: 581, Col: 9)
|———————CursorKind.DECL_REF_EXPR: pio_ack_cancel (Line: 581, Col: 9)
|——————CursorKind.UNEXPOSED_EXPR: cd (Line: 581, Col: 24)
|———————CursorKind.UNEXPOSED_EXPR: cd (Line: 581, Col: 24)
|————————CursorKind.DECL_REF_EXPR: cd (Line: 581, Col: 24)
|————CursorKind.IF_STMT:  (Line: 582, Col: 12)
|—————CursorKind.BINARY_OPERATOR:  (Line: 582, Col: 16)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 582, Col: 16)
|———————CursorKind.DECL_REF_EXPR: cd (Line: 582, Col: 16)
|——————CursorKind.DECL_REF_EXPR: TS_QUEUED (Line: 582, Col: 32)
|—————CursorKind.COMPOUND_STMT:  (Line: 582, Col: 43)
|——————CursorKind.IF_STMT:  (Line: 583, Col: 9)
|———————CursorKind.UNARY_OPERATOR:  (Line: 583, Col: 13)
|————————CursorKind.CALL_EXPR: pio_tx_did_conflict (Line: 583, Col: 14)
|—————————CursorKind.UNEXPOSED_EXPR: pio_tx_did_conflict (Line: 583, Col: 14)
|——————————CursorKind.DECL_REF_EXPR: pio_tx_did_conflict (Line: 583, Col: 14)
|—————————CursorKind.UNEXPOSED_EXPR: cd (Line: 583, Col: 34)
|——————————CursorKind.UNEXPOSED_EXPR: cd (Line: 583, Col: 34)
|———————————CursorKind.DECL_REF_EXPR: cd (Line: 583, Col: 34)
|———————CursorKind.RETURN_STMT:  (Line: 585, Col: 13)
|———CursorKind.IF_STMT:  (Line: 587, Col: 5)
|————CursorKind.BINARY_OPERATOR:  (Line: 587, Col: 9)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 587, Col: 9)
|——————CursorKind.DECL_REF_EXPR: cd (Line: 587, Col: 9)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 587, Col: 28)
|——————CursorKind.DECL_REF_EXPR: cd (Line: 587, Col: 28)
|————CursorKind.COMPOUND_STMT:  (Line: 587, Col: 45)
|—————CursorKind.BINARY_OPERATOR:  (Line: 589, Col: 9)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 589, Col: 9)
|———————CursorKind.DECL_REF_EXPR: cd (Line: 589, Col: 9)
|——————CursorKind.DECL_REF_EXPR: TS_IDLE (Line: 589, Col: 24)
|—————CursorKind.RETURN_STMT:  (Line: 590, Col: 9)
|———CursorKind.BINARY_OPERATOR:  (Line: 592, Col: 5)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 592, Col: 5)
|—————CursorKind.DECL_REF_EXPR: cd (Line: 592, Col: 5)
|————CursorKind.DECL_REF_EXPR: TS_QUEUED (Line: 592, Col: 20)
|———CursorKind.DECL_STMT:  (Line: 593, Col: 5)
|————CursorKind.STRUCT_DECL: can2040_transmit (Line: 593, Col: 12)
|————CursorKind.VAR_DECL: qt (Line: 593, Col: 30)
|—————CursorKind.TYPE_REF: struct can2040_transmit (Line: 593, Col: 12)
|—————CursorKind.UNARY_OPERATOR:  (Line: 593, Col: 35)
|——————CursorKind.ARRAY_SUBSCRIPT_EXPR:  (Line: 593, Col: 36)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 593, Col: 36)
|————————CursorKind.UNEXPOSED_EXPR:  (Line: 593, Col: 36)
|—————————CursorKind.DECL_REF_EXPR: cd (Line: 593, Col: 36)
|———————CursorKind.CALL_EXPR: tx_qpos (Line: 593, Col: 49)
|————————CursorKind.DECL_REF_EXPR: tx_qpos (Line: 593, Col: 49)
|————————CursorKind.DECL_REF_EXPR: cd (Line: 593, Col: 57)
|————————CursorKind.UNEXPOSED_EXPR:  (Line: 593, Col: 61)
|—————————CursorKind.DECL_REF_EXPR: cd (Line: 593, Col: 61)
|———CursorKind.CALL_EXPR: pio_tx_send (Line: 594, Col: 5)
|————CursorKind.DECL_REF_EXPR: pio_tx_send (Line: 594, Col: 5)
|————CursorKind.DECL_REF_EXPR: cd (Line: 594, Col: 17)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 594, Col: 21)
|—————CursorKind.DECL_REF_EXPR: qt (Line: 594, Col: 21)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 594, Col: 39)
|—————CursorKind.DECL_REF_EXPR: qt (Line: 594, Col: 39)
|—CursorKind.FUNCTION_DECL: tx_note_crc_start(struct can2040 *, uint32_t) (Line: 599, Col: 1)
|——CursorKind.PARM_DECL: cd (Line: 599, Col: 35)
|———CursorKind.TYPE_REF: struct can2040 (Line: 599, Col: 26)
|——CursorKind.PARM_DECL: parse_crc (Line: 599, Col: 48)
|———CursorKind.TYPE_REF: uint32_t (Line: 599, Col: 39)
|——CursorKind.COMPOUND_STMT:  (Line: 600, Col: 1)
|———CursorKind.DECL_STMT:  (Line: 601, Col: 5)
|————CursorKind.VAR_DECL: cs (Line: 601, Col: 14)
|—————CursorKind.TYPE_REF: uint32_t (Line: 601, Col: 5)
|—————CursorKind.MEMBER_REF_EXPR:  (Line: 601, Col: 19)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 601, Col: 19)
|———————CursorKind.DECL_REF_EXPR: cd (Line: 601, Col: 19)
|———CursorKind.DECL_STMT:  (Line: 602, Col: 5)
|————CursorKind.VAR_DECL: crcstart_bitpos (Line: 602, Col: 14)
|—————CursorKind.TYPE_REF: uint32_t (Line: 602, Col: 5)
|—————CursorKind.BINARY_OPERATOR:  (Line: 602, Col: 32)
|——————CursorKind.BINARY_OPERATOR:  (Line: 602, Col: 32)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 602, Col: 32)
|————————CursorKind.DECL_REF_EXPR: cd (Line: 602, Col: 32)
|———————CursorKind.DECL_REF_EXPR: cs (Line: 602, Col: 52)
|——————CursorKind.INTEGER_LITERAL:  (Line: 602, Col: 57)
|———CursorKind.DECL_STMT:  (Line: 603, Col: 5)
|————CursorKind.VAR_DECL: last (Line: 603, Col: 14)
|—————CursorKind.TYPE_REF: uint32_t (Line: 603, Col: 5)
|—————CursorKind.BINARY_OPERATOR:  (Line: 603, Col: 21)
|——————CursorKind.PAREN_EXPR:  (Line: 603, Col: 21)
|———————CursorKind.BINARY_OPERATOR:  (Line: 603, Col: 22)
|————————CursorKind.PAREN_EXPR:  (Line: 603, Col: 22)
|—————————CursorKind.BINARY_OPERATOR:  (Line: 603, Col: 23)
|——————————CursorKind.MEMBER_REF_EXPR:  (Line: 603, Col: 23)
|———————————CursorKind.UNEXPOSED_EXPR:  (Line: 603, Col: 23)
|————————————CursorKind.DECL_REF_EXPR: cd (Line: 603, Col: 23)
|——————————CursorKind.DECL_REF_EXPR: cs (Line: 603, Col: 50)
|————————CursorKind.INTEGER_LITERAL:  (Line: 603, Col: 57)
|——————CursorKind.DECL_REF_EXPR: parse_crc (Line: 603, Col: 63)
|———CursorKind.DECL_STMT:  (Line: 604, Col: 5)
|————CursorKind.VAR_DECL: crc_bitcount (Line: 604, Col: 9)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 604, Col: 24)
|——————CursorKind.BINARY_OPERATOR:  (Line: 604, Col: 24)
|———————CursorKind.CALL_EXPR: bitstuff (Line: 604, Col: 24)
|————————CursorKind.UNEXPOSED_EXPR: bitstuff (Line: 604, Col: 24)
|—————————CursorKind.DECL_REF_EXPR: bitstuff (Line: 604, Col: 24)
|————————CursorKind.UNARY_OPERATOR:  (Line: 604, Col: 33)
|—————————CursorKind.DECL_REF_EXPR: last (Line: 604, Col: 34)
|————————CursorKind.UNEXPOSED_EXPR:  (Line: 604, Col: 40)
|—————————CursorKind.BINARY_OPERATOR:  (Line: 604, Col: 40)
|——————————CursorKind.INTEGER_LITERAL:  (Line: 604, Col: 40)
|——————————CursorKind.INTEGER_LITERAL:  (Line: 604, Col: 45)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 604, Col: 50)
|————————CursorKind.INTEGER_LITERAL:  (Line: 604, Col: 50)
|———CursorKind.DECL_STMT:  (Line: 606, Col: 5)
|————CursorKind.STRUCT_DECL: can2040_transmit (Line: 606, Col: 12)
|————CursorKind.VAR_DECL: qt (Line: 606, Col: 30)
|—————CursorKind.TYPE_REF: struct can2040_transmit (Line: 606, Col: 12)
|—————CursorKind.UNARY_OPERATOR:  (Line: 606, Col: 35)
|——————CursorKind.ARRAY_SUBSCRIPT_EXPR:  (Line: 606, Col: 36)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 606, Col: 36)
|————————CursorKind.UNEXPOSED_EXPR:  (Line: 606, Col: 36)
|—————————CursorKind.DECL_REF_EXPR: cd (Line: 606, Col: 36)
|———————CursorKind.CALL_EXPR: tx_qpos (Line: 606, Col: 49)
|————————CursorKind.DECL_REF_EXPR: tx_qpos (Line: 606, Col: 49)
|————————CursorKind.DECL_REF_EXPR: cd (Line: 606, Col: 57)
|————————CursorKind.UNEXPOSED_EXPR:  (Line: 606, Col: 61)
|—————————CursorKind.DECL_REF_EXPR: cd (Line: 606, Col: 61)
|———CursorKind.DECL_STMT:  (Line: 607, Col: 5)
|————CursorKind.STRUCT_DECL: can2040_msg (Line: 607, Col: 12)
|————CursorKind.VAR_DECL: pm (Line: 607, Col: 25)
|—————CursorKind.TYPE_REF: struct can2040_msg (Line: 607, Col: 12)
|—————CursorKind.UNARY_OPERATOR:  (Line: 607, Col: 30)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 607, Col: 31)
|———————CursorKind.DECL_REF_EXPR: cd (Line: 607, Col: 31)
|———CursorKind.IF_STMT:  (Line: 608, Col: 5)
|————CursorKind.BINARY_OPERATOR:  (Line: 608, Col: 9)
|—————CursorKind.BINARY_OPERATOR:  (Line: 608, Col: 9)
|——————CursorKind.BINARY_OPERATOR:  (Line: 608, Col: 9)
|———————CursorKind.BINARY_OPERATOR:  (Line: 608, Col: 9)
|————————CursorKind.BINARY_OPERATOR:  (Line: 608, Col: 9)
|—————————CursorKind.BINARY_OPERATOR:  (Line: 608, Col: 9)
|——————————CursorKind.UNEXPOSED_EXPR:  (Line: 608, Col: 9)
|———————————CursorKind.DECL_REF_EXPR: cd (Line: 608, Col: 9)
|——————————CursorKind.DECL_REF_EXPR: TS_QUEUED (Line: 608, Col: 25)
|—————————CursorKind.BINARY_OPERATOR:  (Line: 608, Col: 38)
|——————————CursorKind.UNEXPOSED_EXPR:  (Line: 608, Col: 38)
|———————————CursorKind.DECL_REF_EXPR: qt (Line: 608, Col: 38)
|——————————CursorKind.UNEXPOSED_EXPR:  (Line: 608, Col: 49)
|———————————CursorKind.DECL_REF_EXPR: cd (Line: 608, Col: 49)
|————————CursorKind.BINARY_OPERATOR:  (Line: 609, Col: 12)
|—————————CursorKind.MEMBER_REF_EXPR:  (Line: 609, Col: 12)
|——————————CursorKind.UNEXPOSED_EXPR:  (Line: 609, Col: 12)
|———————————CursorKind.DECL_REF_EXPR: qt (Line: 609, Col: 12)
|—————————CursorKind.UNEXPOSED_EXPR:  (Line: 609, Col: 26)
|——————————CursorKind.DECL_REF_EXPR: pm (Line: 609, Col: 26)
|———————CursorKind.BINARY_OPERATOR:  (Line: 609, Col: 36)
|————————CursorKind.MEMBER_REF_EXPR:  (Line: 609, Col: 36)
|—————————CursorKind.UNEXPOSED_EXPR:  (Line: 609, Col: 36)
|——————————CursorKind.DECL_REF_EXPR: qt (Line: 609, Col: 36)
|————————CursorKind.UNEXPOSED_EXPR:  (Line: 609, Col: 51)
|—————————CursorKind.DECL_REF_EXPR: pm (Line: 609, Col: 51)
|——————CursorKind.BINARY_OPERATOR:  (Line: 610, Col: 12)
|———————CursorKind.ARRAY_SUBSCRIPT_EXPR:  (Line: 610, Col: 12)
|————————CursorKind.UNEXPOSED_EXPR:  (Line: 610, Col: 12)
|—————————CursorKind.MEMBER_REF_EXPR:  (Line: 610, Col: 12)
|——————————CursorKind.UNEXPOSED_EXPR:  (Line: 610, Col: 12)
|———————————CursorKind.DECL_REF_EXPR: qt (Line: 610, Col: 12)
|————————CursorKind.INTEGER_LITERAL:  (Line: 610, Col: 27)
|———————CursorKind.ARRAY_SUBSCRIPT_EXPR:  (Line: 610, Col: 33)
|————————CursorKind.UNEXPOSED_EXPR:  (Line: 610, Col: 33)
|—————————CursorKind.UNEXPOSED_EXPR:  (Line: 610, Col: 33)
|——————————CursorKind.DECL_REF_EXPR: pm (Line: 610, Col: 33)
|————————CursorKind.INTEGER_LITERAL:  (Line: 610, Col: 44)
|—————CursorKind.BINARY_OPERATOR:  (Line: 611, Col: 12)
|——————CursorKind.ARRAY_SUBSCRIPT_EXPR:  (Line: 611, Col: 12)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 611, Col: 12)
|————————CursorKind.MEMBER_REF_EXPR:  (Line: 611, Col: 12)
|—————————CursorKind.UNEXPOSED_EXPR:  (Line: 611, Col: 12)
|——————————CursorKind.DECL_REF_EXPR: qt (Line: 611, Col: 12)
|———————CursorKind.INTEGER_LITERAL:  (Line: 611, Col: 27)
|——————CursorKind.ARRAY_SUBSCRIPT_EXPR:  (Line: 611, Col: 33)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 611, Col: 33)
|————————CursorKind.UNEXPOSED_EXPR:  (Line: 611, Col: 33)
|—————————CursorKind.DECL_REF_EXPR: pm (Line: 611, Col: 33)
|———————CursorKind.INTEGER_LITERAL:  (Line: 611, Col: 44)
|————CursorKind.COMPOUND_STMT:  (Line: 611, Col: 48)
|—————CursorKind.BINARY_OPERATOR:  (Line: 613, Col: 9)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 613, Col: 9)
|———————CursorKind.DECL_REF_EXPR: cd (Line: 613, Col: 9)
|——————CursorKind.DECL_REF_EXPR: TS_CONFIRM_ACK (Line: 613, Col: 24)
|—————CursorKind.BINARY_OPERATOR:  (Line: 614, Col: 9)
|——————CursorKind.DECL_REF_EXPR: last (Line: 614, Col: 9)
|——————CursorKind.BINARY_OPERATOR:  (Line: 614, Col: 16)
|———————CursorKind.PAREN_EXPR:  (Line: 614, Col: 16)
|————————CursorKind.BINARY_OPERATOR:  (Line: 614, Col: 17)
|—————————CursorKind.UNEXPOSED_EXPR: last (Line: 614, Col: 17)
|——————————CursorKind.DECL_REF_EXPR: last (Line: 614, Col: 17)
|—————————CursorKind.INTEGER_LITERAL:  (Line: 614, Col: 25)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 614, Col: 30)
|————————CursorKind.INTEGER_LITERAL:  (Line: 614, Col: 30)
|—————CursorKind.CALL_EXPR: pio_ack_check (Line: 615, Col: 9)
|——————CursorKind.UNEXPOSED_EXPR: pio_ack_check (Line: 615, Col: 9)
|———————CursorKind.DECL_REF_EXPR: pio_ack_check (Line: 615, Col: 9)
|——————CursorKind.UNEXPOSED_EXPR: cd (Line: 615, Col: 23)
|———————CursorKind.UNEXPOSED_EXPR: cd (Line: 615, Col: 23)
|————————CursorKind.DECL_REF_EXPR: cd (Line: 615, Col: 23)
|——————CursorKind.UNEXPOSED_EXPR: last (Line: 615, Col: 27)
|———————CursorKind.DECL_REF_EXPR: last (Line: 615, Col: 27)
|——————CursorKind.BINARY_OPERATOR:  (Line: 615, Col: 33)
|———————CursorKind.BINARY_OPERATOR:  (Line: 615, Col: 33)
|————————CursorKind.UNEXPOSED_EXPR: crcstart_bitpos (Line: 615, Col: 33)
|—————————CursorKind.DECL_REF_EXPR: crcstart_bitpos (Line: 615, Col: 33)
|————————CursorKind.UNEXPOSED_EXPR: crc_bitcount (Line: 615, Col: 51)
|—————————CursorKind.UNEXPOSED_EXPR: crc_bitcount (Line: 615, Col: 51)
|——————————CursorKind.DECL_REF_EXPR: crc_bitcount (Line: 615, Col: 51)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 615, Col: 66)
|————————CursorKind.INTEGER_LITERAL:  (Line: 615, Col: 66)
|—————CursorKind.RETURN_STMT:  (Line: 616, Col: 9)
|———CursorKind.BINARY_OPERATOR:  (Line: 620, Col: 5)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 620, Col: 5)
|—————CursorKind.DECL_REF_EXPR: cd (Line: 620, Col: 5)
|————CursorKind.DECL_REF_EXPR: TS_ACKING_RX (Line: 620, Col: 20)
|———CursorKind.BINARY_OPERATOR:  (Line: 621, Col: 5)
|————CursorKind.DECL_REF_EXPR: last (Line: 621, Col: 5)
|————CursorKind.BINARY_OPERATOR:  (Line: 621, Col: 12)
|—————CursorKind.PAREN_EXPR:  (Line: 621, Col: 12)
|——————CursorKind.BINARY_OPERATOR:  (Line: 621, Col: 13)
|———————CursorKind.UNEXPOSED_EXPR: last (Line: 621, Col: 13)
|————————CursorKind.DECL_REF_EXPR: last (Line: 621, Col: 13)
|———————CursorKind.INTEGER_LITERAL:  (Line: 621, Col: 21)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 621, Col: 26)
|——————CursorKind.INTEGER_LITERAL:  (Line: 621, Col: 26)
|———CursorKind.CALL_EXPR: pio_ack_inject (Line: 622, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: pio_ack_inject (Line: 622, Col: 5)
|—————CursorKind.DECL_REF_EXPR: pio_ack_inject (Line: 622, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: cd (Line: 622, Col: 20)
|—————CursorKind.UNEXPOSED_EXPR: cd (Line: 622, Col: 20)
|——————CursorKind.DECL_REF_EXPR: cd (Line: 622, Col: 20)
|————CursorKind.UNEXPOSED_EXPR: last (Line: 622, Col: 24)
|—————CursorKind.DECL_REF_EXPR: last (Line: 622, Col: 24)
|————CursorKind.BINARY_OPERATOR:  (Line: 622, Col: 30)
|—————CursorKind.BINARY_OPERATOR:  (Line: 622, Col: 30)
|——————CursorKind.UNEXPOSED_EXPR: crcstart_bitpos (Line: 622, Col: 30)
|———————CursorKind.DECL_REF_EXPR: crcstart_bitpos (Line: 622, Col: 30)
|——————CursorKind.UNEXPOSED_EXPR: crc_bitcount (Line: 622, Col: 48)
|———————CursorKind.UNEXPOSED_EXPR: crc_bitcount (Line: 622, Col: 48)
|————————CursorKind.DECL_REF_EXPR: crc_bitcount (Line: 622, Col: 48)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 622, Col: 63)
|——————CursorKind.INTEGER_LITERAL:  (Line: 622, Col: 63)
|—CursorKind.FUNCTION_DECL: tx_note_ack_success(struct can2040 *) (Line: 627, Col: 1)
|——CursorKind.PARM_DECL: cd (Line: 627, Col: 37)
|———CursorKind.TYPE_REF: struct can2040 (Line: 627, Col: 28)
|——CursorKind.COMPOUND_STMT:  (Line: 628, Col: 1)
|———CursorKind.IF_STMT:  (Line: 629, Col: 5)
|————CursorKind.BINARY_OPERATOR:  (Line: 629, Col: 9)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 629, Col: 9)
|——————CursorKind.DECL_REF_EXPR: cd (Line: 629, Col: 9)
|—————CursorKind.DECL_REF_EXPR: TS_CONFIRM_ACK (Line: 629, Col: 24)
|————CursorKind.RETURN_STMT:  (Line: 630, Col: 9)
|———CursorKind.IF_STMT:  (Line: 632, Col: 5)
|————CursorKind.BINARY_OPERATOR:  (Line: 632, Col: 9)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 632, Col: 9)
|——————CursorKind.DECL_REF_EXPR: cd (Line: 632, Col: 9)
|—————CursorKind.DECL_REF_EXPR: TS_CONFIRM_ACK (Line: 632, Col: 25)
|————CursorKind.COMPOUND_STMT:  (Line: 632, Col: 41)
|—————CursorKind.DECL_STMT:  (Line: 633, Col: 9)
|——————CursorKind.VAR_DECL: tx_pull_pos (Line: 633, Col: 18)
|———————CursorKind.TYPE_REF: uint32_t (Line: 633, Col: 9)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 633, Col: 32)
|————————CursorKind.DECL_REF_EXPR: cd (Line: 633, Col: 32)
|—————CursorKind.UNARY_OPERATOR:  (Line: 634, Col: 9)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 634, Col: 9)
|———————CursorKind.DECL_REF_EXPR: cd (Line: 634, Col: 9)
|—————CursorKind.CALL_EXPR: report_tx_msg (Line: 635, Col: 9)
|——————CursorKind.DECL_REF_EXPR: report_tx_msg (Line: 635, Col: 9)
|——————CursorKind.DECL_REF_EXPR: cd (Line: 635, Col: 23)
|——————CursorKind.UNARY_OPERATOR:  (Line: 635, Col: 27)
|———————CursorKind.MEMBER_REF_EXPR:  (Line: 635, Col: 28)
|————————CursorKind.ARRAY_SUBSCRIPT_EXPR:  (Line: 635, Col: 28)
|—————————CursorKind.UNEXPOSED_EXPR:  (Line: 635, Col: 28)
|——————————CursorKind.UNEXPOSED_EXPR:  (Line: 635, Col: 28)
|———————————CursorKind.DECL_REF_EXPR: cd (Line: 635, Col: 28)
|—————————CursorKind.CALL_EXPR: tx_qpos (Line: 635, Col: 41)
|——————————CursorKind.UNEXPOSED_EXPR: tx_qpos (Line: 635, Col: 41)
|———————————CursorKind.DECL_REF_EXPR: tx_qpos (Line: 635, Col: 41)
|——————————CursorKind.UNEXPOSED_EXPR: cd (Line: 635, Col: 49)
|———————————CursorKind.UNEXPOSED_EXPR: cd (Line: 635, Col: 49)
|————————————CursorKind.DECL_REF_EXPR: cd (Line: 635, Col: 49)
|——————————CursorKind.UNEXPOSED_EXPR: tx_pull_pos (Line: 635, Col: 53)
|———————————CursorKind.DECL_REF_EXPR: tx_pull_pos (Line: 635, Col: 53)
|————CursorKind.COMPOUND_STMT:  (Line: 636, Col: 12)
|—————CursorKind.CALL_EXPR: report_rx_msg (Line: 637, Col: 9)
|——————CursorKind.UNEXPOSED_EXPR: report_rx_msg (Line: 637, Col: 9)
|———————CursorKind.DECL_REF_EXPR: report_rx_msg (Line: 637, Col: 9)
|——————CursorKind.UNEXPOSED_EXPR: cd (Line: 637, Col: 23)
|———————CursorKind.UNEXPOSED_EXPR: cd (Line: 637, Col: 23)
|————————CursorKind.DECL_REF_EXPR: cd (Line: 637, Col: 23)
|———CursorKind.CALL_EXPR: pio_sync_normal_start_signal (Line: 640, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: pio_sync_normal_start_signal (Line: 640, Col: 5)
|—————CursorKind.DECL_REF_EXPR: pio_sync_normal_start_signal (Line: 640, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: cd (Line: 640, Col: 34)
|—————CursorKind.UNEXPOSED_EXPR: cd (Line: 640, Col: 34)
|——————CursorKind.DECL_REF_EXPR: cd (Line: 640, Col: 34)
|———CursorKind.CALL_EXPR: tx_schedule_transmit (Line: 641, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: tx_schedule_transmit (Line: 641, Col: 5)
|—————CursorKind.DECL_REF_EXPR: tx_schedule_transmit (Line: 641, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: cd (Line: 641, Col: 26)
|—————CursorKind.UNEXPOSED_EXPR: cd (Line: 641, Col: 26)
|——————CursorKind.DECL_REF_EXPR: cd (Line: 641, Col: 26)
|—CursorKind.FUNCTION_DECL: tx_note_message_start(struct can2040 *) (Line: 646, Col: 1)
|——CursorKind.PARM_DECL: cd (Line: 646, Col: 39)
|———CursorKind.TYPE_REF: struct can2040 (Line: 646, Col: 30)
|——CursorKind.COMPOUND_STMT:  (Line: 647, Col: 1)
|———CursorKind.CALL_EXPR: pio_sync_set_may_start_tx_irq (Line: 648, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: pio_sync_set_may_start_tx_irq (Line: 648, Col: 5)
|—————CursorKind.DECL_REF_EXPR: pio_sync_set_may_start_tx_irq (Line: 648, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: cd (Line: 648, Col: 35)
|—————CursorKind.UNEXPOSED_EXPR: cd (Line: 648, Col: 35)
|——————CursorKind.DECL_REF_EXPR: cd (Line: 648, Col: 35)
|—CursorKind.FUNCTION_DECL: tx_note_parse_error(struct can2040 *) (Line: 653, Col: 1)
|——CursorKind.PARM_DECL: cd (Line: 653, Col: 37)
|———CursorKind.TYPE_REF: struct can2040 (Line: 653, Col: 28)
|——CursorKind.COMPOUND_STMT:  (Line: 654, Col: 1)
|———CursorKind.CALL_EXPR: pio_sync_slow_start_signal (Line: 655, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: pio_sync_slow_start_signal (Line: 655, Col: 5)
|—————CursorKind.DECL_REF_EXPR: pio_sync_slow_start_signal (Line: 655, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: cd (Line: 655, Col: 32)
|—————CursorKind.UNEXPOSED_EXPR: cd (Line: 655, Col: 32)
|——————CursorKind.DECL_REF_EXPR: cd (Line: 655, Col: 32)
|———CursorKind.CALL_EXPR: tx_schedule_transmit (Line: 656, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: tx_schedule_transmit (Line: 656, Col: 5)
|—————CursorKind.DECL_REF_EXPR: tx_schedule_transmit (Line: 656, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: cd (Line: 656, Col: 26)
|—————CursorKind.UNEXPOSED_EXPR: cd (Line: 656, Col: 26)
|——————CursorKind.DECL_REF_EXPR: cd (Line: 656, Col: 26)
|———CursorKind.CALL_EXPR: pio_sync_set_may_start_tx_irq (Line: 657, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: pio_sync_set_may_start_tx_irq (Line: 657, Col: 5)
|—————CursorKind.DECL_REF_EXPR: pio_sync_set_may_start_tx_irq (Line: 657, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: cd (Line: 657, Col: 35)
|—————CursorKind.UNEXPOSED_EXPR: cd (Line: 657, Col: 35)
|——————CursorKind.DECL_REF_EXPR: cd (Line: 657, Col: 35)
|—CursorKind.FUNCTION_DECL: tx_line_may_start_transmit(struct can2040 *) (Line: 662, Col: 1)
|——CursorKind.PARM_DECL: cd (Line: 662, Col: 44)
|———CursorKind.TYPE_REF: struct can2040 (Line: 662, Col: 35)
|——CursorKind.COMPOUND_STMT:  (Line: 663, Col: 1)
|———CursorKind.CALL_EXPR: tx_schedule_transmit (Line: 664, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: tx_schedule_transmit (Line: 664, Col: 5)
|—————CursorKind.DECL_REF_EXPR: tx_schedule_transmit (Line: 664, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: cd (Line: 664, Col: 26)
|—————CursorKind.UNEXPOSED_EXPR: cd (Line: 664, Col: 26)
|——————CursorKind.DECL_REF_EXPR: cd (Line: 664, Col: 26)
|—CursorKind.ENUM_DECL: enum (unnamed at src/can2040.c:673:1) (Line: 673, Col: 1)
|——CursorKind.ENUM_CONSTANT_DECL: MS_START (Line: 674, Col: 5)
|——CursorKind.ENUM_CONSTANT_DECL: MS_HEADER (Line: 674, Col: 15)
|——CursorKind.ENUM_CONSTANT_DECL: MS_EXT_HEADER (Line: 674, Col: 26)
|——CursorKind.ENUM_CONSTANT_DECL: MS_DATA0 (Line: 674, Col: 41)
|——CursorKind.ENUM_CONSTANT_DECL: MS_DATA1 (Line: 674, Col: 51)
|——CursorKind.ENUM_CONSTANT_DECL: MS_CRC (Line: 675, Col: 5)
|——CursorKind.ENUM_CONSTANT_DECL: MS_ACK (Line: 675, Col: 13)
|——CursorKind.ENUM_CONSTANT_DECL: MS_EOF (Line: 675, Col: 21)
|——CursorKind.ENUM_CONSTANT_DECL: MS_DISCARD (Line: 675, Col: 29)
|—CursorKind.FUNCTION_DECL: data_state_go_next(struct can2040 *, uint32_t, uint32_t) (Line: 680, Col: 1)
|——CursorKind.PARM_DECL: cd (Line: 680, Col: 36)
|———CursorKind.TYPE_REF: struct can2040 (Line: 680, Col: 27)
|——CursorKind.PARM_DECL: state (Line: 680, Col: 49)
|———CursorKind.TYPE_REF: uint32_t (Line: 680, Col: 40)
|——CursorKind.PARM_DECL: bits (Line: 680, Col: 65)
|———CursorKind.TYPE_REF: uint32_t (Line: 680, Col: 56)
|——CursorKind.COMPOUND_STMT:  (Line: 681, Col: 1)
|———CursorKind.BINARY_OPERATOR:  (Line: 682, Col: 5)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 682, Col: 5)
|—————CursorKind.DECL_REF_EXPR: cd (Line: 682, Col: 5)
|————CursorKind.DECL_REF_EXPR: state (Line: 682, Col: 23)
|———CursorKind.CALL_EXPR: unstuf_set_count (Line: 683, Col: 5)
|————CursorKind.DECL_REF_EXPR: unstuf_set_count (Line: 683, Col: 5)
|————CursorKind.UNARY_OPERATOR:  (Line: 683, Col: 22)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 683, Col: 23)
|——————CursorKind.DECL_REF_EXPR: cd (Line: 683, Col: 23)
|————CursorKind.DECL_REF_EXPR: bits (Line: 683, Col: 35)
|—CursorKind.FUNCTION_DECL: data_state_go_discard(struct can2040 *) (Line: 688, Col: 1)
|——CursorKind.PARM_DECL: cd (Line: 688, Col: 39)
|———CursorKind.TYPE_REF: struct can2040 (Line: 688, Col: 30)
|——CursorKind.COMPOUND_STMT:  (Line: 689, Col: 1)
|———CursorKind.CALL_EXPR: tx_note_parse_error (Line: 690, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: tx_note_parse_error (Line: 690, Col: 5)
|—————CursorKind.DECL_REF_EXPR: tx_note_parse_error (Line: 690, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: cd (Line: 690, Col: 25)
|—————CursorKind.UNEXPOSED_EXPR: cd (Line: 690, Col: 25)
|——————CursorKind.DECL_REF_EXPR: cd (Line: 690, Col: 25)
|———CursorKind.CALL_EXPR: data_state_go_next (Line: 691, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: data_state_go_next (Line: 691, Col: 5)
|—————CursorKind.DECL_REF_EXPR: data_state_go_next (Line: 691, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: cd (Line: 691, Col: 24)
|—————CursorKind.UNEXPOSED_EXPR: cd (Line: 691, Col: 24)
|——————CursorKind.DECL_REF_EXPR: cd (Line: 691, Col: 24)
|————CursorKind.UNEXPOSED_EXPR: MS_DISCARD (Line: 691, Col: 28)
|—————CursorKind.DECL_REF_EXPR: MS_DISCARD (Line: 691, Col: 28)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 691, Col: 40)
|—————CursorKind.INTEGER_LITERAL:  (Line: 691, Col: 40)
|—CursorKind.FUNCTION_DECL: data_state_line_error(struct can2040 *) (Line: 696, Col: 1)
|——CursorKind.PARM_DECL: cd (Line: 696, Col: 39)
|———CursorKind.TYPE_REF: struct can2040 (Line: 696, Col: 30)
|——CursorKind.COMPOUND_STMT:  (Line: 697, Col: 1)
|———CursorKind.CALL_EXPR: data_state_go_discard (Line: 698, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: data_state_go_discard (Line: 698, Col: 5)
|—————CursorKind.DECL_REF_EXPR: data_state_go_discard (Line: 698, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: cd (Line: 698, Col: 27)
|—————CursorKind.UNEXPOSED_EXPR: cd (Line: 698, Col: 27)
|——————CursorKind.DECL_REF_EXPR: cd (Line: 698, Col: 27)
|—CursorKind.FUNCTION_DECL: data_state_line_passive(struct can2040 *) (Line: 703, Col: 1)
|——CursorKind.PARM_DECL: cd (Line: 703, Col: 41)
|———CursorKind.TYPE_REF: struct can2040 (Line: 703, Col: 32)
|——CursorKind.COMPOUND_STMT:  (Line: 704, Col: 1)
|———CursorKind.IF_STMT:  (Line: 705, Col: 5)
|————CursorKind.BINARY_OPERATOR:  (Line: 705, Col: 9)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 705, Col: 9)
|——————CursorKind.DECL_REF_EXPR: cd (Line: 705, Col: 9)
|—————CursorKind.DECL_REF_EXPR: MS_START (Line: 705, Col: 28)
|————CursorKind.COMPOUND_STMT:  (Line: 705, Col: 38)
|—————CursorKind.IF_STMT:  (Line: 706, Col: 9)
|——————CursorKind.BINARY_OPERATOR:  (Line: 706, Col: 13)
|———————CursorKind.UNARY_OPERATOR:  (Line: 706, Col: 13)
|————————CursorKind.UNEXPOSED_EXPR:  (Line: 706, Col: 14)
|—————————CursorKind.MEMBER_REF_EXPR:  (Line: 706, Col: 14)
|——————————CursorKind.UNEXPOSED_EXPR:  (Line: 706, Col: 14)
|———————————CursorKind.DECL_REF_EXPR: cd (Line: 706, Col: 14)
|———————CursorKind.BINARY_OPERATOR:  (Line: 706, Col: 40)
|————————CursorKind.MEMBER_REF_EXPR:  (Line: 706, Col: 40)
|—————————CursorKind.UNEXPOSED_EXPR:  (Line: 706, Col: 40)
|——————————CursorKind.DECL_REF_EXPR: cd (Line: 706, Col: 40)
|————————CursorKind.INTEGER_LITERAL:  (Line: 706, Col: 67)
|——————CursorKind.COMPOUND_STMT:  (Line: 706, Col: 79)
|———————CursorKind.CALL_EXPR: pio_sync_setup (Line: 708, Col: 13)
|————————CursorKind.UNEXPOSED_EXPR: pio_sync_setup (Line: 708, Col: 13)
|—————————CursorKind.DECL_REF_EXPR: pio_sync_setup (Line: 708, Col: 13)
|————————CursorKind.UNEXPOSED_EXPR: cd (Line: 708, Col: 28)
|—————————CursorKind.UNEXPOSED_EXPR: cd (Line: 708, Col: 28)
|——————————CursorKind.DECL_REF_EXPR: cd (Line: 708, Col: 28)
|———————CursorKind.BINARY_OPERATOR:  (Line: 709, Col: 13)
|————————CursorKind.MEMBER_REF_EXPR:  (Line: 709, Col: 13)
|—————————CursorKind.UNEXPOSED_EXPR:  (Line: 709, Col: 13)
|——————————CursorKind.DECL_REF_EXPR: cd (Line: 709, Col: 13)
|————————CursorKind.INTEGER_LITERAL:  (Line: 709, Col: 39)
|———————CursorKind.CALL_EXPR: data_state_go_discard (Line: 710, Col: 13)
|————————CursorKind.UNEXPOSED_EXPR: data_state_go_discard (Line: 710, Col: 13)
|—————————CursorKind.DECL_REF_EXPR: data_state_go_discard (Line: 710, Col: 13)
|————————CursorKind.UNEXPOSED_EXPR: cd (Line: 710, Col: 35)
|—————————CursorKind.UNEXPOSED_EXPR: cd (Line: 710, Col: 35)
|——————————CursorKind.DECL_REF_EXPR: cd (Line: 710, Col: 35)
|———————CursorKind.RETURN_STMT:  (Line: 711, Col: 13)
|—————CursorKind.CALL_EXPR: data_state_go_next (Line: 713, Col: 9)
|——————CursorKind.UNEXPOSED_EXPR: data_state_go_next (Line: 713, Col: 9)
|———————CursorKind.DECL_REF_EXPR: data_state_go_next (Line: 713, Col: 9)
|——————CursorKind.UNEXPOSED_EXPR: cd (Line: 713, Col: 28)
|———————CursorKind.UNEXPOSED_EXPR: cd (Line: 713, Col: 28)
|————————CursorKind.DECL_REF_EXPR: cd (Line: 713, Col: 28)
|——————CursorKind.UNEXPOSED_EXPR: MS_START (Line: 713, Col: 32)
|———————CursorKind.DECL_REF_EXPR: MS_START (Line: 713, Col: 32)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 713, Col: 42)
|———————CursorKind.INTEGER_LITERAL:  (Line: 713, Col: 42)
|—————CursorKind.RETURN_STMT:  (Line: 714, Col: 9)
|———CursorKind.IF_STMT:  (Line: 717, Col: 5)
|————CursorKind.CALL_EXPR: pio_rx_check_stall (Line: 717, Col: 9)
|—————CursorKind.UNEXPOSED_EXPR: pio_rx_check_stall (Line: 717, Col: 9)
|——————CursorKind.DECL_REF_EXPR: pio_rx_check_stall (Line: 717, Col: 9)
|—————CursorKind.UNEXPOSED_EXPR: cd (Line: 717, Col: 28)
|——————CursorKind.UNEXPOSED_EXPR: cd (Line: 717, Col: 28)
|———————CursorKind.DECL_REF_EXPR: cd (Line: 717, Col: 28)
|————CursorKind.COMPOUND_STMT:  (Line: 717, Col: 33)
|—————CursorKind.BINARY_OPERATOR:  (Line: 719, Col: 9)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 719, Col: 9)
|———————CursorKind.DECL_REF_EXPR: cd (Line: 719, Col: 9)
|——————CursorKind.BINARY_OPERATOR:  (Line: 719, Col: 29)
|———————CursorKind.MEMBER_REF_EXPR:  (Line: 719, Col: 29)
|————————CursorKind.UNEXPOSED_EXPR:  (Line: 719, Col: 29)
|—————————CursorKind.DECL_REF_EXPR: cd (Line: 719, Col: 29)
|———————CursorKind.INTEGER_LITERAL:  (Line: 719, Col: 54)
|—————CursorKind.CALL_EXPR: pio_sm_setup (Line: 720, Col: 9)
|——————CursorKind.UNEXPOSED_EXPR: pio_sm_setup (Line: 720, Col: 9)
|———————CursorKind.DECL_REF_EXPR: pio_sm_setup (Line: 720, Col: 9)
|——————CursorKind.UNEXPOSED_EXPR: cd (Line: 720, Col: 22)
|———————CursorKind.UNEXPOSED_EXPR: cd (Line: 720, Col: 22)
|————————CursorKind.DECL_REF_EXPR: cd (Line: 720, Col: 22)
|—————CursorKind.CALL_EXPR: report_error (Line: 721, Col: 9)
|——————CursorKind.UNEXPOSED_EXPR: report_error (Line: 721, Col: 9)
|———————CursorKind.DECL_REF_EXPR: report_error (Line: 721, Col: 9)
|——————CursorKind.UNEXPOSED_EXPR: cd (Line: 721, Col: 22)
|———————CursorKind.UNEXPOSED_EXPR: cd (Line: 721, Col: 22)
|————————CursorKind.DECL_REF_EXPR: cd (Line: 721, Col: 22)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 721, Col: 26)
|———————CursorKind.INTEGER_LITERAL:  (Line: 721, Col: 26)
|—————CursorKind.CALL_EXPR: data_state_go_discard (Line: 722, Col: 9)
|——————CursorKind.UNEXPOSED_EXPR: data_state_go_discard (Line: 722, Col: 9)
|———————CursorKind.DECL_REF_EXPR: data_state_go_discard (Line: 722, Col: 9)
|——————CursorKind.UNEXPOSED_EXPR: cd (Line: 722, Col: 31)
|———————CursorKind.UNEXPOSED_EXPR: cd (Line: 722, Col: 31)
|————————CursorKind.DECL_REF_EXPR: cd (Line: 722, Col: 31)
|—————CursorKind.RETURN_STMT:  (Line: 723, Col: 9)
|———CursorKind.IF_STMT:  (Line: 726, Col: 5)
|————CursorKind.BINARY_OPERATOR:  (Line: 726, Col: 9)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 726, Col: 9)
|——————CursorKind.DECL_REF_EXPR: cd (Line: 726, Col: 9)
|—————CursorKind.DECL_REF_EXPR: MS_EOF (Line: 726, Col: 28)
|————CursorKind.CALL_EXPR: tx_note_parse_error (Line: 727, Col: 9)
|—————CursorKind.UNEXPOSED_EXPR: tx_note_parse_error (Line: 727, Col: 9)
|——————CursorKind.DECL_REF_EXPR: tx_note_parse_error (Line: 727, Col: 9)
|—————CursorKind.UNEXPOSED_EXPR: cd (Line: 727, Col: 29)
|——————CursorKind.UNEXPOSED_EXPR: cd (Line: 727, Col: 29)
|———————CursorKind.DECL_REF_EXPR: cd (Line: 727, Col: 29)
|———CursorKind.CALL_EXPR: data_state_go_next (Line: 728, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: data_state_go_next (Line: 728, Col: 5)
|—————CursorKind.DECL_REF_EXPR: data_state_go_next (Line: 728, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: cd (Line: 728, Col: 24)
|—————CursorKind.UNEXPOSED_EXPR: cd (Line: 728, Col: 24)
|——————CursorKind.DECL_REF_EXPR: cd (Line: 728, Col: 24)
|————CursorKind.UNEXPOSED_EXPR: MS_START (Line: 728, Col: 28)
|—————CursorKind.DECL_REF_EXPR: MS_START (Line: 728, Col: 28)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 728, Col: 38)
|—————CursorKind.INTEGER_LITERAL:  (Line: 728, Col: 38)
|—CursorKind.FUNCTION_DECL: data_state_go_crc(struct can2040 *) (Line: 733, Col: 1)
|——CursorKind.PARM_DECL: cd (Line: 733, Col: 35)
|———CursorKind.TYPE_REF: struct can2040 (Line: 733, Col: 26)
|——CursorKind.COMPOUND_STMT:  (Line: 734, Col: 1)
|———CursorKind.COMPOUND_ASSIGNMENT_OPERATOR:  (Line: 735, Col: 5)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 735, Col: 5)
|—————CursorKind.DECL_REF_EXPR: cd (Line: 735, Col: 5)
|————CursorKind.INTEGER_LITERAL:  (Line: 735, Col: 22)
|———CursorKind.CALL_EXPR: tx_note_crc_start (Line: 736, Col: 5)
|————CursorKind.DECL_REF_EXPR: tx_note_crc_start (Line: 736, Col: 5)
|————CursorKind.DECL_REF_EXPR: cd (Line: 736, Col: 23)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 736, Col: 27)
|—————CursorKind.DECL_REF_EXPR: cd (Line: 736, Col: 27)
|———CursorKind.CALL_EXPR: data_state_go_next (Line: 737, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: data_state_go_next (Line: 737, Col: 5)
|—————CursorKind.DECL_REF_EXPR: data_state_go_next (Line: 737, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: cd (Line: 737, Col: 24)
|—————CursorKind.UNEXPOSED_EXPR: cd (Line: 737, Col: 24)
|——————CursorKind.DECL_REF_EXPR: cd (Line: 737, Col: 24)
|————CursorKind.UNEXPOSED_EXPR: MS_CRC (Line: 737, Col: 28)
|—————CursorKind.DECL_REF_EXPR: MS_CRC (Line: 737, Col: 28)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 737, Col: 36)
|—————CursorKind.INTEGER_LITERAL:  (Line: 737, Col: 36)
|—CursorKind.FUNCTION_DECL: data_state_go_data(struct can2040 *, uint32_t, uint32_t) (Line: 742, Col: 1)
|——CursorKind.PARM_DECL: cd (Line: 742, Col: 36)
|———CursorKind.TYPE_REF: struct can2040 (Line: 742, Col: 27)
|——CursorKind.PARM_DECL: id (Line: 742, Col: 49)
|———CursorKind.TYPE_REF: uint32_t (Line: 742, Col: 40)
|——CursorKind.PARM_DECL: data (Line: 742, Col: 62)
|———CursorKind.TYPE_REF: uint32_t (Line: 742, Col: 53)
|——CursorKind.COMPOUND_STMT:  (Line: 743, Col: 1)
|———CursorKind.IF_STMT:  (Line: 744, Col: 5)
|————CursorKind.BINARY_OPERATOR:  (Line: 744, Col: 9)
|—————CursorKind.UNEXPOSED_EXPR: data (Line: 744, Col: 9)
|——————CursorKind.DECL_REF_EXPR: data (Line: 744, Col: 9)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 744, Col: 16)
|——————CursorKind.PAREN_EXPR:  (Line: 744, Col: 16)
|———————CursorKind.BINARY_OPERATOR:  (Line: 744, Col: 17)
|————————CursorKind.INTEGER_LITERAL:  (Line: 744, Col: 17)
|————————CursorKind.INTEGER_LITERAL:  (Line: 744, Col: 25)
|————CursorKind.COMPOUND_STMT:  (Line: 744, Col: 29)
|—————CursorKind.CALL_EXPR: data_state_go_discard (Line: 746, Col: 9)
|——————CursorKind.UNEXPOSED_EXPR: data_state_go_discard (Line: 746, Col: 9)
|———————CursorKind.DECL_REF_EXPR: data_state_go_discard (Line: 746, Col: 9)
|——————CursorKind.UNEXPOSED_EXPR: cd (Line: 746, Col: 31)
|———————CursorKind.UNEXPOSED_EXPR: cd (Line: 746, Col: 31)
|————————CursorKind.DECL_REF_EXPR: cd (Line: 746, Col: 31)
|—————CursorKind.RETURN_STMT:  (Line: 747, Col: 9)
|———CursorKind.BINARY_OPERATOR:  (Line: 749, Col: 5)
|————CursorKind.ARRAY_SUBSCRIPT_EXPR:  (Line: 749, Col: 5)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 749, Col: 5)
|——————CursorKind.MEMBER_REF_EXPR:  (Line: 749, Col: 5)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 749, Col: 5)
|————————CursorKind.DECL_REF_EXPR: cd (Line: 749, Col: 5)
|—————CursorKind.INTEGER_LITERAL:  (Line: 749, Col: 26)
|————CursorKind.BINARY_OPERATOR:  (Line: 749, Col: 31)
|—————CursorKind.ARRAY_SUBSCRIPT_EXPR:  (Line: 749, Col: 31)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 749, Col: 31)
|———————CursorKind.MEMBER_REF_EXPR:  (Line: 749, Col: 31)
|————————CursorKind.UNEXPOSED_EXPR:  (Line: 749, Col: 31)
|—————————CursorKind.DECL_REF_EXPR: cd (Line: 749, Col: 31)
|——————CursorKind.INTEGER_LITERAL:  (Line: 749, Col: 52)
|—————CursorKind.INTEGER_LITERAL:  (Line: 749, Col: 57)
|———CursorKind.DECL_STMT:  (Line: 750, Col: 5)
|————CursorKind.VAR_DECL: dlc (Line: 750, Col: 14)
|—————CursorKind.TYPE_REF: uint32_t (Line: 750, Col: 5)
|—————CursorKind.BINARY_OPERATOR:  (Line: 750, Col: 20)
|——————CursorKind.UNEXPOSED_EXPR: data (Line: 750, Col: 20)
|———————CursorKind.DECL_REF_EXPR: data (Line: 750, Col: 20)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 750, Col: 27)
|———————CursorKind.INTEGER_LITERAL:  (Line: 750, Col: 27)
|———CursorKind.BINARY_OPERATOR:  (Line: 751, Col: 5)
|————CursorKind.MEMBER_REF_EXPR:  (Line: 751, Col: 5)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 751, Col: 5)
|——————CursorKind.DECL_REF_EXPR: cd (Line: 751, Col: 5)
|————CursorKind.DECL_REF_EXPR: dlc (Line: 751, Col: 25)
|———CursorKind.IF_STMT:  (Line: 752, Col: 5)
|————CursorKind.BINARY_OPERATOR:  (Line: 752, Col: 9)
|—————CursorKind.UNEXPOSED_EXPR: data (Line: 752, Col: 9)
|——————CursorKind.DECL_REF_EXPR: data (Line: 752, Col: 9)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 752, Col: 16)
|——————CursorKind.PAREN_EXPR:  (Line: 752, Col: 16)
|———————CursorKind.BINARY_OPERATOR:  (Line: 752, Col: 17)
|————————CursorKind.INTEGER_LITERAL:  (Line: 752, Col: 17)
|————————CursorKind.INTEGER_LITERAL:  (Line: 752, Col: 22)
|————CursorKind.COMPOUND_STMT:  (Line: 752, Col: 26)
|—————CursorKind.BINARY_OPERATOR:  (Line: 753, Col: 9)
|——————CursorKind.DECL_REF_EXPR: dlc (Line: 753, Col: 9)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 753, Col: 15)
|———————CursorKind.INTEGER_LITERAL:  (Line: 753, Col: 15)
|———CursorKind.BINARY_OPERATOR:  (Line: 756, Col: 5)
|————CursorKind.MEMBER_REF_EXPR:  (Line: 756, Col: 5)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 756, Col: 5)
|——————CursorKind.DECL_REF_EXPR: cd (Line: 756, Col: 5)
|————CursorKind.DECL_REF_EXPR: id (Line: 756, Col: 24)
|———CursorKind.IF_STMT:  (Line: 757, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: dlc (Line: 757, Col: 9)
|—————CursorKind.DECL_REF_EXPR: dlc (Line: 757, Col: 9)
|————CursorKind.CALL_EXPR: data_state_go_next (Line: 758, Col: 9)
|—————CursorKind.UNEXPOSED_EXPR: data_state_go_next (Line: 758, Col: 9)
|——————CursorKind.DECL_REF_EXPR: data_state_go_next (Line: 758, Col: 9)
|—————CursorKind.UNEXPOSED_EXPR: cd (Line: 758, Col: 28)
|——————CursorKind.UNEXPOSED_EXPR: cd (Line: 758, Col: 28)
|———————CursorKind.DECL_REF_EXPR: cd (Line: 758, Col: 28)
|—————CursorKind.UNEXPOSED_EXPR: MS_DATA0 (Line: 758, Col: 32)
|——————CursorKind.DECL_REF_EXPR: MS_DATA0 (Line: 758, Col: 32)
|—————CursorKind.CONDITIONAL_OPERATOR:  (Line: 758, Col: 42)
|——————CursorKind.BINARY_OPERATOR:  (Line: 758, Col: 42)
|———————CursorKind.UNEXPOSED_EXPR: dlc (Line: 758, Col: 42)
|————————CursorKind.DECL_REF_EXPR: dlc (Line: 758, Col: 42)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 758, Col: 49)
|————————CursorKind.INTEGER_LITERAL:  (Line: 758, Col: 49)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 758, Col: 53)
|———————CursorKind.INTEGER_LITERAL:  (Line: 758, Col: 53)
|——————CursorKind.BINARY_OPERATOR:  (Line: 758, Col: 58)
|———————CursorKind.UNEXPOSED_EXPR: dlc (Line: 758, Col: 58)
|————————CursorKind.DECL_REF_EXPR: dlc (Line: 758, Col: 58)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 758, Col: 64)
|————————CursorKind.INTEGER_LITERAL:  (Line: 758, Col: 64)
|————CursorKind.CALL_EXPR: data_state_go_crc (Line: 760, Col: 9)
|—————CursorKind.UNEXPOSED_EXPR: data_state_go_crc (Line: 760, Col: 9)
|——————CursorKind.DECL_REF_EXPR: data_state_go_crc (Line: 760, Col: 9)
|—————CursorKind.UNEXPOSED_EXPR: cd (Line: 760, Col: 27)
|——————CursorKind.UNEXPOSED_EXPR: cd (Line: 760, Col: 27)
|———————CursorKind.DECL_REF_EXPR: cd (Line: 760, Col: 27)
|—CursorKind.FUNCTION_DECL: data_state_update_start(struct can2040 *, uint32_t) (Line: 765, Col: 1)
|——CursorKind.PARM_DECL: cd (Line: 765, Col: 41)
|———CursorKind.TYPE_REF: struct can2040 (Line: 765, Col: 32)
|——CursorKind.PARM_DECL: data (Line: 765, Col: 54)
|———CursorKind.TYPE_REF: uint32_t (Line: 765, Col: 45)
|——CursorKind.COMPOUND_STMT:  (Line: 766, Col: 1)
|———CursorKind.DECL_STMT:  (Line: 768, Col: 5)
|————CursorKind.VAR_DECL: ps (Line: 768, Col: 14)
|—————CursorKind.TYPE_REF: uint32_t (Line: 768, Col: 5)
|—————CursorKind.BINARY_OPERATOR:  (Line: 768, Col: 19)
|——————CursorKind.MEMBER_REF_EXPR:  (Line: 768, Col: 19)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 768, Col: 19)
|————————CursorKind.DECL_REF_EXPR: cd (Line: 768, Col: 19)
|——————CursorKind.PAREN_EXPR:  (Line: 768, Col: 46)
|———————CursorKind.BINARY_OPERATOR:  (Line: 768, Col: 47)
|————————CursorKind.MEMBER_REF_EXPR:  (Line: 768, Col: 47)
|—————————CursorKind.UNEXPOSED_EXPR:  (Line: 768, Col: 47)
|——————————CursorKind.DECL_REF_EXPR: cd (Line: 768, Col: 47)
|————————CursorKind.INTEGER_LITERAL:  (Line: 768, Col: 72)
|———CursorKind.IF_STMT:  (Line: 769, Col: 5)
|————CursorKind.BINARY_OPERATOR:  (Line: 769, Col: 9)
|—————CursorKind.PAREN_EXPR:  (Line: 769, Col: 9)
|——————CursorKind.BINARY_OPERATOR:  (Line: 769, Col: 10)
|———————CursorKind.UNEXPOSED_EXPR: ps (Line: 769, Col: 10)
|————————CursorKind.DECL_REF_EXPR: ps (Line: 769, Col: 10)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 769, Col: 15)
|————————CursorKind.INTEGER_LITERAL:  (Line: 769, Col: 15)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 769, Col: 20)
|——————CursorKind.INTEGER_LITERAL:  (Line: 769, Col: 20)
|————CursorKind.COMPOUND_STMT:  (Line: 769, Col: 27)
|—————CursorKind.CALL_EXPR: data_state_go_discard (Line: 770, Col: 9)
|——————CursorKind.UNEXPOSED_EXPR: data_state_go_discard (Line: 770, Col: 9)
|———————CursorKind.DECL_REF_EXPR: data_state_go_discard (Line: 770, Col: 9)
|——————CursorKind.UNEXPOSED_EXPR: cd (Line: 770, Col: 31)
|———————CursorKind.UNEXPOSED_EXPR: cd (Line: 770, Col: 31)
|————————CursorKind.DECL_REF_EXPR: cd (Line: 770, Col: 31)
|—————CursorKind.RETURN_STMT:  (Line: 771, Col: 9)
|———CursorKind.BINARY_OPERATOR:  (Line: 774, Col: 5)
|————CursorKind.MEMBER_REF_EXPR:  (Line: 774, Col: 5)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 774, Col: 5)
|——————CursorKind.DECL_REF_EXPR: cd (Line: 774, Col: 5)
|————CursorKind.DECL_REF_EXPR: data (Line: 774, Col: 24)
|———CursorKind.CALL_EXPR: tx_note_message_start (Line: 775, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: tx_note_message_start (Line: 775, Col: 5)
|—————CursorKind.DECL_REF_EXPR: tx_note_message_start (Line: 775, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: cd (Line: 775, Col: 27)
|—————CursorKind.UNEXPOSED_EXPR: cd (Line: 775, Col: 27)
|——————CursorKind.DECL_REF_EXPR: cd (Line: 775, Col: 27)
|———CursorKind.CALL_EXPR: data_state_go_next (Line: 776, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: data_state_go_next (Line: 776, Col: 5)
|—————CursorKind.DECL_REF_EXPR: data_state_go_next (Line: 776, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: cd (Line: 776, Col: 24)
|—————CursorKind.UNEXPOSED_EXPR: cd (Line: 776, Col: 24)
|——————CursorKind.DECL_REF_EXPR: cd (Line: 776, Col: 24)
|————CursorKind.UNEXPOSED_EXPR: MS_HEADER (Line: 776, Col: 28)
|—————CursorKind.DECL_REF_EXPR: MS_HEADER (Line: 776, Col: 28)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 776, Col: 39)
|—————CursorKind.INTEGER_LITERAL:  (Line: 776, Col: 39)
|—CursorKind.FUNCTION_DECL: data_state_update_header(struct can2040 *, uint32_t) (Line: 781, Col: 1)
|——CursorKind.PARM_DECL: cd (Line: 781, Col: 42)
|———CursorKind.TYPE_REF: struct can2040 (Line: 781, Col: 33)
|——CursorKind.PARM_DECL: data (Line: 781, Col: 55)
|———CursorKind.TYPE_REF: uint32_t (Line: 781, Col: 46)
|——CursorKind.COMPOUND_STMT:  (Line: 782, Col: 1)
|———CursorKind.COMPOUND_ASSIGNMENT_OPERATOR:  (Line: 783, Col: 5)
|————CursorKind.DECL_REF_EXPR: data (Line: 783, Col: 5)
|————CursorKind.BINARY_OPERATOR:  (Line: 783, Col: 13)
|—————CursorKind.MEMBER_REF_EXPR:  (Line: 783, Col: 13)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 783, Col: 13)
|———————CursorKind.DECL_REF_EXPR: cd (Line: 783, Col: 13)
|—————CursorKind.INTEGER_LITERAL:  (Line: 783, Col: 33)
|———CursorKind.BINARY_OPERATOR:  (Line: 784, Col: 5)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 784, Col: 5)
|—————CursorKind.DECL_REF_EXPR: cd (Line: 784, Col: 5)
|————CursorKind.CALL_EXPR: crcbits (Line: 784, Col: 21)
|—————CursorKind.UNEXPOSED_EXPR: crcbits (Line: 784, Col: 21)
|——————CursorKind.DECL_REF_EXPR: crcbits (Line: 784, Col: 21)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 784, Col: 29)
|——————CursorKind.INTEGER_LITERAL:  (Line: 784, Col: 29)
|—————CursorKind.UNEXPOSED_EXPR: data (Line: 784, Col: 32)
|——————CursorKind.DECL_REF_EXPR: data (Line: 784, Col: 32)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 784, Col: 38)
|——————CursorKind.INTEGER_LITERAL:  (Line: 784, Col: 38)
|———CursorKind.IF_STMT:  (Line: 785, Col: 5)
|————CursorKind.BINARY_OPERATOR:  (Line: 785, Col: 9)
|—————CursorKind.PAREN_EXPR:  (Line: 785, Col: 9)
|——————CursorKind.BINARY_OPERATOR:  (Line: 785, Col: 10)
|———————CursorKind.UNEXPOSED_EXPR: data (Line: 785, Col: 10)
|————————CursorKind.DECL_REF_EXPR: data (Line: 785, Col: 10)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 785, Col: 17)
|————————CursorKind.INTEGER_LITERAL:  (Line: 785, Col: 17)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 785, Col: 26)
|——————CursorKind.INTEGER_LITERAL:  (Line: 785, Col: 26)
|————CursorKind.COMPOUND_STMT:  (Line: 785, Col: 32)
|—————CursorKind.BINARY_OPERATOR:  (Line: 787, Col: 9)
|——————CursorKind.MEMBER_REF_EXPR:  (Line: 787, Col: 9)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 787, Col: 9)
|————————CursorKind.DECL_REF_EXPR: cd (Line: 787, Col: 9)
|——————CursorKind.DECL_REF_EXPR: data (Line: 787, Col: 28)
|—————CursorKind.CALL_EXPR: data_state_go_next (Line: 788, Col: 9)
|——————CursorKind.UNEXPOSED_EXPR: data_state_go_next (Line: 788, Col: 9)
|———————CursorKind.DECL_REF_EXPR: data_state_go_next (Line: 788, Col: 9)
|——————CursorKind.UNEXPOSED_EXPR: cd (Line: 788, Col: 28)
|———————CursorKind.UNEXPOSED_EXPR: cd (Line: 788, Col: 28)
|————————CursorKind.DECL_REF_EXPR: cd (Line: 788, Col: 28)
|——————CursorKind.UNEXPOSED_EXPR: MS_EXT_HEADER (Line: 788, Col: 32)
|———————CursorKind.DECL_REF_EXPR: MS_EXT_HEADER (Line: 788, Col: 32)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 788, Col: 47)
|———————CursorKind.INTEGER_LITERAL:  (Line: 788, Col: 47)
|—————CursorKind.RETURN_STMT:  (Line: 789, Col: 9)
|———CursorKind.CALL_EXPR: data_state_go_data (Line: 791, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: data_state_go_data (Line: 791, Col: 5)
|—————CursorKind.DECL_REF_EXPR: data_state_go_data (Line: 791, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: cd (Line: 791, Col: 24)
|—————CursorKind.UNEXPOSED_EXPR: cd (Line: 791, Col: 24)
|——————CursorKind.DECL_REF_EXPR: cd (Line: 791, Col: 24)
|————CursorKind.BINARY_OPERATOR:  (Line: 791, Col: 28)
|—————CursorKind.PAREN_EXPR:  (Line: 791, Col: 28)
|——————CursorKind.BINARY_OPERATOR:  (Line: 791, Col: 29)
|———————CursorKind.UNEXPOSED_EXPR: data (Line: 791, Col: 29)
|————————CursorKind.DECL_REF_EXPR: data (Line: 791, Col: 29)
|———————CursorKind.INTEGER_LITERAL:  (Line: 791, Col: 37)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 791, Col: 42)
|——————CursorKind.INTEGER_LITERAL:  (Line: 791, Col: 42)
|————CursorKind.UNEXPOSED_EXPR: data (Line: 791, Col: 49)
|—————CursorKind.DECL_REF_EXPR: data (Line: 791, Col: 49)
|—CursorKind.FUNCTION_DECL: data_state_update_ext_header(struct can2040 *, uint32_t) (Line: 796, Col: 1)
|——CursorKind.PARM_DECL: cd (Line: 796, Col: 46)
|———CursorKind.TYPE_REF: struct can2040 (Line: 796, Col: 37)
|——CursorKind.PARM_DECL: data (Line: 796, Col: 59)
|———CursorKind.TYPE_REF: uint32_t (Line: 796, Col: 50)
|——CursorKind.COMPOUND_STMT:  (Line: 797, Col: 1)
|———CursorKind.BINARY_OPERATOR:  (Line: 798, Col: 5)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 798, Col: 5)
|—————CursorKind.DECL_REF_EXPR: cd (Line: 798, Col: 5)
|————CursorKind.CALL_EXPR: crcbits (Line: 798, Col: 21)
|—————CursorKind.DECL_REF_EXPR: crcbits (Line: 798, Col: 21)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 798, Col: 29)
|——————CursorKind.DECL_REF_EXPR: cd (Line: 798, Col: 29)
|—————CursorKind.DECL_REF_EXPR: data (Line: 798, Col: 44)
|—————CursorKind.INTEGER_LITERAL:  (Line: 798, Col: 50)
|———CursorKind.DECL_STMT:  (Line: 799, Col: 5)
|————CursorKind.VAR_DECL: hdr1 (Line: 799, Col: 14)
|—————CursorKind.TYPE_REF: uint32_t (Line: 799, Col: 5)
|—————CursorKind.MEMBER_REF_EXPR:  (Line: 799, Col: 21)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 799, Col: 21)
|———————CursorKind.DECL_REF_EXPR: cd (Line: 799, Col: 21)
|———CursorKind.DECL_STMT:  (Line: 800, Col: 5)
|————CursorKind.VAR_DECL: id (Line: 800, Col: 14)
|—————CursorKind.TYPE_REF: uint32_t (Line: 800, Col: 5)
|———CursorKind.CALL_EXPR: data_state_go_data (Line: 802, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: data_state_go_data (Line: 802, Col: 5)
|—————CursorKind.DECL_REF_EXPR: data_state_go_data (Line: 802, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: cd (Line: 802, Col: 24)
|—————CursorKind.UNEXPOSED_EXPR: cd (Line: 802, Col: 24)
|——————CursorKind.DECL_REF_EXPR: cd (Line: 802, Col: 24)
|————CursorKind.UNEXPOSED_EXPR: id (Line: 802, Col: 28)
|—————CursorKind.DECL_REF_EXPR: id (Line: 802, Col: 28)
|————CursorKind.UNEXPOSED_EXPR: data (Line: 802, Col: 32)
|—————CursorKind.DECL_REF_EXPR: data (Line: 802, Col: 32)
|—CursorKind.FUNCTION_DECL: data_state_update_data0(struct can2040 *, uint32_t) (Line: 807, Col: 1)
|——CursorKind.PARM_DECL: cd (Line: 807, Col: 41)
|———CursorKind.TYPE_REF: struct can2040 (Line: 807, Col: 32)
|——CursorKind.PARM_DECL: data (Line: 807, Col: 54)
|———CursorKind.TYPE_REF: uint32_t (Line: 807, Col: 45)
|——CursorKind.COMPOUND_STMT:  (Line: 808, Col: 1)
|———CursorKind.DECL_STMT:  (Line: 809, Col: 5)
|————CursorKind.VAR_DECL: dlc (Line: 809, Col: 14)
|—————CursorKind.TYPE_REF: uint32_t (Line: 809, Col: 5)
|—————CursorKind.MEMBER_REF_EXPR:  (Line: 809, Col: 20)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 809, Col: 20)
|———————CursorKind.DECL_REF_EXPR: cd (Line: 809, Col: 20)
|————CursorKind.VAR_DECL: bits (Line: 809, Col: 39)
|—————CursorKind.TYPE_REF: uint32_t (Line: 809, Col: 5)
|—————CursorKind.CONDITIONAL_OPERATOR:  (Line: 809, Col: 46)
|——————CursorKind.BINARY_OPERATOR:  (Line: 809, Col: 46)
|———————CursorKind.UNEXPOSED_EXPR: dlc (Line: 809, Col: 46)
|————————CursorKind.DECL_REF_EXPR: dlc (Line: 809, Col: 46)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 809, Col: 53)
|————————CursorKind.INTEGER_LITERAL:  (Line: 809, Col: 53)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 809, Col: 57)
|———————CursorKind.INTEGER_LITERAL:  (Line: 809, Col: 57)
|——————CursorKind.BINARY_OPERATOR:  (Line: 809, Col: 62)
|———————CursorKind.UNEXPOSED_EXPR: dlc (Line: 809, Col: 62)
|————————CursorKind.DECL_REF_EXPR: dlc (Line: 809, Col: 62)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 809, Col: 68)
|————————CursorKind.INTEGER_LITERAL:  (Line: 809, Col: 68)
|———CursorKind.BINARY_OPERATOR:  (Line: 810, Col: 5)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 810, Col: 5)
|—————CursorKind.DECL_REF_EXPR: cd (Line: 810, Col: 5)
|————CursorKind.CALL_EXPR: crcbits (Line: 810, Col: 21)
|—————CursorKind.DECL_REF_EXPR: crcbits (Line: 810, Col: 21)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 810, Col: 29)
|——————CursorKind.DECL_REF_EXPR: cd (Line: 810, Col: 29)
|—————CursorKind.DECL_REF_EXPR: data (Line: 810, Col: 44)
|—————CursorKind.DECL_REF_EXPR: bits (Line: 810, Col: 50)
|———CursorKind.BINARY_OPERATOR:  (Line: 811, Col: 5)
|————CursorKind.ARRAY_SUBSCRIPT_EXPR:  (Line: 811, Col: 5)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 811, Col: 5)
|——————CursorKind.MEMBER_REF_EXPR:  (Line: 811, Col: 5)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 811, Col: 5)
|————————CursorKind.DECL_REF_EXPR: cd (Line: 811, Col: 5)
|—————CursorKind.INTEGER_LITERAL:  (Line: 811, Col: 26)
|————CursorKind.CALL_EXPR: __builtin_bswap32 (Line: 811, Col: 31)
|—————CursorKind.UNEXPOSED_EXPR: __builtin_bswap32 (Line: 811, Col: 31)
|——————CursorKind.DECL_REF_EXPR: __builtin_bswap32 (Line: 811, Col: 31)
|—————CursorKind.BINARY_OPERATOR:  (Line: 811, Col: 49)
|——————CursorKind.UNEXPOSED_EXPR: data (Line: 811, Col: 49)
|———————CursorKind.DECL_REF_EXPR: data (Line: 811, Col: 49)
|——————CursorKind.PAREN_EXPR:  (Line: 811, Col: 57)
|———————CursorKind.BINARY_OPERATOR:  (Line: 811, Col: 58)
|————————CursorKind.UNEXPOSED_EXPR:  (Line: 811, Col: 58)
|—————————CursorKind.INTEGER_LITERAL:  (Line: 811, Col: 58)
|————————CursorKind.UNEXPOSED_EXPR: bits (Line: 811, Col: 63)
|—————————CursorKind.DECL_REF_EXPR: bits (Line: 811, Col: 63)
|———CursorKind.IF_STMT:  (Line: 812, Col: 5)
|————CursorKind.BINARY_OPERATOR:  (Line: 812, Col: 9)
|—————CursorKind.UNEXPOSED_EXPR: dlc (Line: 812, Col: 9)
|——————CursorKind.DECL_REF_EXPR: dlc (Line: 812, Col: 9)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 812, Col: 15)
|——————CursorKind.INTEGER_LITERAL:  (Line: 812, Col: 15)
|————CursorKind.CALL_EXPR: data_state_go_next (Line: 813, Col: 9)
|—————CursorKind.UNEXPOSED_EXPR: data_state_go_next (Line: 813, Col: 9)
|——————CursorKind.DECL_REF_EXPR: data_state_go_next (Line: 813, Col: 9)
|—————CursorKind.UNEXPOSED_EXPR: cd (Line: 813, Col: 28)
|——————CursorKind.UNEXPOSED_EXPR: cd (Line: 813, Col: 28)
|———————CursorKind.DECL_REF_EXPR: cd (Line: 813, Col: 28)
|—————CursorKind.UNEXPOSED_EXPR: MS_DATA1 (Line: 813, Col: 32)
|——————CursorKind.DECL_REF_EXPR: MS_DATA1 (Line: 813, Col: 32)
|—————CursorKind.CONDITIONAL_OPERATOR:  (Line: 813, Col: 42)
|——————CursorKind.BINARY_OPERATOR:  (Line: 813, Col: 42)
|———————CursorKind.UNEXPOSED_EXPR: dlc (Line: 813, Col: 42)
|————————CursorKind.DECL_REF_EXPR: dlc (Line: 813, Col: 42)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 813, Col: 49)
|————————CursorKind.INTEGER_LITERAL:  (Line: 813, Col: 49)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 813, Col: 53)
|———————CursorKind.INTEGER_LITERAL:  (Line: 813, Col: 53)
|——————CursorKind.BINARY_OPERATOR:  (Line: 813, Col: 58)
|———————CursorKind.PAREN_EXPR:  (Line: 813, Col: 58)
|————————CursorKind.BINARY_OPERATOR:  (Line: 813, Col: 59)
|—————————CursorKind.UNEXPOSED_EXPR: dlc (Line: 813, Col: 59)
|——————————CursorKind.DECL_REF_EXPR: dlc (Line: 813, Col: 59)
|—————————CursorKind.UNEXPOSED_EXPR:  (Line: 813, Col: 65)
|——————————CursorKind.INTEGER_LITERAL:  (Line: 813, Col: 65)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 813, Col: 70)
|————————CursorKind.INTEGER_LITERAL:  (Line: 813, Col: 70)
|————CursorKind.CALL_EXPR: data_state_go_crc (Line: 815, Col: 9)
|—————CursorKind.UNEXPOSED_EXPR: data_state_go_crc (Line: 815, Col: 9)
|——————CursorKind.DECL_REF_EXPR: data_state_go_crc (Line: 815, Col: 9)
|—————CursorKind.UNEXPOSED_EXPR: cd (Line: 815, Col: 27)
|——————CursorKind.UNEXPOSED_EXPR: cd (Line: 815, Col: 27)
|———————CursorKind.DECL_REF_EXPR: cd (Line: 815, Col: 27)
|—CursorKind.FUNCTION_DECL: data_state_update_data1(struct can2040 *, uint32_t) (Line: 820, Col: 1)
|——CursorKind.PARM_DECL: cd (Line: 820, Col: 41)
|———CursorKind.TYPE_REF: struct can2040 (Line: 820, Col: 32)
|——CursorKind.PARM_DECL: data (Line: 820, Col: 54)
|———CursorKind.TYPE_REF: uint32_t (Line: 820, Col: 45)
|——CursorKind.COMPOUND_STMT:  (Line: 821, Col: 1)
|———CursorKind.DECL_STMT:  (Line: 822, Col: 5)
|————CursorKind.VAR_DECL: dlc (Line: 822, Col: 14)
|—————CursorKind.TYPE_REF: uint32_t (Line: 822, Col: 5)
|—————CursorKind.MEMBER_REF_EXPR:  (Line: 822, Col: 20)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 822, Col: 20)
|———————CursorKind.DECL_REF_EXPR: cd (Line: 822, Col: 20)
|————CursorKind.VAR_DECL: bits (Line: 822, Col: 39)
|—————CursorKind.TYPE_REF: uint32_t (Line: 822, Col: 5)
|—————CursorKind.CONDITIONAL_OPERATOR:  (Line: 822, Col: 46)
|——————CursorKind.BINARY_OPERATOR:  (Line: 822, Col: 46)
|———————CursorKind.UNEXPOSED_EXPR: dlc (Line: 822, Col: 46)
|————————CursorKind.DECL_REF_EXPR: dlc (Line: 822, Col: 46)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 822, Col: 53)
|————————CursorKind.INTEGER_LITERAL:  (Line: 822, Col: 53)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 822, Col: 57)
|———————CursorKind.INTEGER_LITERAL:  (Line: 822, Col: 57)
|——————CursorKind.BINARY_OPERATOR:  (Line: 822, Col: 62)
|———————CursorKind.PAREN_EXPR:  (Line: 822, Col: 62)
|————————CursorKind.BINARY_OPERATOR:  (Line: 822, Col: 63)
|—————————CursorKind.UNEXPOSED_EXPR: dlc (Line: 822, Col: 63)
|——————————CursorKind.DECL_REF_EXPR: dlc (Line: 822, Col: 63)
|—————————CursorKind.UNEXPOSED_EXPR:  (Line: 822, Col: 69)
|——————————CursorKind.INTEGER_LITERAL:  (Line: 822, Col: 69)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 822, Col: 74)
|————————CursorKind.INTEGER_LITERAL:  (Line: 822, Col: 74)
|———CursorKind.BINARY_OPERATOR:  (Line: 823, Col: 5)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 823, Col: 5)
|—————CursorKind.DECL_REF_EXPR: cd (Line: 823, Col: 5)
|————CursorKind.CALL_EXPR: crcbits (Line: 823, Col: 21)
|—————CursorKind.DECL_REF_EXPR: crcbits (Line: 823, Col: 21)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 823, Col: 29)
|——————CursorKind.DECL_REF_EXPR: cd (Line: 823, Col: 29)
|—————CursorKind.DECL_REF_EXPR: data (Line: 823, Col: 44)
|—————CursorKind.DECL_REF_EXPR: bits (Line: 823, Col: 50)
|———CursorKind.BINARY_OPERATOR:  (Line: 824, Col: 5)
|————CursorKind.ARRAY_SUBSCRIPT_EXPR:  (Line: 824, Col: 5)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 824, Col: 5)
|——————CursorKind.MEMBER_REF_EXPR:  (Line: 824, Col: 5)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 824, Col: 5)
|————————CursorKind.DECL_REF_EXPR: cd (Line: 824, Col: 5)
|—————CursorKind.INTEGER_LITERAL:  (Line: 824, Col: 26)
|————CursorKind.CALL_EXPR: __builtin_bswap32 (Line: 824, Col: 31)
|—————CursorKind.UNEXPOSED_EXPR: __builtin_bswap32 (Line: 824, Col: 31)
|——————CursorKind.DECL_REF_EXPR: __builtin_bswap32 (Line: 824, Col: 31)
|—————CursorKind.BINARY_OPERATOR:  (Line: 824, Col: 49)
|——————CursorKind.UNEXPOSED_EXPR: data (Line: 824, Col: 49)
|———————CursorKind.DECL_REF_EXPR: data (Line: 824, Col: 49)
|——————CursorKind.PAREN_EXPR:  (Line: 824, Col: 57)
|———————CursorKind.BINARY_OPERATOR:  (Line: 824, Col: 58)
|————————CursorKind.UNEXPOSED_EXPR:  (Line: 824, Col: 58)
|—————————CursorKind.INTEGER_LITERAL:  (Line: 824, Col: 58)
|————————CursorKind.UNEXPOSED_EXPR: bits (Line: 824, Col: 63)
|—————————CursorKind.DECL_REF_EXPR: bits (Line: 824, Col: 63)
|———CursorKind.CALL_EXPR: data_state_go_crc (Line: 825, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: data_state_go_crc (Line: 825, Col: 5)
|—————CursorKind.DECL_REF_EXPR: data_state_go_crc (Line: 825, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: cd (Line: 825, Col: 23)
|—————CursorKind.UNEXPOSED_EXPR: cd (Line: 825, Col: 23)
|——————CursorKind.DECL_REF_EXPR: cd (Line: 825, Col: 23)
|—CursorKind.FUNCTION_DECL: data_state_update_crc(struct can2040 *, uint32_t) (Line: 830, Col: 1)
|——CursorKind.PARM_DECL: cd (Line: 830, Col: 39)
|———CursorKind.TYPE_REF: struct can2040 (Line: 830, Col: 30)
|——CursorKind.PARM_DECL: data (Line: 830, Col: 52)
|———CursorKind.TYPE_REF: uint32_t (Line: 830, Col: 43)
|——CursorKind.COMPOUND_STMT:  (Line: 831, Col: 1)
|———CursorKind.IF_STMT:  (Line: 832, Col: 5)
|————CursorKind.BINARY_OPERATOR:  (Line: 832, Col: 9)
|—————CursorKind.PAREN_EXPR:  (Line: 832, Col: 9)
|——————CursorKind.BINARY_OPERATOR:  (Line: 832, Col: 10)
|———————CursorKind.PAREN_EXPR:  (Line: 832, Col: 10)
|————————CursorKind.BINARY_OPERATOR:  (Line: 832, Col: 11)
|—————————CursorKind.UNEXPOSED_EXPR:  (Line: 832, Col: 11)
|——————————CursorKind.DECL_REF_EXPR: cd (Line: 832, Col: 11)
|—————————CursorKind.INTEGER_LITERAL:  (Line: 832, Col: 28)
|———————CursorKind.INTEGER_LITERAL:  (Line: 832, Col: 33)
|—————CursorKind.DECL_REF_EXPR: data (Line: 832, Col: 39)
|————CursorKind.COMPOUND_STMT:  (Line: 832, Col: 45)
|—————CursorKind.CALL_EXPR: data_state_go_discard (Line: 833, Col: 9)
|——————CursorKind.UNEXPOSED_EXPR: data_state_go_discard (Line: 833, Col: 9)
|———————CursorKind.DECL_REF_EXPR: data_state_go_discard (Line: 833, Col: 9)
|——————CursorKind.UNEXPOSED_EXPR: cd (Line: 833, Col: 31)
|———————CursorKind.UNEXPOSED_EXPR: cd (Line: 833, Col: 31)
|————————CursorKind.DECL_REF_EXPR: cd (Line: 833, Col: 31)
|—————CursorKind.RETURN_STMT:  (Line: 834, Col: 9)
|———CursorKind.CALL_EXPR: unstuf_clear_state (Line: 837, Col: 5)
|————CursorKind.DECL_REF_EXPR: unstuf_clear_state (Line: 837, Col: 5)
|————CursorKind.UNARY_OPERATOR:  (Line: 837, Col: 24)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 837, Col: 25)
|——————CursorKind.DECL_REF_EXPR: cd (Line: 837, Col: 25)
|———CursorKind.CALL_EXPR: data_state_go_next (Line: 838, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: data_state_go_next (Line: 838, Col: 5)
|—————CursorKind.DECL_REF_EXPR: data_state_go_next (Line: 838, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: cd (Line: 838, Col: 24)
|—————CursorKind.UNEXPOSED_EXPR: cd (Line: 838, Col: 24)
|——————CursorKind.DECL_REF_EXPR: cd (Line: 838, Col: 24)
|————CursorKind.UNEXPOSED_EXPR: MS_ACK (Line: 838, Col: 28)
|—————CursorKind.DECL_REF_EXPR: MS_ACK (Line: 838, Col: 28)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 838, Col: 36)
|—————CursorKind.INTEGER_LITERAL:  (Line: 838, Col: 36)
|—CursorKind.FUNCTION_DECL: data_state_update_ack(struct can2040 *, uint32_t) (Line: 843, Col: 1)
|——CursorKind.PARM_DECL: cd (Line: 843, Col: 39)
|———CursorKind.TYPE_REF: struct can2040 (Line: 843, Col: 30)
|——CursorKind.PARM_DECL: data (Line: 843, Col: 52)
|———CursorKind.TYPE_REF: uint32_t (Line: 843, Col: 43)
|——CursorKind.COMPOUND_STMT:  (Line: 844, Col: 1)
|———CursorKind.IF_STMT:  (Line: 845, Col: 5)
|————CursorKind.BINARY_OPERATOR:  (Line: 845, Col: 9)
|—————CursorKind.UNEXPOSED_EXPR: data (Line: 845, Col: 9)
|——————CursorKind.DECL_REF_EXPR: data (Line: 845, Col: 9)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 845, Col: 17)
|——————CursorKind.INTEGER_LITERAL:  (Line: 845, Col: 17)
|————CursorKind.COMPOUND_STMT:  (Line: 845, Col: 23)
|—————CursorKind.CALL_EXPR: data_state_go_discard (Line: 846, Col: 9)
|——————CursorKind.UNEXPOSED_EXPR: data_state_go_discard (Line: 846, Col: 9)
|———————CursorKind.DECL_REF_EXPR: data_state_go_discard (Line: 846, Col: 9)
|——————CursorKind.UNEXPOSED_EXPR: cd (Line: 846, Col: 31)
|———————CursorKind.UNEXPOSED_EXPR: cd (Line: 846, Col: 31)
|————————CursorKind.DECL_REF_EXPR: cd (Line: 846, Col: 31)
|—————CursorKind.RETURN_STMT:  (Line: 847, Col: 9)
|———CursorKind.CALL_EXPR: tx_note_ack_success (Line: 849, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: tx_note_ack_success (Line: 849, Col: 5)
|—————CursorKind.DECL_REF_EXPR: tx_note_ack_success (Line: 849, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: cd (Line: 849, Col: 25)
|—————CursorKind.UNEXPOSED_EXPR: cd (Line: 849, Col: 25)
|——————CursorKind.DECL_REF_EXPR: cd (Line: 849, Col: 25)
|———CursorKind.CALL_EXPR: data_state_go_next (Line: 850, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: data_state_go_next (Line: 850, Col: 5)
|—————CursorKind.DECL_REF_EXPR: data_state_go_next (Line: 850, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: cd (Line: 850, Col: 24)
|—————CursorKind.UNEXPOSED_EXPR: cd (Line: 850, Col: 24)
|——————CursorKind.DECL_REF_EXPR: cd (Line: 850, Col: 24)
|————CursorKind.UNEXPOSED_EXPR: MS_EOF (Line: 850, Col: 28)
|—————CursorKind.DECL_REF_EXPR: MS_EOF (Line: 850, Col: 28)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 850, Col: 36)
|—————CursorKind.INTEGER_LITERAL:  (Line: 850, Col: 36)
|—CursorKind.FUNCTION_DECL: data_state_update_eof(struct can2040 *, uint32_t) (Line: 855, Col: 1)
|——CursorKind.PARM_DECL: cd (Line: 855, Col: 39)
|———CursorKind.TYPE_REF: struct can2040 (Line: 855, Col: 30)
|——CursorKind.PARM_DECL: data (Line: 855, Col: 52)
|———CursorKind.TYPE_REF: uint32_t (Line: 855, Col: 43)
|——CursorKind.COMPOUND_STMT:  (Line: 856, Col: 1)
|———CursorKind.CALL_EXPR: data_state_go_discard (Line: 858, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: data_state_go_discard (Line: 858, Col: 5)
|—————CursorKind.DECL_REF_EXPR: data_state_go_discard (Line: 858, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: cd (Line: 858, Col: 27)
|—————CursorKind.UNEXPOSED_EXPR: cd (Line: 858, Col: 27)
|——————CursorKind.DECL_REF_EXPR: cd (Line: 858, Col: 27)
|—CursorKind.FUNCTION_DECL: data_state_update_discard(struct can2040 *, uint32_t) (Line: 863, Col: 1)
|——CursorKind.PARM_DECL: cd (Line: 863, Col: 43)
|———CursorKind.TYPE_REF: struct can2040 (Line: 863, Col: 34)
|——CursorKind.PARM_DECL: data (Line: 863, Col: 56)
|———CursorKind.TYPE_REF: uint32_t (Line: 863, Col: 47)
|——CursorKind.COMPOUND_STMT:  (Line: 864, Col: 1)
|———CursorKind.CALL_EXPR: data_state_go_discard (Line: 865, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: data_state_go_discard (Line: 865, Col: 5)
|—————CursorKind.DECL_REF_EXPR: data_state_go_discard (Line: 865, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: cd (Line: 865, Col: 27)
|—————CursorKind.UNEXPOSED_EXPR: cd (Line: 865, Col: 27)
|——————CursorKind.DECL_REF_EXPR: cd (Line: 865, Col: 27)
|—CursorKind.FUNCTION_DECL: data_state_update(struct can2040 *, uint32_t) (Line: 870, Col: 1)
|——CursorKind.PARM_DECL: cd (Line: 870, Col: 35)
|———CursorKind.TYPE_REF: struct can2040 (Line: 870, Col: 26)
|——CursorKind.PARM_DECL: data (Line: 870, Col: 48)
|———CursorKind.TYPE_REF: uint32_t (Line: 870, Col: 39)
|——CursorKind.COMPOUND_STMT:  (Line: 871, Col: 1)
|———CursorKind.SWITCH_STMT:  (Line: 872, Col: 5)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 872, Col: 13)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 872, Col: 13)
|——————CursorKind.DECL_REF_EXPR: cd (Line: 872, Col: 13)
|————CursorKind.COMPOUND_STMT:  (Line: 872, Col: 30)
|—————CursorKind.CASE_STMT:  (Line: 873, Col: 5)
|——————CursorKind.DECL_REF_EXPR: MS_START (Line: 873, Col: 10)
|——————CursorKind.CALL_EXPR: data_state_update_start (Line: 873, Col: 20)
|———————CursorKind.UNEXPOSED_EXPR: data_state_update_start (Line: 873, Col: 20)
|————————CursorKind.DECL_REF_EXPR: data_state_update_start (Line: 873, Col: 20)
|———————CursorKind.UNEXPOSED_EXPR: cd (Line: 873, Col: 44)
|————————CursorKind.UNEXPOSED_EXPR: cd (Line: 873, Col: 44)
|—————————CursorKind.DECL_REF_EXPR: cd (Line: 873, Col: 44)
|———————CursorKind.UNEXPOSED_EXPR: data (Line: 873, Col: 48)
|————————CursorKind.DECL_REF_EXPR: data (Line: 873, Col: 48)
|—————CursorKind.BREAK_STMT:  (Line: 873, Col: 55)
|—————CursorKind.CASE_STMT:  (Line: 874, Col: 5)
|——————CursorKind.DECL_REF_EXPR: MS_HEADER (Line: 874, Col: 10)
|——————CursorKind.CALL_EXPR: data_state_update_header (Line: 874, Col: 21)
|———————CursorKind.UNEXPOSED_EXPR: data_state_update_header (Line: 874, Col: 21)
|————————CursorKind.DECL_REF_EXPR: data_state_update_header (Line: 874, Col: 21)
|———————CursorKind.UNEXPOSED_EXPR: cd (Line: 874, Col: 46)
|————————CursorKind.UNEXPOSED_EXPR: cd (Line: 874, Col: 46)
|—————————CursorKind.DECL_REF_EXPR: cd (Line: 874, Col: 46)
|———————CursorKind.UNEXPOSED_EXPR: data (Line: 874, Col: 50)
|————————CursorKind.DECL_REF_EXPR: data (Line: 874, Col: 50)
|—————CursorKind.BREAK_STMT:  (Line: 874, Col: 57)
|—————CursorKind.CASE_STMT:  (Line: 875, Col: 5)
|——————CursorKind.DECL_REF_EXPR: MS_EXT_HEADER (Line: 875, Col: 10)
|——————CursorKind.CALL_EXPR: data_state_update_ext_header (Line: 875, Col: 25)
|———————CursorKind.UNEXPOSED_EXPR: data_state_update_ext_header (Line: 875, Col: 25)
|————————CursorKind.DECL_REF_EXPR: data_state_update_ext_header (Line: 875, Col: 25)
|———————CursorKind.UNEXPOSED_EXPR: cd (Line: 875, Col: 54)
|————————CursorKind.UNEXPOSED_EXPR: cd (Line: 875, Col: 54)
|—————————CursorKind.DECL_REF_EXPR: cd (Line: 875, Col: 54)
|———————CursorKind.UNEXPOSED_EXPR: data (Line: 875, Col: 58)
|————————CursorKind.DECL_REF_EXPR: data (Line: 875, Col: 58)
|—————CursorKind.BREAK_STMT:  (Line: 875, Col: 65)
|—————CursorKind.CASE_STMT:  (Line: 876, Col: 5)
|——————CursorKind.DECL_REF_EXPR: MS_DATA0 (Line: 876, Col: 10)
|——————CursorKind.CALL_EXPR: data_state_update_data0 (Line: 876, Col: 20)
|———————CursorKind.UNEXPOSED_EXPR: data_state_update_data0 (Line: 876, Col: 20)
|————————CursorKind.DECL_REF_EXPR: data_state_update_data0 (Line: 876, Col: 20)
|———————CursorKind.UNEXPOSED_EXPR: cd (Line: 876, Col: 44)
|————————CursorKind.UNEXPOSED_EXPR: cd (Line: 876, Col: 44)
|—————————CursorKind.DECL_REF_EXPR: cd (Line: 876, Col: 44)
|———————CursorKind.UNEXPOSED_EXPR: data (Line: 876, Col: 48)
|————————CursorKind.DECL_REF_EXPR: data (Line: 876, Col: 48)
|—————CursorKind.BREAK_STMT:  (Line: 876, Col: 55)
|—————CursorKind.CASE_STMT:  (Line: 877, Col: 5)
|——————CursorKind.DECL_REF_EXPR: MS_DATA1 (Line: 877, Col: 10)
|——————CursorKind.CALL_EXPR: data_state_update_data1 (Line: 877, Col: 20)
|———————CursorKind.UNEXPOSED_EXPR: data_state_update_data1 (Line: 877, Col: 20)
|————————CursorKind.DECL_REF_EXPR: data_state_update_data1 (Line: 877, Col: 20)
|———————CursorKind.UNEXPOSED_EXPR: cd (Line: 877, Col: 44)
|————————CursorKind.UNEXPOSED_EXPR: cd (Line: 877, Col: 44)
|—————————CursorKind.DECL_REF_EXPR: cd (Line: 877, Col: 44)
|———————CursorKind.UNEXPOSED_EXPR: data (Line: 877, Col: 48)
|————————CursorKind.DECL_REF_EXPR: data (Line: 877, Col: 48)
|—————CursorKind.BREAK_STMT:  (Line: 877, Col: 55)
|—————CursorKind.CASE_STMT:  (Line: 878, Col: 5)
|——————CursorKind.DECL_REF_EXPR: MS_CRC (Line: 878, Col: 10)
|——————CursorKind.CALL_EXPR: data_state_update_crc (Line: 878, Col: 18)
|———————CursorKind.UNEXPOSED_EXPR: data_state_update_crc (Line: 878, Col: 18)
|————————CursorKind.DECL_REF_EXPR: data_state_update_crc (Line: 878, Col: 18)
|———————CursorKind.UNEXPOSED_EXPR: cd (Line: 878, Col: 40)
|————————CursorKind.UNEXPOSED_EXPR: cd (Line: 878, Col: 40)
|—————————CursorKind.DECL_REF_EXPR: cd (Line: 878, Col: 40)
|———————CursorKind.UNEXPOSED_EXPR: data (Line: 878, Col: 44)
|————————CursorKind.DECL_REF_EXPR: data (Line: 878, Col: 44)
|—————CursorKind.BREAK_STMT:  (Line: 878, Col: 51)
|—————CursorKind.CASE_STMT:  (Line: 879, Col: 5)
|——————CursorKind.DECL_REF_EXPR: MS_ACK (Line: 879, Col: 10)
|——————CursorKind.CALL_EXPR: data_state_update_ack (Line: 879, Col: 18)
|———————CursorKind.UNEXPOSED_EXPR: data_state_update_ack (Line: 879, Col: 18)
|————————CursorKind.DECL_REF_EXPR: data_state_update_ack (Line: 879, Col: 18)
|———————CursorKind.UNEXPOSED_EXPR: cd (Line: 879, Col: 40)
|————————CursorKind.UNEXPOSED_EXPR: cd (Line: 879, Col: 40)
|—————————CursorKind.DECL_REF_EXPR: cd (Line: 879, Col: 40)
|———————CursorKind.UNEXPOSED_EXPR: data (Line: 879, Col: 44)
|————————CursorKind.DECL_REF_EXPR: data (Line: 879, Col: 44)
|—————CursorKind.BREAK_STMT:  (Line: 879, Col: 51)
|—————CursorKind.CASE_STMT:  (Line: 880, Col: 5)
|——————CursorKind.DECL_REF_EXPR: MS_EOF (Line: 880, Col: 10)
|——————CursorKind.CALL_EXPR: data_state_update_eof (Line: 880, Col: 18)
|———————CursorKind.UNEXPOSED_EXPR: data_state_update_eof (Line: 880, Col: 18)
|————————CursorKind.DECL_REF_EXPR: data_state_update_eof (Line: 880, Col: 18)
|———————CursorKind.UNEXPOSED_EXPR: cd (Line: 880, Col: 40)
|————————CursorKind.UNEXPOSED_EXPR: cd (Line: 880, Col: 40)
|—————————CursorKind.DECL_REF_EXPR: cd (Line: 880, Col: 40)
|———————CursorKind.UNEXPOSED_EXPR: data (Line: 880, Col: 44)
|————————CursorKind.DECL_REF_EXPR: data (Line: 880, Col: 44)
|—————CursorKind.BREAK_STMT:  (Line: 880, Col: 51)
|—————CursorKind.CASE_STMT:  (Line: 881, Col: 5)
|——————CursorKind.DECL_REF_EXPR: MS_DISCARD (Line: 881, Col: 10)
|——————CursorKind.CALL_EXPR: data_state_update_discard (Line: 881, Col: 22)
|———————CursorKind.UNEXPOSED_EXPR: data_state_update_discard (Line: 881, Col: 22)
|————————CursorKind.DECL_REF_EXPR: data_state_update_discard (Line: 881, Col: 22)
|———————CursorKind.UNEXPOSED_EXPR: cd (Line: 881, Col: 48)
|————————CursorKind.UNEXPOSED_EXPR: cd (Line: 881, Col: 48)
|—————————CursorKind.DECL_REF_EXPR: cd (Line: 881, Col: 48)
|———————CursorKind.UNEXPOSED_EXPR: data (Line: 881, Col: 52)
|————————CursorKind.DECL_REF_EXPR: data (Line: 881, Col: 52)
|—————CursorKind.BREAK_STMT:  (Line: 881, Col: 59)
|—CursorKind.FUNCTION_DECL: process_rx(struct can2040 *, uint32_t) (Line: 892, Col: 1)
|——CursorKind.PARM_DECL: cd (Line: 892, Col: 28)
|———CursorKind.TYPE_REF: struct can2040 (Line: 892, Col: 19)
|——CursorKind.PARM_DECL: rx_byte (Line: 892, Col: 41)
|———CursorKind.TYPE_REF: uint32_t (Line: 892, Col: 32)
|——CursorKind.COMPOUND_STMT:  (Line: 893, Col: 1)
|———CursorKind.CALL_EXPR: unstuf_add_bits (Line: 894, Col: 5)
|————CursorKind.DECL_REF_EXPR: unstuf_add_bits (Line: 894, Col: 5)
|————CursorKind.UNARY_OPERATOR:  (Line: 894, Col: 21)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 894, Col: 22)
|——————CursorKind.DECL_REF_EXPR: cd (Line: 894, Col: 22)
|————CursorKind.DECL_REF_EXPR: rx_byte (Line: 894, Col: 34)
|————CursorKind.INTEGER_LITERAL:  (Line: 894, Col: 43)
|———CursorKind.COMPOUND_ASSIGNMENT_OPERATOR:  (Line: 895, Col: 5)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 895, Col: 5)
|—————CursorKind.DECL_REF_EXPR: cd (Line: 895, Col: 5)
|————CursorKind.INTEGER_LITERAL:  (Line: 895, Col: 26)
|———CursorKind.FOR_STMT:  (Line: 898, Col: 5)
|————CursorKind.COMPOUND_STMT:  (Line: 898, Col: 14)
|—————CursorKind.DECL_STMT:  (Line: 899, Col: 9)
|——————CursorKind.VAR_DECL: ret (Line: 899, Col: 13)
|———————CursorKind.CALL_EXPR: unstuf_pull_bits (Line: 899, Col: 19)
|————————CursorKind.DECL_REF_EXPR: unstuf_pull_bits (Line: 899, Col: 19)
|————————CursorKind.UNARY_OPERATOR:  (Line: 899, Col: 36)
|—————————CursorKind.UNEXPOSED_EXPR:  (Line: 899, Col: 37)
|——————————CursorKind.DECL_REF_EXPR: cd (Line: 899, Col: 37)
|—————CursorKind.IF_STMT:  (Line: 900, Col: 9)
|——————CursorKind.UNARY_OPERATOR:  (Line: 900, Col: 13)
|———————CursorKind.UNEXPOSED_EXPR: ret (Line: 900, Col: 14)
|————————CursorKind.DECL_REF_EXPR: ret (Line: 900, Col: 14)
|——————CursorKind.COMPOUND_STMT:  (Line: 900, Col: 19)
|———————CursorKind.CALL_EXPR: data_state_update (Line: 902, Col: 13)
|————————CursorKind.DECL_REF_EXPR: data_state_update (Line: 902, Col: 13)
|————————CursorKind.DECL_REF_EXPR: cd (Line: 902, Col: 31)
|————————CursorKind.MEMBER_REF_EXPR:  (Line: 902, Col: 35)
|—————————CursorKind.UNEXPOSED_EXPR:  (Line: 902, Col: 35)
|——————————CursorKind.DECL_REF_EXPR: cd (Line: 902, Col: 35)
|——————CursorKind.IF_STMT:  (Line: 903, Col: 16)
|———————CursorKind.BINARY_OPERATOR:  (Line: 903, Col: 20)
|————————CursorKind.UNEXPOSED_EXPR: ret (Line: 903, Col: 20)
|—————————CursorKind.DECL_REF_EXPR: ret (Line: 903, Col: 20)
|————————CursorKind.INTEGER_LITERAL:  (Line: 903, Col: 26)
|———————CursorKind.COMPOUND_STMT:  (Line: 903, Col: 29)
|————————CursorKind.BREAK_STMT:  (Line: 905, Col: 13)
|———————CursorKind.COMPOUND_STMT:  (Line: 906, Col: 16)
|————————CursorKind.IF_STMT:  (Line: 907, Col: 13)
|—————————CursorKind.BINARY_OPERATOR:  (Line: 907, Col: 17)
|——————————CursorKind.UNEXPOSED_EXPR: ret (Line: 907, Col: 17)
|———————————CursorKind.DECL_REF_EXPR: ret (Line: 907, Col: 17)
|——————————CursorKind.UNARY_OPERATOR:  (Line: 907, Col: 24)
|———————————CursorKind.INTEGER_LITERAL:  (Line: 907, Col: 25)
|—————————CursorKind.COMPOUND_STMT:  (Line: 907, Col: 28)
|——————————CursorKind.CALL_EXPR: data_state_line_passive (Line: 909, Col: 17)
|———————————CursorKind.UNEXPOSED_EXPR: data_state_line_passive (Line: 909, Col: 17)
|————————————CursorKind.DECL_REF_EXPR: data_state_line_passive (Line: 909, Col: 17)
|———————————CursorKind.UNEXPOSED_EXPR: cd (Line: 909, Col: 41)
|————————————CursorKind.UNEXPOSED_EXPR: cd (Line: 909, Col: 41)
|—————————————CursorKind.DECL_REF_EXPR: cd (Line: 909, Col: 41)
|—————————CursorKind.COMPOUND_STMT:  (Line: 910, Col: 20)
|——————————CursorKind.CALL_EXPR: data_state_line_error (Line: 912, Col: 17)
|———————————CursorKind.UNEXPOSED_EXPR: data_state_line_error (Line: 912, Col: 17)
|————————————CursorKind.DECL_REF_EXPR: data_state_line_error (Line: 912, Col: 17)
|———————————CursorKind.UNEXPOSED_EXPR: cd (Line: 912, Col: 39)
|————————————CursorKind.UNEXPOSED_EXPR: cd (Line: 912, Col: 39)
|—————————————CursorKind.DECL_REF_EXPR: cd (Line: 912, Col: 39)
|—CursorKind.FUNCTION_DECL: can2040_pio_irq_handler(struct can2040 *) (Line: 920, Col: 1)
|——CursorKind.PARM_DECL: cd (Line: 920, Col: 41)
|———CursorKind.TYPE_REF: struct can2040 (Line: 920, Col: 32)
|——CursorKind.COMPOUND_STMT:  (Line: 921, Col: 1)
|———CursorKind.DECL_STMT:  (Line: 923, Col: 5)
|————CursorKind.VAR_DECL: ints (Line: 923, Col: 14)
|—————CursorKind.TYPE_REF: uint32_t (Line: 923, Col: 5)
|———CursorKind.WHILE_STMT:  (Line: 924, Col: 5)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 924, Col: 12)
|————CursorKind.COMPOUND_STMT:  (Line: 924, Col: 52)
|—————CursorKind.DECL_STMT:  (Line: 925, Col: 9)
|——————CursorKind.VAR_DECL: rx_byte (Line: 925, Col: 17)
|———————CursorKind.TYPE_REF: uint8_t (Line: 925, Col: 9)
|—————CursorKind.CALL_EXPR: process_rx (Line: 926, Col: 9)
|——————CursorKind.UNEXPOSED_EXPR: process_rx (Line: 926, Col: 9)
|———————CursorKind.DECL_REF_EXPR: process_rx (Line: 926, Col: 9)
|——————CursorKind.UNEXPOSED_EXPR: cd (Line: 926, Col: 20)
|———————CursorKind.UNEXPOSED_EXPR: cd (Line: 926, Col: 20)
|————————CursorKind.DECL_REF_EXPR: cd (Line: 926, Col: 20)
|——————CursorKind.UNEXPOSED_EXPR: rx_byte (Line: 926, Col: 24)
|———————CursorKind.UNEXPOSED_EXPR: rx_byte (Line: 926, Col: 24)
|————————CursorKind.DECL_REF_EXPR: rx_byte (Line: 926, Col: 24)
|———CursorKind.IF_STMT:  (Line: 930, Col: 5)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 930, Col: 9)
|————CursorKind.CALL_EXPR: tx_note_ack_success (Line: 932, Col: 9)
|—————CursorKind.UNEXPOSED_EXPR: tx_note_ack_success (Line: 932, Col: 9)
|——————CursorKind.DECL_REF_EXPR: tx_note_ack_success (Line: 932, Col: 9)
|—————CursorKind.UNEXPOSED_EXPR: cd (Line: 932, Col: 29)
|——————CursorKind.UNEXPOSED_EXPR: cd (Line: 932, Col: 29)
|———————CursorKind.DECL_REF_EXPR: cd (Line: 932, Col: 29)
|————CursorKind.IF_STMT:  (Line: 933, Col: 10)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 933, Col: 14)
|—————CursorKind.CALL_EXPR: tx_line_may_start_transmit (Line: 935, Col: 9)
|——————CursorKind.UNEXPOSED_EXPR: tx_line_may_start_transmit (Line: 935, Col: 9)
|———————CursorKind.DECL_REF_EXPR: tx_line_may_start_transmit (Line: 935, Col: 9)
|——————CursorKind.UNEXPOSED_EXPR: cd (Line: 935, Col: 36)
|———————CursorKind.UNEXPOSED_EXPR: cd (Line: 935, Col: 36)
|————————CursorKind.DECL_REF_EXPR: cd (Line: 935, Col: 36)
|—CursorKind.FUNCTION_DECL: can2040_check_transmit(struct can2040 *) (Line: 945, Col: 1)
|——CursorKind.PARM_DECL: cd (Line: 945, Col: 40)
|———CursorKind.TYPE_REF: struct can2040 (Line: 945, Col: 31)
|——CursorKind.COMPOUND_STMT:  (Line: 946, Col: 1)
|———CursorKind.DECL_STMT:  (Line: 947, Col: 5)
|————CursorKind.VAR_DECL: tx_pull_pos (Line: 947, Col: 14)
|—————CursorKind.TYPE_REF: uint32_t (Line: 947, Col: 5)
|—————CursorKind.CALL_EXPR: readl (Line: 947, Col: 28)
|——————CursorKind.DECL_REF_EXPR: readl (Line: 947, Col: 28)
|——————CursorKind.UNARY_OPERATOR:  (Line: 947, Col: 34)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 947, Col: 35)
|————————CursorKind.DECL_REF_EXPR: cd (Line: 947, Col: 35)
|———CursorKind.DECL_STMT:  (Line: 948, Col: 5)
|————CursorKind.VAR_DECL: tx_push_pos (Line: 948, Col: 14)
|—————CursorKind.TYPE_REF: uint32_t (Line: 948, Col: 5)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 948, Col: 28)
|——————CursorKind.DECL_REF_EXPR: cd (Line: 948, Col: 28)
|———CursorKind.DECL_STMT:  (Line: 949, Col: 5)
|————CursorKind.VAR_DECL: pending (Line: 949, Col: 14)
|—————CursorKind.TYPE_REF: uint32_t (Line: 949, Col: 5)
|—————CursorKind.BINARY_OPERATOR:  (Line: 949, Col: 24)
|——————CursorKind.UNEXPOSED_EXPR: tx_push_pos (Line: 949, Col: 24)
|———————CursorKind.DECL_REF_EXPR: tx_push_pos (Line: 949, Col: 24)
|——————CursorKind.UNEXPOSED_EXPR: tx_pull_pos (Line: 949, Col: 38)
|———————CursorKind.DECL_REF_EXPR: tx_pull_pos (Line: 949, Col: 38)
|———CursorKind.RETURN_STMT:  (Line: 950, Col: 5)
|————CursorKind.BINARY_OPERATOR:  (Line: 950, Col: 12)
|—————CursorKind.UNEXPOSED_EXPR: pending (Line: 950, Col: 12)
|——————CursorKind.UNEXPOSED_EXPR: pending (Line: 950, Col: 12)
|———————CursorKind.DECL_REF_EXPR: pending (Line: 950, Col: 12)
|—————CursorKind.PAREN_EXPR:  (Line: 950, Col: 22)
|——————CursorKind.BINARY_OPERATOR:  (Line: 950, Col: 22)
|———————CursorKind.CXX_UNARY_EXPR:  (Line: 950, Col: 22)
|————————CursorKind.PAREN_EXPR:  (Line: 950, Col: 22)
|—————————CursorKind.UNEXPOSED_EXPR:  (Line: 950, Col: 22)
|——————————CursorKind.DECL_REF_EXPR: cd (Line: 950, Col: 22)
|———————CursorKind.CXX_UNARY_EXPR:  (Line: 950, Col: 22)
|————————CursorKind.PAREN_EXPR:  (Line: 950, Col: 22)
|—————————CursorKind.ARRAY_SUBSCRIPT_EXPR:  (Line: 950, Col: 22)
|——————————CursorKind.UNEXPOSED_EXPR:  (Line: 950, Col: 22)
|———————————CursorKind.UNEXPOSED_EXPR:  (Line: 950, Col: 22)
|————————————CursorKind.DECL_REF_EXPR: cd (Line: 950, Col: 22)
|——————————CursorKind.INTEGER_LITERAL:  (Line: 950, Col: 22)
|—CursorKind.FUNCTION_DECL: can2040_transmit(struct can2040 *, struct can2040_msg *) (Line: 955, Col: 1)
|——CursorKind.PARM_DECL: cd (Line: 955, Col: 34)
|———CursorKind.TYPE_REF: struct can2040 (Line: 955, Col: 25)
|——CursorKind.PARM_DECL: msg (Line: 955, Col: 58)
|———CursorKind.TYPE_REF: struct can2040_msg (Line: 955, Col: 45)
|——CursorKind.COMPOUND_STMT:  (Line: 956, Col: 1)
|———CursorKind.DECL_STMT:  (Line: 957, Col: 5)
|————CursorKind.VAR_DECL: tx_pull_pos (Line: 957, Col: 14)
|—————CursorKind.TYPE_REF: uint32_t (Line: 957, Col: 5)
|—————CursorKind.CALL_EXPR: readl (Line: 957, Col: 28)
|——————CursorKind.DECL_REF_EXPR: readl (Line: 957, Col: 28)
|——————CursorKind.UNARY_OPERATOR:  (Line: 957, Col: 34)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 957, Col: 35)
|————————CursorKind.DECL_REF_EXPR: cd (Line: 957, Col: 35)
|———CursorKind.DECL_STMT:  (Line: 958, Col: 5)
|————CursorKind.VAR_DECL: tx_push_pos (Line: 958, Col: 14)
|—————CursorKind.TYPE_REF: uint32_t (Line: 958, Col: 5)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 958, Col: 28)
|——————CursorKind.DECL_REF_EXPR: cd (Line: 958, Col: 28)
|———CursorKind.DECL_STMT:  (Line: 959, Col: 5)
|————CursorKind.VAR_DECL: pending (Line: 959, Col: 14)
|—————CursorKind.TYPE_REF: uint32_t (Line: 959, Col: 5)
|—————CursorKind.BINARY_OPERATOR:  (Line: 959, Col: 24)
|——————CursorKind.UNEXPOSED_EXPR: tx_push_pos (Line: 959, Col: 24)
|———————CursorKind.DECL_REF_EXPR: tx_push_pos (Line: 959, Col: 24)
|——————CursorKind.UNEXPOSED_EXPR: tx_pull_pos (Line: 959, Col: 38)
|———————CursorKind.DECL_REF_EXPR: tx_pull_pos (Line: 959, Col: 38)
|———CursorKind.IF_STMT:  (Line: 960, Col: 5)
|————CursorKind.BINARY_OPERATOR:  (Line: 960, Col: 9)
|—————CursorKind.UNEXPOSED_EXPR: pending (Line: 960, Col: 9)
|——————CursorKind.UNEXPOSED_EXPR: pending (Line: 960, Col: 9)
|———————CursorKind.DECL_REF_EXPR: pending (Line: 960, Col: 9)
|—————CursorKind.PAREN_EXPR:  (Line: 960, Col: 20)
|——————CursorKind.BINARY_OPERATOR:  (Line: 960, Col: 20)
|———————CursorKind.CXX_UNARY_EXPR:  (Line: 960, Col: 20)
|————————CursorKind.PAREN_EXPR:  (Line: 960, Col: 20)
|—————————CursorKind.UNEXPOSED_EXPR:  (Line: 960, Col: 20)
|——————————CursorKind.DECL_REF_EXPR: cd (Line: 960, Col: 20)
|———————CursorKind.CXX_UNARY_EXPR:  (Line: 960, Col: 20)
|————————CursorKind.PAREN_EXPR:  (Line: 960, Col: 20)
|—————————CursorKind.ARRAY_SUBSCRIPT_EXPR:  (Line: 960, Col: 20)
|——————————CursorKind.UNEXPOSED_EXPR:  (Line: 960, Col: 20)
|———————————CursorKind.UNEXPOSED_EXPR:  (Line: 960, Col: 20)
|————————————CursorKind.DECL_REF_EXPR: cd (Line: 960, Col: 20)
|——————————CursorKind.INTEGER_LITERAL:  (Line: 960, Col: 20)
|————CursorKind.RETURN_STMT:  (Line: 962, Col: 9)
|—————CursorKind.UNARY_OPERATOR:  (Line: 962, Col: 16)
|——————CursorKind.INTEGER_LITERAL:  (Line: 962, Col: 17)
|———CursorKind.DECL_STMT:  (Line: 965, Col: 5)
|————CursorKind.STRUCT_DECL: can2040_transmit (Line: 965, Col: 12)
|————CursorKind.VAR_DECL: qt (Line: 965, Col: 30)
|—————CursorKind.TYPE_REF: struct can2040_transmit (Line: 965, Col: 12)
|—————CursorKind.UNARY_OPERATOR:  (Line: 965, Col: 35)
|——————CursorKind.ARRAY_SUBSCRIPT_EXPR:  (Line: 965, Col: 36)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 965, Col: 36)
|————————CursorKind.UNEXPOSED_EXPR:  (Line: 965, Col: 36)
|—————————CursorKind.DECL_REF_EXPR: cd (Line: 965, Col: 36)
|———————CursorKind.CALL_EXPR: tx_qpos (Line: 965, Col: 49)
|————————CursorKind.UNEXPOSED_EXPR: tx_qpos (Line: 965, Col: 49)
|—————————CursorKind.DECL_REF_EXPR: tx_qpos (Line: 965, Col: 49)
|————————CursorKind.UNEXPOSED_EXPR: cd (Line: 965, Col: 57)
|—————————CursorKind.UNEXPOSED_EXPR: cd (Line: 965, Col: 57)
|——————————CursorKind.DECL_REF_EXPR: cd (Line: 965, Col: 57)
|————————CursorKind.UNEXPOSED_EXPR: tx_push_pos (Line: 965, Col: 61)
|—————————CursorKind.DECL_REF_EXPR: tx_push_pos (Line: 965, Col: 61)
|———CursorKind.DECL_STMT:  (Line: 966, Col: 5)
|————CursorKind.VAR_DECL: id (Line: 966, Col: 14)
|—————CursorKind.TYPE_REF: uint32_t (Line: 966, Col: 5)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 966, Col: 19)
|——————CursorKind.DECL_REF_EXPR: msg (Line: 966, Col: 19)
|———CursorKind.IF_STMT:  (Line: 967, Col: 5)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 967, Col: 9)
|————CursorKind.BINARY_OPERATOR:  (Line: 968, Col: 9)
|—————CursorKind.MEMBER_REF_EXPR:  (Line: 968, Col: 9)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 968, Col: 9)
|———————CursorKind.DECL_REF_EXPR: qt (Line: 968, Col: 9)
|—————CursorKind.BINARY_OPERATOR:  (Line: 968, Col: 22)
|——————CursorKind.UNEXPOSED_EXPR: id (Line: 968, Col: 22)
|———————CursorKind.DECL_REF_EXPR: id (Line: 968, Col: 22)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 968, Col: 27)
|———————CursorKind.UNARY_OPERATOR:  (Line: 968, Col: 27)
|————————CursorKind.INTEGER_LITERAL:  (Line: 968, Col: 28)
|————CursorKind.NULL_STMT:  (Line: 970, Col: 9)
|———CursorKind.BINARY_OPERATOR:  (Line: 971, Col: 5)
|————CursorKind.MEMBER_REF_EXPR:  (Line: 971, Col: 5)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 971, Col: 5)
|——————CursorKind.DECL_REF_EXPR: qt (Line: 971, Col: 5)
|————CursorKind.BINARY_OPERATOR:  (Line: 971, Col: 19)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 971, Col: 19)
|——————CursorKind.DECL_REF_EXPR: msg (Line: 971, Col: 19)
|—————CursorKind.INTEGER_LITERAL:  (Line: 971, Col: 30)
|———CursorKind.DECL_STMT:  (Line: 972, Col: 5)
|————CursorKind.VAR_DECL: data_len (Line: 972, Col: 14)
|—————CursorKind.TYPE_REF: uint32_t (Line: 972, Col: 5)
|—————CursorKind.CONDITIONAL_OPERATOR:  (Line: 972, Col: 25)
|——————CursorKind.BINARY_OPERATOR:  (Line: 972, Col: 25)
|———————CursorKind.MEMBER_REF_EXPR:  (Line: 972, Col: 25)
|————————CursorKind.UNEXPOSED_EXPR:  (Line: 972, Col: 25)
|—————————CursorKind.DECL_REF_EXPR: qt (Line: 972, Col: 25)
|———————CursorKind.INTEGER_LITERAL:  (Line: 972, Col: 39)
|——————CursorKind.INTEGER_LITERAL:  (Line: 972, Col: 43)
|——————CursorKind.MEMBER_REF_EXPR:  (Line: 972, Col: 47)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 972, Col: 47)
|————————CursorKind.DECL_REF_EXPR: qt (Line: 972, Col: 47)
|———CursorKind.IF_STMT:  (Line: 973, Col: 5)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 973, Col: 9)
|————CursorKind.BINARY_OPERATOR:  (Line: 974, Col: 9)
|—————CursorKind.DECL_REF_EXPR: data_len (Line: 974, Col: 9)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 974, Col: 20)
|——————CursorKind.INTEGER_LITERAL:  (Line: 974, Col: 20)
|———CursorKind.BINARY_OPERATOR:  (Line: 975, Col: 5)
|————CursorKind.ARRAY_SUBSCRIPT_EXPR:  (Line: 975, Col: 5)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 975, Col: 5)
|——————CursorKind.MEMBER_REF_EXPR:  (Line: 975, Col: 5)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 975, Col: 5)
|————————CursorKind.DECL_REF_EXPR: qt (Line: 975, Col: 5)
|—————CursorKind.INTEGER_LITERAL:  (Line: 975, Col: 20)
|————CursorKind.BINARY_OPERATOR:  (Line: 975, Col: 25)
|—————CursorKind.ARRAY_SUBSCRIPT_EXPR:  (Line: 975, Col: 25)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 975, Col: 25)
|———————CursorKind.MEMBER_REF_EXPR:  (Line: 975, Col: 25)
|————————CursorKind.UNEXPOSED_EXPR:  (Line: 975, Col: 25)
|—————————CursorKind.DECL_REF_EXPR: qt (Line: 975, Col: 25)
|——————CursorKind.INTEGER_LITERAL:  (Line: 975, Col: 40)
|—————CursorKind.INTEGER_LITERAL:  (Line: 975, Col: 45)
|———CursorKind.CALL_EXPR: memcpy (Line: 976, Col: 5)
|————CursorKind.DECL_REF_EXPR: memcpy (Line: 976, Col: 5)
|————CursorKind.MEMBER_REF_EXPR:  (Line: 976, Col: 12)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 976, Col: 12)
|——————CursorKind.DECL_REF_EXPR: qt (Line: 976, Col: 12)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 976, Col: 26)
|—————CursorKind.DECL_REF_EXPR: msg (Line: 976, Col: 26)
|————CursorKind.DECL_REF_EXPR: data_len (Line: 976, Col: 37)
|———CursorKind.DECL_STMT:  (Line: 979, Col: 5)
|————CursorKind.VAR_DECL: crc (Line: 979, Col: 14)
|—————CursorKind.TYPE_REF: uint32_t (Line: 979, Col: 5)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 979, Col: 20)
|——————CursorKind.INTEGER_LITERAL:  (Line: 979, Col: 20)
|———CursorKind.CALL_EXPR: memset (Line: 980, Col: 5)
|————CursorKind.DECL_REF_EXPR: memset (Line: 980, Col: 5)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 980, Col: 12)
|—————CursorKind.DECL_REF_EXPR: qt (Line: 980, Col: 12)
|————CursorKind.INTEGER_LITERAL:  (Line: 980, Col: 30)
|————CursorKind.CXX_UNARY_EXPR:  (Line: 980, Col: 33)
|—————CursorKind.PAREN_EXPR:  (Line: 980, Col: 39)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 980, Col: 40)
|———————CursorKind.DECL_REF_EXPR: qt (Line: 980, Col: 40)
|———CursorKind.DECL_STMT:  (Line: 981, Col: 5)
|————CursorKind.VAR_DECL: bs (Line: 981, Col: 25)
|—————CursorKind.TYPE_REF: struct bitstuffer_s (Line: 981, Col: 12)
|—————CursorKind.INIT_LIST_EXPR:  (Line: 981, Col: 30)
|——————CursorKind.INTEGER_LITERAL:  (Line: 981, Col: 32)
|——————CursorKind.INTEGER_LITERAL:  (Line: 981, Col: 35)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 981, Col: 38)
|———————CursorKind.DECL_REF_EXPR: qt (Line: 981, Col: 38)
|———CursorKind.DECL_STMT:  (Line: 982, Col: 5)
|————CursorKind.VAR_DECL: edlc (Line: 982, Col: 14)
|—————CursorKind.TYPE_REF: uint32_t (Line: 982, Col: 5)
|———CursorKind.IF_STMT:  (Line: 983, Col: 5)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 983, Col: 9)
|————CursorKind.COMPOUND_STMT:  (Line: 983, Col: 38)
|—————CursorKind.DECL_STMT:  (Line: 985, Col: 9)
|——————CursorKind.VAR_DECL: id (Line: 985, Col: 18)
|———————CursorKind.TYPE_REF: uint32_t (Line: 985, Col: 9)
|———————CursorKind.MEMBER_REF_EXPR:  (Line: 985, Col: 23)
|————————CursorKind.UNEXPOSED_EXPR:  (Line: 985, Col: 23)
|—————————CursorKind.DECL_REF_EXPR: qt (Line: 985, Col: 23)
|—————CursorKind.DECL_STMT:  (Line: 986, Col: 9)
|——————CursorKind.VAR_DECL: h1 (Line: 986, Col: 18)
|———————CursorKind.TYPE_REF: uint32_t (Line: 986, Col: 9)
|———————CursorKind.BINARY_OPERATOR:  (Line: 986, Col: 23)
|————————CursorKind.BINARY_OPERATOR:  (Line: 986, Col: 23)
|—————————CursorKind.PAREN_EXPR:  (Line: 986, Col: 23)
|——————————CursorKind.BINARY_OPERATOR:  (Line: 986, Col: 24)
|———————————CursorKind.PAREN_EXPR:  (Line: 986, Col: 24)
|————————————CursorKind.BINARY_OPERATOR:  (Line: 986, Col: 25)
|—————————————CursorKind.UNEXPOSED_EXPR: id (Line: 986, Col: 25)
|——————————————CursorKind.DECL_REF_EXPR: id (Line: 986, Col: 25)
|—————————————CursorKind.UNEXPOSED_EXPR:  (Line: 986, Col: 30)
|——————————————CursorKind.INTEGER_LITERAL:  (Line: 986, Col: 30)
|———————————CursorKind.INTEGER_LITERAL:  (Line: 986, Col: 45)
|—————————CursorKind.UNEXPOSED_EXPR:  (Line: 986, Col: 51)
|——————————CursorKind.INTEGER_LITERAL:  (Line: 986, Col: 51)
|————————CursorKind.PAREN_EXPR:  (Line: 986, Col: 58)
|—————————CursorKind.BINARY_OPERATOR:  (Line: 986, Col: 59)
|——————————CursorKind.PAREN_EXPR:  (Line: 986, Col: 59)
|———————————CursorKind.BINARY_OPERATOR:  (Line: 986, Col: 60)
|————————————CursorKind.UNEXPOSED_EXPR: id (Line: 986, Col: 60)
|—————————————CursorKind.DECL_REF_EXPR: id (Line: 986, Col: 60)
|————————————CursorKind.UNEXPOSED_EXPR:  (Line: 986, Col: 65)
|—————————————CursorKind.INTEGER_LITERAL:  (Line: 986, Col: 65)
|——————————CursorKind.INTEGER_LITERAL:  (Line: 986, Col: 77)
|—————CursorKind.DECL_STMT:  (Line: 987, Col: 9)
|——————CursorKind.VAR_DECL: h2 (Line: 987, Col: 18)
|———————CursorKind.TYPE_REF: uint32_t (Line: 987, Col: 9)
|———————CursorKind.BINARY_OPERATOR:  (Line: 987, Col: 23)
|————————CursorKind.PAREN_EXPR:  (Line: 987, Col: 23)
|—————————CursorKind.BINARY_OPERATOR:  (Line: 987, Col: 24)
|——————————CursorKind.PAREN_EXPR:  (Line: 987, Col: 24)
|———————————CursorKind.BINARY_OPERATOR:  (Line: 987, Col: 25)
|————————————CursorKind.UNEXPOSED_EXPR: id (Line: 987, Col: 25)
|—————————————CursorKind.DECL_REF_EXPR: id (Line: 987, Col: 25)
|————————————CursorKind.UNEXPOSED_EXPR:  (Line: 987, Col: 30)
|—————————————CursorKind.INTEGER_LITERAL:  (Line: 987, Col: 30)
|——————————CursorKind.INTEGER_LITERAL:  (Line: 987, Col: 41)
|————————CursorKind.UNEXPOSED_EXPR: edlc (Line: 987, Col: 46)
|—————————CursorKind.DECL_REF_EXPR: edlc (Line: 987, Col: 46)
|—————CursorKind.BINARY_OPERATOR:  (Line: 988, Col: 9)
|——————CursorKind.DECL_REF_EXPR: crc (Line: 988, Col: 9)
|——————CursorKind.CALL_EXPR: crcbits (Line: 988, Col: 15)
|———————CursorKind.UNEXPOSED_EXPR: crcbits (Line: 988, Col: 15)
|————————CursorKind.DECL_REF_EXPR: crcbits (Line: 988, Col: 15)
|———————CursorKind.UNEXPOSED_EXPR: crc (Line: 988, Col: 23)
|————————CursorKind.DECL_REF_EXPR: crc (Line: 988, Col: 23)
|———————CursorKind.UNEXPOSED_EXPR: h1 (Line: 988, Col: 28)
|————————CursorKind.DECL_REF_EXPR: h1 (Line: 988, Col: 28)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 988, Col: 32)
|————————CursorKind.INTEGER_LITERAL:  (Line: 988, Col: 32)
|—————CursorKind.CALL_EXPR: bs_push (Line: 989, Col: 9)
|——————CursorKind.UNEXPOSED_EXPR: bs_push (Line: 989, Col: 9)
|———————CursorKind.DECL_REF_EXPR: bs_push (Line: 989, Col: 9)
|——————CursorKind.UNARY_OPERATOR:  (Line: 989, Col: 17)
|———————CursorKind.DECL_REF_EXPR: bs (Line: 989, Col: 18)
|——————CursorKind.UNEXPOSED_EXPR: h1 (Line: 989, Col: 22)
|———————CursorKind.DECL_REF_EXPR: h1 (Line: 989, Col: 22)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 989, Col: 26)
|———————CursorKind.INTEGER_LITERAL:  (Line: 989, Col: 26)
|—————CursorKind.BINARY_OPERATOR:  (Line: 990, Col: 9)
|——————CursorKind.DECL_REF_EXPR: crc (Line: 990, Col: 9)
|——————CursorKind.CALL_EXPR: crcbits (Line: 990, Col: 15)
|———————CursorKind.UNEXPOSED_EXPR: crcbits (Line: 990, Col: 15)
|————————CursorKind.DECL_REF_EXPR: crcbits (Line: 990, Col: 15)
|———————CursorKind.UNEXPOSED_EXPR: crc (Line: 990, Col: 23)
|————————CursorKind.DECL_REF_EXPR: crc (Line: 990, Col: 23)
|———————CursorKind.UNEXPOSED_EXPR: h2 (Line: 990, Col: 28)
|————————CursorKind.DECL_REF_EXPR: h2 (Line: 990, Col: 28)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 990, Col: 32)
|————————CursorKind.INTEGER_LITERAL:  (Line: 990, Col: 32)
|—————CursorKind.CALL_EXPR: bs_push (Line: 991, Col: 9)
|——————CursorKind.UNEXPOSED_EXPR: bs_push (Line: 991, Col: 9)
|———————CursorKind.DECL_REF_EXPR: bs_push (Line: 991, Col: 9)
|——————CursorKind.UNARY_OPERATOR:  (Line: 991, Col: 17)
|———————CursorKind.DECL_REF_EXPR: bs (Line: 991, Col: 18)
|——————CursorKind.UNEXPOSED_EXPR: h2 (Line: 991, Col: 22)
|———————CursorKind.DECL_REF_EXPR: h2 (Line: 991, Col: 22)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 991, Col: 26)
|———————CursorKind.INTEGER_LITERAL:  (Line: 991, Col: 26)
|————CursorKind.COMPOUND_STMT:  (Line: 992, Col: 12)
|—————CursorKind.DECL_STMT:  (Line: 994, Col: 9)
|——————CursorKind.VAR_DECL: hdr (Line: 994, Col: 18)
|———————CursorKind.TYPE_REF: uint32_t (Line: 994, Col: 9)
|———————CursorKind.BINARY_OPERATOR:  (Line: 994, Col: 24)
|————————CursorKind.PAREN_EXPR:  (Line: 994, Col: 24)
|—————————CursorKind.BINARY_OPERATOR:  (Line: 994, Col: 25)
|——————————CursorKind.PAREN_EXPR:  (Line: 994, Col: 25)
|———————————CursorKind.BINARY_OPERATOR:  (Line: 994, Col: 26)
|————————————CursorKind.MEMBER_REF_EXPR:  (Line: 994, Col: 26)
|—————————————CursorKind.UNEXPOSED_EXPR:  (Line: 994, Col: 26)
|——————————————CursorKind.DECL_REF_EXPR: qt (Line: 994, Col: 26)
|————————————CursorKind.INTEGER_LITERAL:  (Line: 994, Col: 39)
|——————————CursorKind.INTEGER_LITERAL:  (Line: 994, Col: 49)
|————————CursorKind.DECL_REF_EXPR: edlc (Line: 994, Col: 54)
|—————CursorKind.BINARY_OPERATOR:  (Line: 995, Col: 9)
|——————CursorKind.DECL_REF_EXPR: crc (Line: 995, Col: 9)
|——————CursorKind.CALL_EXPR: crcbits (Line: 995, Col: 15)
|———————CursorKind.UNEXPOSED_EXPR: crcbits (Line: 995, Col: 15)
|————————CursorKind.DECL_REF_EXPR: crcbits (Line: 995, Col: 15)
|———————CursorKind.UNEXPOSED_EXPR: crc (Line: 995, Col: 23)
|————————CursorKind.DECL_REF_EXPR: crc (Line: 995, Col: 23)
|———————CursorKind.UNEXPOSED_EXPR: hdr (Line: 995, Col: 28)
|————————CursorKind.DECL_REF_EXPR: hdr (Line: 995, Col: 28)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 995, Col: 33)
|————————CursorKind.INTEGER_LITERAL:  (Line: 995, Col: 33)
|—————CursorKind.CALL_EXPR: bs_push (Line: 996, Col: 9)
|——————CursorKind.UNEXPOSED_EXPR: bs_push (Line: 996, Col: 9)
|———————CursorKind.DECL_REF_EXPR: bs_push (Line: 996, Col: 9)
|——————CursorKind.UNARY_OPERATOR:  (Line: 996, Col: 17)
|———————CursorKind.DECL_REF_EXPR: bs (Line: 996, Col: 18)
|——————CursorKind.UNEXPOSED_EXPR: hdr (Line: 996, Col: 22)
|———————CursorKind.DECL_REF_EXPR: hdr (Line: 996, Col: 22)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 996, Col: 27)
|———————CursorKind.INTEGER_LITERAL:  (Line: 996, Col: 27)
|———CursorKind.DECL_STMT:  (Line: 998, Col: 5)
|————CursorKind.VAR_DECL: i (Line: 998, Col: 9)
|———CursorKind.FOR_STMT:  (Line: 999, Col: 5)
|————CursorKind.BINARY_OPERATOR:  (Line: 999, Col: 10)
|—————CursorKind.DECL_REF_EXPR: i (Line: 999, Col: 10)
|—————CursorKind.INTEGER_LITERAL:  (Line: 999, Col: 12)
|————CursorKind.BINARY_OPERATOR:  (Line: 999, Col: 15)
|—————CursorKind.UNEXPOSED_EXPR: i (Line: 999, Col: 15)
|——————CursorKind.UNEXPOSED_EXPR: i (Line: 999, Col: 15)
|———————CursorKind.DECL_REF_EXPR: i (Line: 999, Col: 15)
|—————CursorKind.UNEXPOSED_EXPR: data_len (Line: 999, Col: 17)
|——————CursorKind.DECL_REF_EXPR: data_len (Line: 999, Col: 17)
|————CursorKind.UNARY_OPERATOR:  (Line: 999, Col: 27)
|—————CursorKind.DECL_REF_EXPR: i (Line: 999, Col: 27)
|————CursorKind.COMPOUND_STMT:  (Line: 999, Col: 32)
|—————CursorKind.DECL_STMT:  (Line: 1000, Col: 9)
|——————CursorKind.VAR_DECL: v (Line: 1000, Col: 18)
|———————CursorKind.TYPE_REF: uint32_t (Line: 1000, Col: 9)
|———————CursorKind.ARRAY_SUBSCRIPT_EXPR:  (Line: 1000, Col: 22)
|————————CursorKind.UNEXPOSED_EXPR:  (Line: 1000, Col: 22)
|—————————CursorKind.MEMBER_REF_EXPR:  (Line: 1000, Col: 22)
|——————————CursorKind.UNEXPOSED_EXPR:  (Line: 1000, Col: 22)
|———————————CursorKind.DECL_REF_EXPR: qt (Line: 1000, Col: 22)
|————————CursorKind.UNEXPOSED_EXPR: i (Line: 1000, Col: 35)
|—————————CursorKind.DECL_REF_EXPR: i (Line: 1000, Col: 35)
|—————CursorKind.BINARY_OPERATOR:  (Line: 1001, Col: 9)
|——————CursorKind.DECL_REF_EXPR: crc (Line: 1001, Col: 9)
|——————CursorKind.CALL_EXPR: crcbits (Line: 1001, Col: 15)
|———————CursorKind.UNEXPOSED_EXPR: crcbits (Line: 1001, Col: 15)
|————————CursorKind.DECL_REF_EXPR: crcbits (Line: 1001, Col: 15)
|———————CursorKind.UNEXPOSED_EXPR: crc (Line: 1001, Col: 23)
|————————CursorKind.DECL_REF_EXPR: crc (Line: 1001, Col: 23)
|———————CursorKind.UNEXPOSED_EXPR: v (Line: 1001, Col: 28)
|————————CursorKind.DECL_REF_EXPR: v (Line: 1001, Col: 28)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 1001, Col: 31)
|————————CursorKind.INTEGER_LITERAL:  (Line: 1001, Col: 31)
|—————CursorKind.CALL_EXPR: bs_push (Line: 1002, Col: 9)
|——————CursorKind.UNEXPOSED_EXPR: bs_push (Line: 1002, Col: 9)
|———————CursorKind.DECL_REF_EXPR: bs_push (Line: 1002, Col: 9)
|——————CursorKind.UNARY_OPERATOR:  (Line: 1002, Col: 17)
|———————CursorKind.DECL_REF_EXPR: bs (Line: 1002, Col: 18)
|——————CursorKind.UNEXPOSED_EXPR: v (Line: 1002, Col: 22)
|———————CursorKind.DECL_REF_EXPR: v (Line: 1002, Col: 22)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 1002, Col: 25)
|———————CursorKind.INTEGER_LITERAL:  (Line: 1002, Col: 25)
|———CursorKind.BINARY_OPERATOR:  (Line: 1004, Col: 5)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 1004, Col: 5)
|—————CursorKind.DECL_REF_EXPR: qt (Line: 1004, Col: 5)
|————CursorKind.BINARY_OPERATOR:  (Line: 1004, Col: 15)
|—————CursorKind.UNEXPOSED_EXPR: crc (Line: 1004, Col: 15)
|——————CursorKind.DECL_REF_EXPR: crc (Line: 1004, Col: 15)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 1004, Col: 21)
|——————CursorKind.INTEGER_LITERAL:  (Line: 1004, Col: 21)
|———CursorKind.CALL_EXPR: bs_push (Line: 1005, Col: 5)
|————CursorKind.DECL_REF_EXPR: bs_push (Line: 1005, Col: 5)
|————CursorKind.UNARY_OPERATOR:  (Line: 1005, Col: 13)
|—————CursorKind.DECL_REF_EXPR: bs (Line: 1005, Col: 14)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 1005, Col: 18)
|—————CursorKind.DECL_REF_EXPR: qt (Line: 1005, Col: 18)
|————CursorKind.INTEGER_LITERAL:  (Line: 1005, Col: 27)
|———CursorKind.CALL_EXPR: bs_pushraw (Line: 1006, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: bs_pushraw (Line: 1006, Col: 5)
|—————CursorKind.DECL_REF_EXPR: bs_pushraw (Line: 1006, Col: 5)
|————CursorKind.UNARY_OPERATOR:  (Line: 1006, Col: 16)
|—————CursorKind.DECL_REF_EXPR: bs (Line: 1006, Col: 17)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 1006, Col: 21)
|—————CursorKind.INTEGER_LITERAL:  (Line: 1006, Col: 21)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 1006, Col: 24)
|—————CursorKind.INTEGER_LITERAL:  (Line: 1006, Col: 24)
|———CursorKind.BINARY_OPERATOR:  (Line: 1007, Col: 5)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 1007, Col: 5)
|—————CursorKind.DECL_REF_EXPR: qt (Line: 1007, Col: 5)
|————CursorKind.CALL_EXPR: bs_finalize (Line: 1007, Col: 25)
|—————CursorKind.UNEXPOSED_EXPR: bs_finalize (Line: 1007, Col: 25)
|——————CursorKind.DECL_REF_EXPR: bs_finalize (Line: 1007, Col: 25)
|—————CursorKind.UNARY_OPERATOR:  (Line: 1007, Col: 37)
|——————CursorKind.DECL_REF_EXPR: bs (Line: 1007, Col: 38)
|———CursorKind.CALL_EXPR: writel (Line: 1010, Col: 5)
|————CursorKind.DECL_REF_EXPR: writel (Line: 1010, Col: 5)
|————CursorKind.UNARY_OPERATOR:  (Line: 1010, Col: 12)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 1010, Col: 13)
|——————CursorKind.DECL_REF_EXPR: cd (Line: 1010, Col: 13)
|————CursorKind.BINARY_OPERATOR:  (Line: 1010, Col: 30)
|—————CursorKind.UNEXPOSED_EXPR: tx_push_pos (Line: 1010, Col: 30)
|——————CursorKind.DECL_REF_EXPR: tx_push_pos (Line: 1010, Col: 30)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 1010, Col: 44)
|——————CursorKind.INTEGER_LITERAL:  (Line: 1010, Col: 44)
|———CursorKind.CALL_EXPR: pio_sync_atomic_enable_may_start_tx_irq (Line: 1013, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: pio_sync_atomic_enable_may_start_tx_irq (Line: 1013, Col: 5)
|—————CursorKind.DECL_REF_EXPR: pio_sync_atomic_enable_may_start_tx_irq (Line: 1013, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: cd (Line: 1013, Col: 45)
|—————CursorKind.UNEXPOSED_EXPR: cd (Line: 1013, Col: 45)
|——————CursorKind.DECL_REF_EXPR: cd (Line: 1013, Col: 45)
|———CursorKind.RETURN_STMT:  (Line: 1015, Col: 5)
|————CursorKind.INTEGER_LITERAL:  (Line: 1015, Col: 12)
|—CursorKind.FUNCTION_DECL: can2040_setup(struct can2040 *, uint32_t) (Line: 1025, Col: 1)
|——CursorKind.PARM_DECL: cd (Line: 1025, Col: 31)
|———CursorKind.TYPE_REF: struct can2040 (Line: 1025, Col: 22)
|——CursorKind.PARM_DECL: pio_num (Line: 1025, Col: 44)
|———CursorKind.TYPE_REF: uint32_t (Line: 1025, Col: 35)
|——CursorKind.COMPOUND_STMT:  (Line: 1026, Col: 1)
|———CursorKind.BINARY_OPERATOR:  (Line: 1028, Col: 5)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 1028, Col: 5)
|—————CursorKind.DECL_REF_EXPR: cd (Line: 1028, Col: 5)
|————CursorKind.UNARY_OPERATOR:  (Line: 1028, Col: 19)
|—————CursorKind.UNARY_OPERATOR:  (Line: 1028, Col: 20)
|——————CursorKind.UNEXPOSED_EXPR: pio_num (Line: 1028, Col: 21)
|———————CursorKind.DECL_REF_EXPR: pio_num (Line: 1028, Col: 21)
|—CursorKind.FUNCTION_DECL: can2040_callback_config(struct can2040 *, int) (Line: 1034, Col: 1)
|——CursorKind.PARM_DECL: cd (Line: 1034, Col: 41)
|———CursorKind.TYPE_REF: struct can2040 (Line: 1034, Col: 32)
|——CursorKind.PARM_DECL: rx_cb (Line: 1034, Col: 59)
|——CursorKind.COMPOUND_STMT:  (Line: 1035, Col: 1)
|———CursorKind.BINARY_OPERATOR:  (Line: 1036, Col: 5)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 1036, Col: 5)
|—————CursorKind.DECL_REF_EXPR: cd (Line: 1036, Col: 5)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 1036, Col: 17)
|—CursorKind.FUNCTION_DECL: can2040_start(struct can2040 *, uint32_t, uint32_t, uint32_t, uint32_t) (Line: 1041, Col: 1)
|——CursorKind.PARM_DECL: cd (Line: 1041, Col: 31)
|———CursorKind.TYPE_REF: struct can2040 (Line: 1041, Col: 22)
|——CursorKind.PARM_DECL: sys_clock (Line: 1041, Col: 44)
|———CursorKind.TYPE_REF: uint32_t (Line: 1041, Col: 35)
|——CursorKind.PARM_DECL: bitrate (Line: 1041, Col: 64)
|———CursorKind.TYPE_REF: uint32_t (Line: 1041, Col: 55)
|——CursorKind.PARM_DECL: gpio_rx (Line: 1042, Col: 26)
|———CursorKind.TYPE_REF: uint32_t (Line: 1042, Col: 17)
|——CursorKind.PARM_DECL: gpio_tx (Line: 1042, Col: 44)
|———CursorKind.TYPE_REF: uint32_t (Line: 1042, Col: 35)
|——CursorKind.COMPOUND_STMT:  (Line: 1043, Col: 1)
|———CursorKind.BINARY_OPERATOR:  (Line: 1044, Col: 5)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 1044, Col: 5)
|—————CursorKind.DECL_REF_EXPR: cd (Line: 1044, Col: 5)
|————CursorKind.DECL_REF_EXPR: gpio_rx (Line: 1044, Col: 19)
|———CursorKind.BINARY_OPERATOR:  (Line: 1045, Col: 5)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 1045, Col: 5)
|—————CursorKind.DECL_REF_EXPR: cd (Line: 1045, Col: 5)
|————CursorKind.DECL_REF_EXPR: gpio_tx (Line: 1045, Col: 19)
|———CursorKind.CALL_EXPR: pio_setup (Line: 1046, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: pio_setup (Line: 1046, Col: 5)
|—————CursorKind.DECL_REF_EXPR: pio_setup (Line: 1046, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: cd (Line: 1046, Col: 15)
|—————CursorKind.UNEXPOSED_EXPR: cd (Line: 1046, Col: 15)
|——————CursorKind.DECL_REF_EXPR: cd (Line: 1046, Col: 15)
|————CursorKind.UNEXPOSED_EXPR: sys_clock (Line: 1046, Col: 19)
|—————CursorKind.DECL_REF_EXPR: sys_clock (Line: 1046, Col: 19)
|————CursorKind.UNEXPOSED_EXPR: bitrate (Line: 1046, Col: 30)
|—————CursorKind.DECL_REF_EXPR: bitrate (Line: 1046, Col: 30)
|———CursorKind.CALL_EXPR: data_state_go_discard (Line: 1047, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: data_state_go_discard (Line: 1047, Col: 5)
|—————CursorKind.DECL_REF_EXPR: data_state_go_discard (Line: 1047, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: cd (Line: 1047, Col: 27)
|—————CursorKind.UNEXPOSED_EXPR: cd (Line: 1047, Col: 27)
|——————CursorKind.DECL_REF_EXPR: cd (Line: 1047, Col: 27)
|—CursorKind.FUNCTION_DECL: can2040_shutdown(struct can2040 *) (Line: 1052, Col: 1)
|——CursorKind.PARM_DECL: cd (Line: 1052, Col: 34)
|———CursorKind.TYPE_REF: struct can2040 (Line: 1052, Col: 25)
|——CursorKind.COMPOUND_STMT:  (Line: 1053, Col: 1)
