CANmon-src\canmon.c

|CursorKind.TRANSLATION_UNIT: src\canmon.c (Line: 0, Col: 0)
|—CursorKind.FUNCTION_DECL: main() (Line: 5, Col: 1)
|——CursorKind.COMPOUND_STMT:  (Line: 6, Col: 1)
|———CursorKind.DECL_STMT:  (Line: 9, Col: 2)
|————CursorKind.ENUM_DECL: enum (unnamed at src/canmon.c:9:2) (Line: 9, Col: 2)
|—————CursorKind.ENUM_CONSTANT_DECL: MSG_STATE_START (Line: 10, Col: 3)
|——————CursorKind.INTEGER_LITERAL:  (Line: 10, Col: 21)
|—————CursorKind.ENUM_CONSTANT_DECL: MSG_STATE_SEQ (Line: 11, Col: 3)
|—————CursorKind.ENUM_CONSTANT_DECL: MSG_STATE_LENGTH (Line: 12, Col: 3)
|—————CursorKind.ENUM_CONSTANT_DECL: MSG_STATE_BODY (Line: 13, Col: 3)
|—————CursorKind.ENUM_CONSTANT_DECL: MSG_STATE_CHECKSUM (Line: 14, Col: 3)
|—————CursorKind.ENUM_CONSTANT_DECL: MSG_STATE_ERROR (Line: 15, Col: 3)
|—————CursorKind.ENUM_CONSTANT_DECL: MSG_STATE_COMPLETE (Line: 16, Col: 3)
|————CursorKind.VAR_DECL: msg_state (Line: 17, Col: 4)
|—————CursorKind.ENUM_DECL: enum (unnamed at src/canmon.c:9:2) (Line: 9, Col: 2)
|——————CursorKind.ENUM_CONSTANT_DECL: MSG_STATE_START (Line: 10, Col: 3)
|———————CursorKind.INTEGER_LITERAL:  (Line: 10, Col: 21)
|——————CursorKind.ENUM_CONSTANT_DECL: MSG_STATE_SEQ (Line: 11, Col: 3)
|——————CursorKind.ENUM_CONSTANT_DECL: MSG_STATE_LENGTH (Line: 12, Col: 3)
|——————CursorKind.ENUM_CONSTANT_DECL: MSG_STATE_BODY (Line: 13, Col: 3)
|——————CursorKind.ENUM_CONSTANT_DECL: MSG_STATE_CHECKSUM (Line: 14, Col: 3)
|——————CursorKind.ENUM_CONSTANT_DECL: MSG_STATE_ERROR (Line: 15, Col: 3)
|——————CursorKind.ENUM_CONSTANT_DECL: MSG_STATE_COMPLETE (Line: 16, Col: 3)
|———CursorKind.DECL_STMT:  (Line: 19, Col: 2)
|————CursorKind.VAR_DECL: message (Line: 19, Col: 7)
|———CursorKind.DECL_STMT:  (Line: 20, Col: 2)
|————CursorKind.VAR_DECL: response (Line: 20, Col: 7)
|———CursorKind.CALL_EXPR: cm_uart_init (Line: 22, Col: 2)
|————CursorKind.UNEXPOSED_EXPR: cm_uart_init (Line: 22, Col: 2)
|—————CursorKind.DECL_REF_EXPR: cm_uart_init (Line: 22, Col: 2)
|———CursorKind.CALL_EXPR: sei (Line: 24, Col: 2)
|————CursorKind.UNEXPOSED_EXPR: sei (Line: 24, Col: 2)
|—————CursorKind.DECL_REF_EXPR: sei (Line: 24, Col: 2)
|———CursorKind.FOR_STMT:  (Line: 26, Col: 2)
|————CursorKind.COMPOUND_STMT:  (Line: 26, Col: 11)
|—————CursorKind.BINARY_OPERATOR:  (Line: 33, Col: 3)
|——————CursorKind.DECL_REF_EXPR: msg_state (Line: 33, Col: 3)
|——————CursorKind.UNEXPOSED_EXPR: MSG_STATE_START (Line: 33, Col: 15)
|———————CursorKind.DECL_REF_EXPR: MSG_STATE_START (Line: 33, Col: 15)
|—————CursorKind.WHILE_STMT:  (Line: 36, Col: 3)
|——————CursorKind.BINARY_OPERATOR:  (Line: 36, Col: 10)
|———————CursorKind.UNEXPOSED_EXPR: msg_state (Line: 36, Col: 10)
|————————CursorKind.UNEXPOSED_EXPR: msg_state (Line: 36, Col: 10)
|—————————CursorKind.DECL_REF_EXPR: msg_state (Line: 36, Col: 10)
|———————CursorKind.DECL_REF_EXPR: MSG_STATE_COMPLETE (Line: 36, Col: 23)
|——————CursorKind.COMPOUND_STMT:  (Line: 36, Col: 43)
|———————CursorKind.IF_STMT:  (Line: 40, Col: 4)
|————————CursorKind.UNEXPOSED_EXPR:  (Line: 40, Col: 8)
|————————CursorKind.CONTINUE_STMT:  (Line: 40, Col: 44)
|———————CursorKind.SWITCH_STMT:  (Line: 42, Col: 4)
|————————CursorKind.UNEXPOSED_EXPR: msg_state (Line: 42, Col: 12)
|—————————CursorKind.UNEXPOSED_EXPR: msg_state (Line: 42, Col: 12)
|——————————CursorKind.DECL_REF_EXPR: msg_state (Line: 42, Col: 12)
|————————CursorKind.COMPOUND_STMT:  (Line: 42, Col: 23)
|—————————CursorKind.CASE_STMT:  (Line: 45, Col: 5)
|——————————CursorKind.DECL_REF_EXPR: MSG_STATE_START (Line: 45, Col: 10)
|——————————CursorKind.IF_STMT:  (Line: 46, Col: 6)
|———————————CursorKind.UNEXPOSED_EXPR:  (Line: 46, Col: 10)
|———————————CursorKind.COMPOUND_STMT:  (Line: 46, Col: 32)
|————————————CursorKind.BINARY_OPERATOR:  (Line: 47, Col: 7)
|—————————————CursorKind.DECL_REF_EXPR: msg_state (Line: 47, Col: 7)
|—————————————CursorKind.UNEXPOSED_EXPR: MSG_STATE_SEQ (Line: 47, Col: 19)
|——————————————CursorKind.DECL_REF_EXPR: MSG_STATE_SEQ (Line: 47, Col: 19)
|—————————CursorKind.BREAK_STMT:  (Line: 50, Col: 6)
|—————————CursorKind.CASE_STMT:  (Line: 53, Col: 5)
|——————————CursorKind.DECL_REF_EXPR: MSG_STATE_SEQ (Line: 53, Col: 10)
|——————————CursorKind.NULL_STMT:  (Line: 0, Col: 0)
|—————————CursorKind.BINARY_OPERATOR:  (Line: 55, Col: 6)
|——————————CursorKind.DECL_REF_EXPR: msg_state (Line: 55, Col: 6)
|——————————CursorKind.UNEXPOSED_EXPR: MSG_STATE_LENGTH (Line: 55, Col: 18)
|———————————CursorKind.DECL_REF_EXPR: MSG_STATE_LENGTH (Line: 55, Col: 18)
|—————————CursorKind.BREAK_STMT:  (Line: 57, Col: 6)
|—————————CursorKind.CASE_STMT:  (Line: 60, Col: 5)
|——————————CursorKind.DECL_REF_EXPR: MSG_STATE_LENGTH (Line: 60, Col: 10)
|——————————CursorKind.NULL_STMT:  (Line: 0, Col: 0)
|—————————CursorKind.IF_STMT:  (Line: 63, Col: 6)
|——————————CursorKind.UNEXPOSED_EXPR:  (Line: 63, Col: 10)
|——————————CursorKind.COMPOUND_STMT:  (Line: 63, Col: 38)
|———————————CursorKind.BINARY_OPERATOR:  (Line: 64, Col: 7)
|————————————CursorKind.DECL_REF_EXPR: msg_state (Line: 64, Col: 7)
|————————————CursorKind.UNEXPOSED_EXPR: MSG_STATE_ERROR (Line: 64, Col: 19)
|—————————————CursorKind.DECL_REF_EXPR: MSG_STATE_ERROR (Line: 64, Col: 19)
|——————————CursorKind.COMPOUND_STMT:  (Line: 65, Col: 13)
|———————————CursorKind.BINARY_OPERATOR:  (Line: 66, Col: 7)
|————————————CursorKind.DECL_REF_EXPR: msg_state (Line: 66, Col: 7)
|————————————CursorKind.UNEXPOSED_EXPR: MSG_STATE_BODY (Line: 66, Col: 19)
|—————————————CursorKind.DECL_REF_EXPR: MSG_STATE_BODY (Line: 66, Col: 19)
|———————————CursorKind.UNEXPOSED_EXPR:  (Line: 67, Col: 7)
|————————————CursorKind.UNEXPOSED_EXPR:  (Line: 67, Col: 7)
|—————————————CursorKind.DECL_REF_EXPR: index (Line: 67, Col: 7)
|—————————————CursorKind.INTEGER_LITERAL:  (Line: 67, Col: 15)
|—————————CursorKind.BREAK_STMT:  (Line: 71, Col: 6)
|—————————CursorKind.CASE_STMT:  (Line: 74, Col: 5)
|——————————CursorKind.DECL_REF_EXPR: MSG_STATE_BODY (Line: 74, Col: 10)
|——————————CursorKind.NULL_STMT:  (Line: 0, Col: 0)
|—————————CursorKind.IF_STMT:  (Line: 79, Col: 6)
|——————————CursorKind.UNEXPOSED_EXPR:  (Line: 79, Col: 10)
|——————————CursorKind.BINARY_OPERATOR:  (Line: 79, Col: 32)
|———————————CursorKind.DECL_REF_EXPR: msg_state (Line: 79, Col: 32)
|———————————CursorKind.UNEXPOSED_EXPR: MSG_STATE_START (Line: 79, Col: 44)
|————————————CursorKind.DECL_REF_EXPR: MSG_STATE_START (Line: 79, Col: 44)
|—————————CursorKind.IF_STMT:  (Line: 81, Col: 6)
|——————————CursorKind.UNEXPOSED_EXPR:  (Line: 81, Col: 10)
|——————————CursorKind.BINARY_OPERATOR:  (Line: 81, Col: 27)
|———————————CursorKind.DECL_REF_EXPR: msg_state (Line: 81, Col: 27)
|———————————CursorKind.UNEXPOSED_EXPR: MSG_STATE_CHECKSUM (Line: 81, Col: 39)
|————————————CursorKind.DECL_REF_EXPR: MSG_STATE_CHECKSUM (Line: 81, Col: 39)
|—————————CursorKind.BREAK_STMT:  (Line: 82, Col: 6)
|—————————CursorKind.CASE_STMT:  (Line: 85, Col: 5)
|——————————CursorKind.DECL_REF_EXPR: MSG_STATE_CHECKSUM (Line: 85, Col: 10)
|——————————CursorKind.BINARY_OPERATOR:  (Line: 89, Col: 6)
|———————————CursorKind.DECL_REF_EXPR: msg_state (Line: 89, Col: 6)
|———————————CursorKind.UNEXPOSED_EXPR: MSG_STATE_COMPLETE (Line: 89, Col: 18)
|————————————CursorKind.DECL_REF_EXPR: MSG_STATE_COMPLETE (Line: 89, Col: 18)
|—————————CursorKind.BREAK_STMT:  (Line: 90, Col: 6)
|—————————CursorKind.CASE_STMT:  (Line: 93, Col: 5)
|——————————CursorKind.DECL_REF_EXPR: MSG_STATE_ERROR (Line: 93, Col: 10)
|——————————CursorKind.BINARY_OPERATOR:  (Line: 97, Col: 6)
|———————————CursorKind.DECL_REF_EXPR: msg_state (Line: 97, Col: 6)
|———————————CursorKind.UNEXPOSED_EXPR: MSG_STATE_COMPLETE (Line: 97, Col: 18)
|————————————CursorKind.DECL_REF_EXPR: MSG_STATE_COMPLETE (Line: 97, Col: 18)
|—————————CursorKind.BREAK_STMT:  (Line: 98, Col: 6)
|—————————CursorKind.CASE_STMT:  (Line: 101, Col: 5)
|——————————CursorKind.DECL_REF_EXPR: MSG_STATE_COMPLETE (Line: 101, Col: 10)
|——————————CursorKind.BREAK_STMT:  (Line: 102, Col: 6)
|—————CursorKind.SWITCH_STMT:  (Line: 111, Col: 3)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 111, Col: 11)
|———————CursorKind.ARRAY_SUBSCRIPT_EXPR:  (Line: 111, Col: 11)
|————————CursorKind.UNEXPOSED_EXPR:  (Line: 111, Col: 11)
|—————————CursorKind.UNEXPOSED_EXPR:  (Line: 111, Col: 11)
|————————CursorKind.INTEGER_LITERAL:  (Line: 111, Col: 19)
|——————CursorKind.COMPOUND_STMT:  (Line: 111, Col: 23)
|———————CursorKind.CALL_EXPR: strcpy (Line: 114, Col: 5)
|————————CursorKind.DECL_REF_EXPR: strcpy (Line: 114, Col: 5)
|————————CursorKind.UNEXPOSED_EXPR:  (Line: 114, Col: 12)
|————————CursorKind.STRING_LITERAL: "CANmon" (Line: 114, Col: 22)
|———————CursorKind.BREAK_STMT:  (Line: 115, Col: 5)
|———CursorKind.RETURN_STMT:  (Line: 145, Col: 2)
|————CursorKind.INTEGER_LITERAL:  (Line: 145, Col: 9)
