CBBL-src\commands.c

|CursorKind.TRANSLATION_UNIT: src\commands.c (Line: 0, Col: 0)
|—CursorKind.FUNCTION_DECL: receivecommand() (Line: 23, Col: 9)
|——CursorKind.COMPOUND_STMT:  (Line: 23, Col: 30)
|———CursorKind.SWITCH_STMT:  (Line: 27, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 27, Col: 9)
|————CursorKind.COMPOUND_STMT:  (Line: 27, Col: 12)
|—————CursorKind.CALL_EXPR: cal_SENDLOG (Line: 29, Col: 4)
|——————CursorKind.UNEXPOSED_EXPR: cal_SENDLOG (Line: 29, Col: 4)
|———————CursorKind.DECL_REF_EXPR: cal_SENDLOG (Line: 29, Col: 4)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 29, Col: 16)
|———————CursorKind.STRING_LITERAL: "-> first byte: get command \r\n" (Line: 29, Col: 16)
|—————CursorKind.IF_STMT:  (Line: 32, Col: 4)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 32, Col: 8)
|——————CursorKind.COMPOUND_STMT:  (Line: 32, Col: 14)
|———————CursorKind.RETURN_STMT:  (Line: 33, Col: 5)
|————————CursorKind.CALL_EXPR: command_get (Line: 33, Col: 12)
|—————————CursorKind.UNEXPOSED_EXPR: command_get (Line: 33, Col: 12)
|——————————CursorKind.DECL_REF_EXPR: command_get (Line: 33, Col: 12)
|——————CursorKind.CALL_EXPR: cal_SENDNACK (Line: 35, Col: 9)
|———————CursorKind.UNEXPOSED_EXPR: cal_SENDNACK (Line: 35, Col: 9)
|————————CursorKind.DECL_REF_EXPR: cal_SENDNACK (Line: 35, Col: 9)
|—————CursorKind.IF_STMT:  (Line: 38, Col: 4)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 38, Col: 8)
|——————CursorKind.COMPOUND_STMT:  (Line: 38, Col: 45)
|———————CursorKind.RETURN_STMT:  (Line: 39, Col: 5)
|————————CursorKind.CALL_EXPR: command_erase_memory (Line: 39, Col: 12)
|—————————CursorKind.UNEXPOSED_EXPR: command_erase_memory (Line: 39, Col: 12)
|——————————CursorKind.DECL_REF_EXPR: command_erase_memory (Line: 39, Col: 12)
|——————CursorKind.CALL_EXPR: cal_SENDNACK (Line: 41, Col: 9)
|———————CursorKind.UNEXPOSED_EXPR: cal_SENDNACK (Line: 41, Col: 9)
|————————CursorKind.DECL_REF_EXPR: cal_SENDNACK (Line: 41, Col: 9)
|—————CursorKind.IF_STMT:  (Line: 44, Col: 4)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 44, Col: 8)
|——————CursorKind.COMPOUND_STMT:  (Line: 44, Col: 40)
|———————CursorKind.RETURN_STMT:  (Line: 45, Col: 5)
|————————CursorKind.CALL_EXPR: command_get_id (Line: 45, Col: 12)
|—————————CursorKind.UNEXPOSED_EXPR: command_get_id (Line: 45, Col: 12)
|——————————CursorKind.DECL_REF_EXPR: command_get_id (Line: 45, Col: 12)
|——————CursorKind.CALL_EXPR: cal_SENDNACK (Line: 47, Col: 9)
|———————CursorKind.UNEXPOSED_EXPR: cal_SENDNACK (Line: 47, Col: 9)
|————————CursorKind.DECL_REF_EXPR: cal_SENDNACK (Line: 47, Col: 9)
|—————CursorKind.IF_STMT:  (Line: 50, Col: 4)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 50, Col: 8)
|——————CursorKind.COMPOUND_STMT:  (Line: 50, Col: 45)
|———————CursorKind.RETURN_STMT:  (Line: 51, Col: 5)
|————————CursorKind.CALL_EXPR: command_write_memory (Line: 51, Col: 12)
|—————————CursorKind.UNEXPOSED_EXPR: command_write_memory (Line: 51, Col: 12)
|——————————CursorKind.DECL_REF_EXPR: command_write_memory (Line: 51, Col: 12)
|——————CursorKind.CALL_EXPR: cal_SENDNACK (Line: 53, Col: 9)
|———————CursorKind.UNEXPOSED_EXPR: cal_SENDNACK (Line: 53, Col: 9)
|————————CursorKind.DECL_REF_EXPR: cal_SENDNACK (Line: 53, Col: 9)
|—————CursorKind.IF_STMT:  (Line: 56, Col: 4)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 56, Col: 8)
|——————CursorKind.COMPOUND_STMT:  (Line: 56, Col: 49)
|———————CursorKind.RETURN_STMT:  (Line: 57, Col: 5)
|————————CursorKind.CALL_EXPR: command_write_unprotect (Line: 57, Col: 12)
|—————————CursorKind.UNEXPOSED_EXPR: command_write_unprotect (Line: 57, Col: 12)
|——————————CursorKind.DECL_REF_EXPR: command_write_unprotect (Line: 57, Col: 12)
|——————CursorKind.CALL_EXPR: cal_SENDNACK (Line: 59, Col: 9)
|———————CursorKind.UNEXPOSED_EXPR: cal_SENDNACK (Line: 59, Col: 9)
|————————CursorKind.DECL_REF_EXPR: cal_SENDNACK (Line: 59, Col: 9)
|—————CursorKind.IF_STMT:  (Line: 62, Col: 4)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 62, Col: 8)
|——————CursorKind.COMPOUND_STMT:  (Line: 62, Col: 44)
|———————CursorKind.RETURN_STMT:  (Line: 63, Col: 5)
|————————CursorKind.CALL_EXPR: command_read_memory (Line: 63, Col: 12)
|—————————CursorKind.UNEXPOSED_EXPR: command_read_memory (Line: 63, Col: 12)
|——————————CursorKind.DECL_REF_EXPR: command_read_memory (Line: 63, Col: 12)
|——————CursorKind.CALL_EXPR: cal_SENDNACK (Line: 65, Col: 9)
|———————CursorKind.UNEXPOSED_EXPR: cal_SENDNACK (Line: 65, Col: 9)
|————————CursorKind.DECL_REF_EXPR: cal_SENDNACK (Line: 65, Col: 9)
|—————CursorKind.IF_STMT:  (Line: 68, Col: 4)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 68, Col: 8)
|——————CursorKind.COMPOUND_STMT:  (Line: 68, Col: 59)
|———————CursorKind.RETURN_STMT:  (Line: 69, Col: 5)
|————————CursorKind.CALL_EXPR: command_get_versionread (Line: 69, Col: 12)
|—————————CursorKind.UNEXPOSED_EXPR: command_get_versionread (Line: 69, Col: 12)
|——————————CursorKind.DECL_REF_EXPR: command_get_versionread (Line: 69, Col: 12)
|——————CursorKind.CALL_EXPR: cal_SENDNACK (Line: 71, Col: 9)
|———————CursorKind.UNEXPOSED_EXPR: cal_SENDNACK (Line: 71, Col: 9)
|————————CursorKind.DECL_REF_EXPR: cal_SENDNACK (Line: 71, Col: 9)
|—————CursorKind.IF_STMT:  (Line: 74, Col: 4)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 74, Col: 8)
|——————CursorKind.COMPOUND_STMT:  (Line: 74, Col: 36)
|———————CursorKind.RETURN_STMT:  (Line: 75, Col: 5)
|————————CursorKind.CALL_EXPR: command_go (Line: 75, Col: 12)
|—————————CursorKind.UNEXPOSED_EXPR: command_go (Line: 75, Col: 12)
|——————————CursorKind.DECL_REF_EXPR: command_go (Line: 75, Col: 12)
|——————CursorKind.CALL_EXPR: cal_SENDNACK (Line: 77, Col: 9)
|———————CursorKind.UNEXPOSED_EXPR: cal_SENDNACK (Line: 77, Col: 9)
|————————CursorKind.DECL_REF_EXPR: cal_SENDNACK (Line: 77, Col: 9)
|—————CursorKind.IF_STMT:  (Line: 80, Col: 4)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 80, Col: 8)
|——————CursorKind.COMPOUND_STMT:  (Line: 80, Col: 54)
|———————CursorKind.RETURN_STMT:  (Line: 81, Col: 5)
|————————CursorKind.CALL_EXPR: command_exterase_memory (Line: 81, Col: 12)
|—————————CursorKind.UNEXPOSED_EXPR: command_exterase_memory (Line: 81, Col: 12)
|——————————CursorKind.DECL_REF_EXPR: command_exterase_memory (Line: 81, Col: 12)
|——————CursorKind.CALL_EXPR: cal_SENDNACK (Line: 83, Col: 9)
|———————CursorKind.UNEXPOSED_EXPR: cal_SENDNACK (Line: 83, Col: 9)
|————————CursorKind.DECL_REF_EXPR: cal_SENDNACK (Line: 83, Col: 9)
|—————CursorKind.IF_STMT:  (Line: 86, Col: 4)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 86, Col: 8)
|——————CursorKind.COMPOUND_STMT:  (Line: 86, Col: 47)
|———————CursorKind.RETURN_STMT:  (Line: 87, Col: 5)
|————————CursorKind.CALL_EXPR: command_write_protect (Line: 87, Col: 12)
|—————————CursorKind.UNEXPOSED_EXPR: command_write_protect (Line: 87, Col: 12)
|——————————CursorKind.DECL_REF_EXPR: command_write_protect (Line: 87, Col: 12)
|——————CursorKind.CALL_EXPR: cal_SENDNACK (Line: 89, Col: 9)
|———————CursorKind.UNEXPOSED_EXPR: cal_SENDNACK (Line: 89, Col: 9)
|————————CursorKind.DECL_REF_EXPR: cal_SENDNACK (Line: 89, Col: 9)
|—————CursorKind.IF_STMT:  (Line: 92, Col: 4)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 92, Col: 8)
|——————CursorKind.COMPOUND_STMT:  (Line: 92, Col: 47)
|———————CursorKind.RETURN_STMT:  (Line: 93, Col: 5)
|————————CursorKind.CALL_EXPR: command_readout_protect (Line: 93, Col: 12)
|—————————CursorKind.UNEXPOSED_EXPR: command_readout_protect (Line: 93, Col: 12)
|——————————CursorKind.DECL_REF_EXPR: command_readout_protect (Line: 93, Col: 12)
|——————CursorKind.CALL_EXPR: cal_SENDNACK (Line: 95, Col: 9)
|———————CursorKind.UNEXPOSED_EXPR: cal_SENDNACK (Line: 95, Col: 9)
|————————CursorKind.DECL_REF_EXPR: cal_SENDNACK (Line: 95, Col: 9)
|—————CursorKind.IF_STMT:  (Line: 98, Col: 4)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 98, Col: 8)
|——————CursorKind.COMPOUND_STMT:  (Line: 98, Col: 49)
|———————CursorKind.RETURN_STMT:  (Line: 99, Col: 5)
|————————CursorKind.CALL_EXPR: command_readout_unprotect (Line: 99, Col: 12)
|—————————CursorKind.UNEXPOSED_EXPR: command_readout_unprotect (Line: 99, Col: 12)
|——————————CursorKind.DECL_REF_EXPR: command_readout_unprotect (Line: 99, Col: 12)
|——————CursorKind.CALL_EXPR: cal_SENDNACK (Line: 101, Col: 9)
|———————CursorKind.UNEXPOSED_EXPR: cal_SENDNACK (Line: 101, Col: 9)
|————————CursorKind.DECL_REF_EXPR: cal_SENDNACK (Line: 101, Col: 9)
|—————CursorKind.DEFAULT_STMT:  (Line: 102, Col: 3)
|——————CursorKind.CALL_EXPR: cal_SENDLOG (Line: 103, Col: 4)
|———————CursorKind.UNEXPOSED_EXPR: cal_SENDLOG (Line: 103, Col: 4)
|————————CursorKind.DECL_REF_EXPR: cal_SENDLOG (Line: 103, Col: 4)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 103, Col: 16)
|————————CursorKind.STRING_LITERAL: "-> received command failed \r\n" (Line: 103, Col: 16)
|—————CursorKind.CALL_EXPR: cal_SENDNACK (Line: 104, Col: 4)
|——————CursorKind.UNEXPOSED_EXPR: cal_SENDNACK (Line: 104, Col: 4)
|———————CursorKind.DECL_REF_EXPR: cal_SENDNACK (Line: 104, Col: 4)
|—————CursorKind.BREAK_STMT:  (Line: 105, Col: 4)
|———CursorKind.RETURN_STMT:  (Line: 107, Col: 2)
|————CursorKind.INTEGER_LITERAL:  (Line: 107, Col: 9)
|—CursorKind.FUNCTION_DECL: command_receiveinit() (Line: 116, Col: 9)
|——CursorKind.COMPOUND_STMT:  (Line: 116, Col: 31)
|———CursorKind.CALL_EXPR: cal_SENDLOG (Line: 117, Col: 2)
|————CursorKind.UNEXPOSED_EXPR: cal_SENDLOG (Line: 117, Col: 2)
|—————CursorKind.DECL_REF_EXPR: cal_SENDLOG (Line: 117, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 117, Col: 14)
|—————CursorKind.STRING_LITERAL: "-> waiting for init byte \r\n" (Line: 117, Col: 14)
|———CursorKind.IF_STMT:  (Line: 124, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 124, Col: 5)
|————CursorKind.COMPOUND_STMT:  (Line: 124, Col: 24)
|—————CursorKind.CALL_EXPR: cal_SENDACK (Line: 126, Col: 3)
|——————CursorKind.UNEXPOSED_EXPR: cal_SENDACK (Line: 126, Col: 3)
|———————CursorKind.DECL_REF_EXPR: cal_SENDACK (Line: 126, Col: 3)
|—————CursorKind.CALL_EXPR: cal_SENDLOG (Line: 127, Col: 3)
|——————CursorKind.UNEXPOSED_EXPR: cal_SENDLOG (Line: 127, Col: 3)
|———————CursorKind.DECL_REF_EXPR: cal_SENDLOG (Line: 127, Col: 3)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 127, Col: 15)
|———————CursorKind.STRING_LITERAL: "-> init byte received \r\n" (Line: 127, Col: 15)
|—————CursorKind.CALL_EXPR: cal_baudrate (Line: 128, Col: 3)
|——————CursorKind.UNEXPOSED_EXPR: cal_baudrate (Line: 128, Col: 3)
|———————CursorKind.DECL_REF_EXPR: cal_baudrate (Line: 128, Col: 3)
|—————CursorKind.WHILE_STMT:  (Line: 131, Col: 3)
|——————CursorKind.INTEGER_LITERAL:  (Line: 131, Col: 10)
|——————CursorKind.COMPOUND_STMT:  (Line: 131, Col: 13)
|———————CursorKind.CALL_EXPR:  (Line: 132, Col: 4)
|————————CursorKind.UNEXPOSED_EXPR:  (Line: 132, Col: 4)
|—————————CursorKind.DECL_REF_EXPR: receivecommand (Line: 132, Col: 4)
|————CursorKind.COMPOUND_STMT:  (Line: 135, Col: 7)
|—————CursorKind.CALL_EXPR: cal_SENDLOG (Line: 137, Col: 3)
|——————CursorKind.UNEXPOSED_EXPR: cal_SENDLOG (Line: 137, Col: 3)
|———————CursorKind.DECL_REF_EXPR: cal_SENDLOG (Line: 137, Col: 3)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 137, Col: 15)
|———————CursorKind.STRING_LITERAL: "-> receive init fail \r\n" (Line: 137, Col: 15)
|—————CursorKind.RETURN_STMT:  (Line: 138, Col: 3)
|——————CursorKind.UNARY_OPERATOR:  (Line: 138, Col: 10)
|———————CursorKind.INTEGER_LITERAL:  (Line: 138, Col: 11)
|—CursorKind.FUNCTION_DECL: calculatechecksum(int *, int) (Line: 147, Col: 9)
|——CursorKind.PARM_DECL: data (Line: 147, Col: 36)
|——CursorKind.PARM_DECL: length (Line: 147, Col: 51)
|——CursorKind.COMPOUND_STMT:  (Line: 147, Col: 59)
|—CursorKind.FUNCTION_DECL: checkchecksumword(int, int, int) (Line: 166, Col: 9)
|——CursorKind.PARM_DECL: data (Line: 166, Col: 36)
|——CursorKind.PARM_DECL: length (Line: 166, Col: 50)
|——CursorKind.PARM_DECL: checksum (Line: 166, Col: 66)
|——CursorKind.COMPOUND_STMT:  (Line: 166, Col: 76)
|———CursorKind.IF_STMT:  (Line: 172, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 172, Col: 5)
|————CursorKind.COMPOUND_STMT:  (Line: 172, Col: 58)
|—————CursorKind.RETURN_STMT:  (Line: 173, Col: 3)
|——————CursorKind.INTEGER_LITERAL:  (Line: 173, Col: 10)
|————CursorKind.RETURN_STMT:  (Line: 175, Col: 7)
|—————CursorKind.UNARY_OPERATOR:  (Line: 175, Col: 14)
|——————CursorKind.INTEGER_LITERAL:  (Line: 175, Col: 15)
|—CursorKind.FUNCTION_DECL: checkchecksumbytes(int *, int, int) (Line: 179, Col: 9)
|——CursorKind.PARM_DECL: data (Line: 179, Col: 37)
|——CursorKind.PARM_DECL: length (Line: 179, Col: 52)
|——CursorKind.PARM_DECL: checksum (Line: 179, Col: 68)
|——CursorKind.COMPOUND_STMT:  (Line: 179, Col: 78)
|———CursorKind.IF_STMT:  (Line: 180, Col: 2)
|————CursorKind.BINARY_OPERATOR:  (Line: 180, Col: 5)
|—————CursorKind.CALL_EXPR:  (Line: 180, Col: 5)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 180, Col: 5)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 180, Col: 23)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 180, Col: 28)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 180, Col: 37)
|————CursorKind.COMPOUND_STMT:  (Line: 180, Col: 47)
|—————CursorKind.RETURN_STMT:  (Line: 181, Col: 4)
|——————CursorKind.INTEGER_LITERAL:  (Line: 181, Col: 11)
|————CursorKind.RETURN_STMT:  (Line: 183, Col: 8)
|—————CursorKind.UNARY_OPERATOR:  (Line: 183, Col: 15)
|——————CursorKind.INTEGER_LITERAL:  (Line: 183, Col: 16)
|—CursorKind.FUNCTION_DECL: jumptoapp(int) (Line: 191, Col: 9)
|——CursorKind.PARM_DECL: addr (Line: 191, Col: 28)
|——CursorKind.COMPOUND_STMT:  (Line: 191, Col: 34)
|———CursorKind.CALL_EXPR: JumpToApp (Line: 205, Col: 2)
|————CursorKind.UNEXPOSED_EXPR: JumpToApp (Line: 205, Col: 2)
|—————CursorKind.DECL_REF_EXPR: JumpToApp (Line: 205, Col: 2)
|———CursorKind.RETURN_STMT:  (Line: 207, Col: 2)
|————CursorKind.INTEGER_LITERAL:  (Line: 207, Col: 9)
|—CursorKind.FUNCTION_DECL: command_get() (Line: 219, Col: 9)
|——CursorKind.COMPOUND_STMT:  (Line: 219, Col: 23)
|———CursorKind.CALL_EXPR: cal_SENDLOG (Line: 220, Col: 2)
|————CursorKind.UNEXPOSED_EXPR: cal_SENDLOG (Line: 220, Col: 2)
|—————CursorKind.DECL_REF_EXPR: cal_SENDLOG (Line: 220, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 220, Col: 14)
|—————CursorKind.STRING_LITERAL: "-> cmd: get command \r\n" (Line: 220, Col: 14)
|———CursorKind.CALL_EXPR: cal_SENDACK (Line: 221, Col: 2)
|————CursorKind.UNEXPOSED_EXPR: cal_SENDACK (Line: 221, Col: 2)
|—————CursorKind.DECL_REF_EXPR: cal_SENDACK (Line: 221, Col: 2)
|———CursorKind.CALL_EXPR: cal_SENDBYTE (Line: 223, Col: 2)
|————CursorKind.UNEXPOSED_EXPR: cal_SENDBYTE (Line: 223, Col: 2)
|—————CursorKind.DECL_REF_EXPR: cal_SENDBYTE (Line: 223, Col: 2)
|————CursorKind.INTEGER_LITERAL:  (Line: 223, Col: 15)
|———CursorKind.CALL_EXPR: cal_SENDBYTE (Line: 225, Col: 2)
|————CursorKind.UNEXPOSED_EXPR: cal_SENDBYTE (Line: 225, Col: 2)
|—————CursorKind.DECL_REF_EXPR: cal_SENDBYTE (Line: 225, Col: 2)
|————CursorKind.INTEGER_LITERAL:  (Line: 225, Col: 15)
|———CursorKind.CALL_EXPR: cal_SENDACK (Line: 249, Col: 2)
|————CursorKind.UNEXPOSED_EXPR: cal_SENDACK (Line: 249, Col: 2)
|—————CursorKind.DECL_REF_EXPR: cal_SENDACK (Line: 249, Col: 2)
|———CursorKind.CALL_EXPR: cal_SENDLOG (Line: 250, Col: 2)
|————CursorKind.UNEXPOSED_EXPR: cal_SENDLOG (Line: 250, Col: 2)
|—————CursorKind.DECL_REF_EXPR: cal_SENDLOG (Line: 250, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 250, Col: 14)
|—————CursorKind.STRING_LITERAL: "\r\n-> cmd: get command terminated \r\n" (Line: 250, Col: 14)
|———CursorKind.RETURN_STMT:  (Line: 251, Col: 2)
|————CursorKind.INTEGER_LITERAL:  (Line: 251, Col: 9)
|—CursorKind.FUNCTION_DECL: command_get_versionread() (Line: 260, Col: 9)
|——CursorKind.COMPOUND_STMT:  (Line: 260, Col: 35)
|———CursorKind.CALL_EXPR: cal_SENDLOG (Line: 261, Col: 2)
|————CursorKind.UNEXPOSED_EXPR: cal_SENDLOG (Line: 261, Col: 2)
|—————CursorKind.DECL_REF_EXPR: cal_SENDLOG (Line: 261, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 261, Col: 14)
|—————CursorKind.STRING_LITERAL: "-> cmd: get version \r\n" (Line: 261, Col: 14)
|———CursorKind.CALL_EXPR: cal_SENDACK (Line: 262, Col: 2)
|————CursorKind.UNEXPOSED_EXPR: cal_SENDACK (Line: 262, Col: 2)
|—————CursorKind.DECL_REF_EXPR: cal_SENDACK (Line: 262, Col: 2)
|———CursorKind.CALL_EXPR: cal_SENDBYTE (Line: 264, Col: 2)
|————CursorKind.UNEXPOSED_EXPR: cal_SENDBYTE (Line: 264, Col: 2)
|—————CursorKind.DECL_REF_EXPR: cal_SENDBYTE (Line: 264, Col: 2)
|————CursorKind.INTEGER_LITERAL:  (Line: 264, Col: 15)
|———CursorKind.CALL_EXPR: cal_SENDBYTE (Line: 265, Col: 2)
|————CursorKind.UNEXPOSED_EXPR: cal_SENDBYTE (Line: 265, Col: 2)
|—————CursorKind.DECL_REF_EXPR: cal_SENDBYTE (Line: 265, Col: 2)
|————CursorKind.INTEGER_LITERAL:  (Line: 265, Col: 15)
|———CursorKind.CALL_EXPR: cal_SENDACK (Line: 266, Col: 2)
|————CursorKind.UNEXPOSED_EXPR: cal_SENDACK (Line: 266, Col: 2)
|—————CursorKind.DECL_REF_EXPR: cal_SENDACK (Line: 266, Col: 2)
|———CursorKind.CALL_EXPR: cal_SENDLOG (Line: 267, Col: 2)
|————CursorKind.UNEXPOSED_EXPR: cal_SENDLOG (Line: 267, Col: 2)
|—————CursorKind.DECL_REF_EXPR: cal_SENDLOG (Line: 267, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 267, Col: 14)
|—————CursorKind.STRING_LITERAL: "-> cmd: get version terminated\r\n" (Line: 267, Col: 14)
|———CursorKind.RETURN_STMT:  (Line: 268, Col: 2)
|————CursorKind.INTEGER_LITERAL:  (Line: 268, Col: 9)
|—CursorKind.FUNCTION_DECL: command_get_id() (Line: 277, Col: 9)
|——CursorKind.COMPOUND_STMT:  (Line: 277, Col: 26)
|———CursorKind.CALL_EXPR: cal_SENDLOG (Line: 278, Col: 2)
|————CursorKind.UNEXPOSED_EXPR: cal_SENDLOG (Line: 278, Col: 2)
|—————CursorKind.DECL_REF_EXPR: cal_SENDLOG (Line: 278, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 278, Col: 14)
|—————CursorKind.STRING_LITERAL: "-> cmd: get ID \r\n" (Line: 278, Col: 14)
|———CursorKind.CALL_EXPR: cal_SENDACK (Line: 279, Col: 2)
|————CursorKind.UNEXPOSED_EXPR: cal_SENDACK (Line: 279, Col: 2)
|—————CursorKind.DECL_REF_EXPR: cal_SENDACK (Line: 279, Col: 2)
|———CursorKind.CALL_EXPR: cal_SENDBYTE (Line: 280, Col: 2)
|————CursorKind.UNEXPOSED_EXPR: cal_SENDBYTE (Line: 280, Col: 2)
|—————CursorKind.DECL_REF_EXPR: cal_SENDBYTE (Line: 280, Col: 2)
|————CursorKind.INTEGER_LITERAL:  (Line: 280, Col: 15)
|———CursorKind.CALL_EXPR: cal_SENDBYTE (Line: 281, Col: 2)
|————CursorKind.UNEXPOSED_EXPR: cal_SENDBYTE (Line: 281, Col: 2)
|—————CursorKind.DECL_REF_EXPR: cal_SENDBYTE (Line: 281, Col: 2)
|————CursorKind.INTEGER_LITERAL:  (Line: 281, Col: 15)
|———CursorKind.CALL_EXPR: cal_SENDBYTE (Line: 282, Col: 2)
|————CursorKind.UNEXPOSED_EXPR: cal_SENDBYTE (Line: 282, Col: 2)
|—————CursorKind.DECL_REF_EXPR: cal_SENDBYTE (Line: 282, Col: 2)
|————CursorKind.CALL_EXPR: hil_getidbyte2 (Line: 282, Col: 15)
|—————CursorKind.UNEXPOSED_EXPR: hil_getidbyte2 (Line: 282, Col: 15)
|——————CursorKind.DECL_REF_EXPR: hil_getidbyte2 (Line: 282, Col: 15)
|———CursorKind.CALL_EXPR: cal_SENDACK (Line: 283, Col: 2)
|————CursorKind.UNEXPOSED_EXPR: cal_SENDACK (Line: 283, Col: 2)
|—————CursorKind.DECL_REF_EXPR: cal_SENDACK (Line: 283, Col: 2)
|———CursorKind.CALL_EXPR: cal_SENDLOG (Line: 284, Col: 2)
|————CursorKind.UNEXPOSED_EXPR: cal_SENDLOG (Line: 284, Col: 2)
|—————CursorKind.DECL_REF_EXPR: cal_SENDLOG (Line: 284, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 284, Col: 14)
|—————CursorKind.STRING_LITERAL: "-> cmd: get ID terminated\r\n" (Line: 284, Col: 14)
|———CursorKind.RETURN_STMT:  (Line: 285, Col: 2)
|————CursorKind.INTEGER_LITERAL:  (Line: 285, Col: 9)
|—CursorKind.FUNCTION_DECL: command_read_memory() (Line: 294, Col: 9)
|——CursorKind.COMPOUND_STMT:  (Line: 294, Col: 31)
|———CursorKind.CALL_EXPR: cal_SENDLOG (Line: 295, Col: 2)
|————CursorKind.UNEXPOSED_EXPR: cal_SENDLOG (Line: 295, Col: 2)
|—————CursorKind.DECL_REF_EXPR: cal_SENDLOG (Line: 295, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 295, Col: 14)
|—————CursorKind.STRING_LITERAL: "-> cmd: read memory \r\n" (Line: 295, Col: 14)
|———CursorKind.CALL_EXPR: cal_SENDACK (Line: 301, Col: 2)
|————CursorKind.UNEXPOSED_EXPR: cal_SENDACK (Line: 301, Col: 2)
|—————CursorKind.DECL_REF_EXPR: cal_SENDACK (Line: 301, Col: 2)
|———CursorKind.IF_STMT:  (Line: 304, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 304, Col: 5)
|————CursorKind.RETURN_STMT:  (Line: 304, Col: 61)
|—————CursorKind.UNARY_OPERATOR:  (Line: 304, Col: 68)
|——————CursorKind.INTEGER_LITERAL:  (Line: 304, Col: 69)
|———CursorKind.IF_STMT:  (Line: 305, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 305, Col: 5)
|————CursorKind.RETURN_STMT:  (Line: 305, Col: 64)
|—————CursorKind.UNARY_OPERATOR:  (Line: 305, Col: 71)
|——————CursorKind.INTEGER_LITERAL:  (Line: 305, Col: 72)
|———CursorKind.IF_STMT:  (Line: 306, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 306, Col: 5)
|————CursorKind.COMPOUND_STMT:  (Line: 306, Col: 35)
|—————CursorKind.RETURN_STMT:  (Line: 306, Col: 67)
|——————CursorKind.UNARY_OPERATOR:  (Line: 306, Col: 74)
|———————CursorKind.INTEGER_LITERAL:  (Line: 306, Col: 75)
|———CursorKind.IF_STMT:  (Line: 307, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 307, Col: 5)
|————CursorKind.COMPOUND_STMT:  (Line: 307, Col: 47)
|—————CursorKind.RETURN_STMT:  (Line: 307, Col: 79)
|——————CursorKind.UNARY_OPERATOR:  (Line: 307, Col: 86)
|———————CursorKind.INTEGER_LITERAL:  (Line: 307, Col: 87)
|———CursorKind.CALL_EXPR: cal_SENDACK (Line: 308, Col: 2)
|————CursorKind.UNEXPOSED_EXPR: cal_SENDACK (Line: 308, Col: 2)
|—————CursorKind.DECL_REF_EXPR: cal_SENDACK (Line: 308, Col: 2)
|———CursorKind.IF_STMT:  (Line: 311, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 311, Col: 5)
|————CursorKind.RETURN_STMT:  (Line: 311, Col: 62)
|—————CursorKind.UNARY_OPERATOR:  (Line: 311, Col: 69)
|——————CursorKind.INTEGER_LITERAL:  (Line: 311, Col: 70)
|———CursorKind.IF_STMT:  (Line: 312, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 312, Col: 5)
|————CursorKind.RETURN_STMT:  (Line: 312, Col: 64)
|—————CursorKind.UNARY_OPERATOR:  (Line: 312, Col: 71)
|——————CursorKind.INTEGER_LITERAL:  (Line: 312, Col: 72)
|———CursorKind.IF_STMT:  (Line: 313, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 313, Col: 5)
|————CursorKind.COMPOUND_STMT:  (Line: 313, Col: 51)
|—————CursorKind.RETURN_STMT:  (Line: 313, Col: 83)
|——————CursorKind.UNARY_OPERATOR:  (Line: 313, Col: 90)
|———————CursorKind.INTEGER_LITERAL:  (Line: 313, Col: 91)
|———CursorKind.CALL_EXPR: cal_SENDACK (Line: 314, Col: 2)
|————CursorKind.UNEXPOSED_EXPR: cal_SENDACK (Line: 314, Col: 2)
|—————CursorKind.DECL_REF_EXPR: cal_SENDACK (Line: 314, Col: 2)
|———CursorKind.CALL_EXPR: cal_SENDLOG (Line: 325, Col: 2)
|————CursorKind.UNEXPOSED_EXPR: cal_SENDLOG (Line: 325, Col: 2)
|—————CursorKind.DECL_REF_EXPR: cal_SENDLOG (Line: 325, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 325, Col: 14)
|—————CursorKind.STRING_LITERAL: "-> cmd: read memory terminated \r\n" (Line: 325, Col: 14)
|———CursorKind.RETURN_STMT:  (Line: 326, Col: 2)
|————CursorKind.INTEGER_LITERAL:  (Line: 326, Col: 9)
|—CursorKind.FUNCTION_DECL: command_go() (Line: 336, Col: 9)
|——CursorKind.COMPOUND_STMT:  (Line: 336, Col: 22)
|———CursorKind.CALL_EXPR: cal_SENDACK (Line: 340, Col: 2)
|————CursorKind.UNEXPOSED_EXPR: cal_SENDACK (Line: 340, Col: 2)
|—————CursorKind.DECL_REF_EXPR: cal_SENDACK (Line: 340, Col: 2)
|———CursorKind.IF_STMT:  (Line: 345, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 345, Col: 5)
|————CursorKind.COMPOUND_STMT:  (Line: 345, Col: 47)
|—————CursorKind.CALL_EXPR: cal_SENDNACK (Line: 345, Col: 48)
|——————CursorKind.UNEXPOSED_EXPR: cal_SENDNACK (Line: 345, Col: 48)
|———————CursorKind.DECL_REF_EXPR: cal_SENDNACK (Line: 345, Col: 48)
|———CursorKind.IF_STMT:  (Line: 346, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 346, Col: 5)
|————CursorKind.COMPOUND_STMT:  (Line: 346, Col: 35)
|—————CursorKind.CALL_EXPR: cal_SENDNACK (Line: 346, Col: 36)
|——————CursorKind.UNEXPOSED_EXPR: cal_SENDNACK (Line: 346, Col: 36)
|———————CursorKind.DECL_REF_EXPR: cal_SENDNACK (Line: 346, Col: 36)
|———CursorKind.CALL_EXPR: cal_SENDACK (Line: 347, Col: 2)
|————CursorKind.UNEXPOSED_EXPR: cal_SENDACK (Line: 347, Col: 2)
|—————CursorKind.DECL_REF_EXPR: cal_SENDACK (Line: 347, Col: 2)
|———CursorKind.RETURN_STMT:  (Line: 353, Col: 2)
|————CursorKind.INTEGER_LITERAL:  (Line: 353, Col: 9)
|—CursorKind.FUNCTION_DECL: command_write_memory() (Line: 362, Col: 9)
|——CursorKind.COMPOUND_STMT:  (Line: 362, Col: 32)
|———CursorKind.CALL_EXPR: cal_SENDACK (Line: 370, Col: 2)
|————CursorKind.UNEXPOSED_EXPR: cal_SENDACK (Line: 370, Col: 2)
|—————CursorKind.DECL_REF_EXPR: cal_SENDACK (Line: 370, Col: 2)
|———CursorKind.IF_STMT:  (Line: 375, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 375, Col: 5)
|————CursorKind.COMPOUND_STMT:  (Line: 375, Col: 47)
|—————CursorKind.CALL_EXPR: cal_SENDNACK (Line: 375, Col: 48)
|——————CursorKind.UNEXPOSED_EXPR: cal_SENDNACK (Line: 375, Col: 48)
|———————CursorKind.DECL_REF_EXPR: cal_SENDNACK (Line: 375, Col: 48)
|———CursorKind.CALL_EXPR: cal_SENDACK (Line: 376, Col: 2)
|————CursorKind.UNEXPOSED_EXPR: cal_SENDACK (Line: 376, Col: 2)
|—————CursorKind.DECL_REF_EXPR: cal_SENDACK (Line: 376, Col: 2)
|———CursorKind.IF_STMT:  (Line: 390, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 390, Col: 5)
|————CursorKind.COMPOUND_STMT:  (Line: 390, Col: 59)
|—————CursorKind.CALL_EXPR: cal_SENDNACK (Line: 390, Col: 60)
|——————CursorKind.UNEXPOSED_EXPR: cal_SENDNACK (Line: 390, Col: 60)
|———————CursorKind.DECL_REF_EXPR: cal_SENDNACK (Line: 390, Col: 60)
|————CursorKind.COMPOUND_STMT:  (Line: 391, Col: 7)
|—————CursorKind.SWITCH_STMT:  (Line: 392, Col: 3)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 392, Col: 11)
|——————CursorKind.COMPOUND_STMT:  (Line: 392, Col: 35)
|———————CursorKind.CASE_STMT:  (Line: 393, Col: 4)
|————————CursorKind.INTEGER_LITERAL:  (Line: 393, Col: 9)
|————————CursorKind.NULL_STMT:  (Line: 0, Col: 0)
|———————CursorKind.CALL_EXPR: cal_SENDACK (Line: 400, Col: 5)
|————————CursorKind.UNEXPOSED_EXPR: cal_SENDACK (Line: 400, Col: 5)
|—————————CursorKind.DECL_REF_EXPR: cal_SENDACK (Line: 400, Col: 5)
|———————CursorKind.BREAK_STMT:  (Line: 401, Col: 5)
|———————CursorKind.CASE_STMT:  (Line: 402, Col: 4)
|————————CursorKind.INTEGER_LITERAL:  (Line: 402, Col: 9)
|————————CursorKind.NULL_STMT:  (Line: 0, Col: 0)
|———————CursorKind.BREAK_STMT:  (Line: 407, Col: 5)
|———————CursorKind.DEFAULT_STMT:  (Line: 408, Col: 4)
|————————CursorKind.IF_STMT:  (Line: 410, Col: 5)
|—————————CursorKind.UNEXPOSED_EXPR:  (Line: 410, Col: 8)
|—————————CursorKind.COMPOUND_STMT:  (Line: 410, Col: 26)
|——————————CursorKind.IF_STMT:  (Line: 412, Col: 6)
|———————————CursorKind.UNEXPOSED_EXPR:  (Line: 412, Col: 9)
|———————————CursorKind.RETURN_STMT:  (Line: 412, Col: 43)
|————————————CursorKind.UNARY_OPERATOR:  (Line: 412, Col: 50)
|—————————————CursorKind.INTEGER_LITERAL:  (Line: 412, Col: 51)
|——————————CursorKind.CALL_EXPR: hil_reset (Line: 413, Col: 6)
|———————————CursorKind.UNEXPOSED_EXPR: hil_reset (Line: 413, Col: 6)
|————————————CursorKind.DECL_REF_EXPR: hil_reset (Line: 413, Col: 6)
|——————————CursorKind.BREAK_STMT:  (Line: 414, Col: 6)
|—————————CursorKind.COMPOUND_STMT:  (Line: 416, Col: 9)
|——————————CursorKind.CALL_EXPR: cal_SENDNACK (Line: 417, Col: 5)
|———————————CursorKind.UNEXPOSED_EXPR: cal_SENDNACK (Line: 417, Col: 5)
|————————————CursorKind.DECL_REF_EXPR: cal_SENDNACK (Line: 417, Col: 5)
|——————————CursorKind.RETURN_STMT:  (Line: 418, Col: 5)
|———————————CursorKind.UNARY_OPERATOR:  (Line: 418, Col: 12)
|————————————CursorKind.INTEGER_LITERAL:  (Line: 418, Col: 13)
|———CursorKind.RETURN_STMT:  (Line: 422, Col: 2)
|————CursorKind.INTEGER_LITERAL:  (Line: 422, Col: 9)
|—CursorKind.FUNCTION_DECL: command_erase_memory() (Line: 426, Col: 9)
|——CursorKind.COMPOUND_STMT:  (Line: 426, Col: 32)
|———CursorKind.CALL_EXPR: cal_SENDLOG (Line: 431, Col: 2)
|————CursorKind.UNEXPOSED_EXPR: cal_SENDLOG (Line: 431, Col: 2)
|—————CursorKind.DECL_REF_EXPR: cal_SENDLOG (Line: 431, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 431, Col: 14)
|—————CursorKind.STRING_LITERAL: "-> cmd: erase memory started, acking \r\n" (Line: 431, Col: 14)
|———CursorKind.CALL_EXPR: cal_SENDACK (Line: 433, Col: 2)
|————CursorKind.UNEXPOSED_EXPR: cal_SENDACK (Line: 433, Col: 2)
|—————CursorKind.DECL_REF_EXPR: cal_SENDACK (Line: 433, Col: 2)
|———CursorKind.IF_STMT:  (Line: 439, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 439, Col: 6)
|————CursorKind.COMPOUND_STMT:  (Line: 439, Col: 20)
|—————CursorKind.CALL_EXPR: cal_SENDLOG (Line: 440, Col: 3)
|——————CursorKind.UNEXPOSED_EXPR: cal_SENDLOG (Line: 440, Col: 3)
|———————CursorKind.DECL_REF_EXPR: cal_SENDLOG (Line: 440, Col: 3)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 440, Col: 15)
|———————CursorKind.STRING_LITERAL: "-> cmd: global erase requested, starting global erase \r\n" (Line: 440, Col: 15)
|—————CursorKind.CALL_EXPR: hil_globalerasememory (Line: 441, Col: 3)
|——————CursorKind.UNEXPOSED_EXPR: hil_globalerasememory (Line: 441, Col: 3)
|———————CursorKind.DECL_REF_EXPR: hil_globalerasememory (Line: 441, Col: 3)
|—————CursorKind.CALL_EXPR: cal_SENDLOG (Line: 442, Col: 3)
|——————CursorKind.UNEXPOSED_EXPR: cal_SENDLOG (Line: 442, Col: 3)
|———————CursorKind.DECL_REF_EXPR: cal_SENDLOG (Line: 442, Col: 3)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 442, Col: 15)
|———————CursorKind.STRING_LITERAL: "-> cmd: global erase terminated, acking \r\n" (Line: 442, Col: 15)
|—————CursorKind.CALL_EXPR: cal_SENDACK (Line: 443, Col: 3)
|——————CursorKind.UNEXPOSED_EXPR: cal_SENDACK (Line: 443, Col: 3)
|———————CursorKind.DECL_REF_EXPR: cal_SENDACK (Line: 443, Col: 3)
|————CursorKind.COMPOUND_STMT:  (Line: 447, Col: 7)
|—————CursorKind.CALL_EXPR: cal_SENDLOG (Line: 451, Col: 4)
|——————CursorKind.UNEXPOSED_EXPR: cal_SENDLOG (Line: 451, Col: 4)
|———————CursorKind.DECL_REF_EXPR: cal_SENDLOG (Line: 451, Col: 4)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 451, Col: 16)
|———————CursorKind.STRING_LITERAL: "-> cmd: pagewise erase requested \r\n" (Line: 451, Col: 16)
|—————CursorKind.IF_STMT:  (Line: 458, Col: 4)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 458, Col: 7)
|——————CursorKind.CALL_EXPR: cal_SENDNACK (Line: 458, Col: 61)
|———————CursorKind.UNEXPOSED_EXPR: cal_SENDNACK (Line: 458, Col: 61)
|————————CursorKind.DECL_REF_EXPR: cal_SENDNACK (Line: 458, Col: 61)
|—————CursorKind.CALL_EXPR: cal_SENDLOG (Line: 459, Col: 4)
|——————CursorKind.UNEXPOSED_EXPR: cal_SENDLOG (Line: 459, Col: 4)
|———————CursorKind.DECL_REF_EXPR: cal_SENDLOG (Line: 459, Col: 4)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 459, Col: 16)
|———————CursorKind.STRING_LITERAL: "-> cmd: checksum correct, starting pagewise erase \r\n" (Line: 459, Col: 16)
|—————CursorKind.CALL_EXPR: cal_SENDLOG (Line: 464, Col: 4)
|——————CursorKind.UNEXPOSED_EXPR: cal_SENDLOG (Line: 464, Col: 4)
|———————CursorKind.DECL_REF_EXPR: cal_SENDLOG (Line: 464, Col: 4)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 464, Col: 16)
|———————CursorKind.STRING_LITERAL: "-> cmd: pagewise erase terminated, acking \r\n" (Line: 464, Col: 16)
|—————CursorKind.CALL_EXPR: cal_SENDACK (Line: 465, Col: 4)
|——————CursorKind.UNEXPOSED_EXPR: cal_SENDACK (Line: 465, Col: 4)
|———————CursorKind.DECL_REF_EXPR: cal_SENDACK (Line: 465, Col: 4)
|———CursorKind.RETURN_STMT:  (Line: 467, Col: 2)
|————CursorKind.INTEGER_LITERAL:  (Line: 467, Col: 9)
|—CursorKind.FUNCTION_DECL: command_exterase_memory() (Line: 472, Col: 9)
|——CursorKind.COMPOUND_STMT:  (Line: 472, Col: 35)
|———CursorKind.IF_STMT:  (Line: 474, Col: 2)
|————CursorKind.CALL_EXPR: hil_ropactive (Line: 474, Col: 6)
|—————CursorKind.UNEXPOSED_EXPR: hil_ropactive (Line: 474, Col: 6)
|——————CursorKind.DECL_REF_EXPR: hil_ropactive (Line: 474, Col: 6)
|————CursorKind.COMPOUND_STMT:  (Line: 474, Col: 24)
|—————CursorKind.RETURN_STMT:  (Line: 474, Col: 56)
|——————CursorKind.UNARY_OPERATOR:  (Line: 474, Col: 63)
|———————CursorKind.INTEGER_LITERAL:  (Line: 474, Col: 64)
|———CursorKind.IF_STMT:  (Line: 475, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 475, Col: 5)
|————CursorKind.RETURN_STMT:  (Line: 475, Col: 39)
|—————CursorKind.UNARY_OPERATOR:  (Line: 475, Col: 46)
|——————CursorKind.INTEGER_LITERAL:  (Line: 475, Col: 47)
|———CursorKind.SWITCH_STMT:  (Line: 477, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 477, Col: 10)
|————CursorKind.COMPOUND_STMT:  (Line: 477, Col: 14)
|—————CursorKind.CASE_STMT:  (Line: 478, Col: 2)
|——————CursorKind.INTEGER_LITERAL:  (Line: 478, Col: 7)
|——————CursorKind.CALL_EXPR: hil_globalerasememory (Line: 482, Col: 3)
|———————CursorKind.UNEXPOSED_EXPR: hil_globalerasememory (Line: 482, Col: 3)
|————————CursorKind.DECL_REF_EXPR: hil_globalerasememory (Line: 482, Col: 3)
|—————CursorKind.IF_STMT:  (Line: 483, Col: 3)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 483, Col: 6)
|——————CursorKind.RETURN_STMT:  (Line: 483, Col: 40)
|———————CursorKind.UNARY_OPERATOR:  (Line: 483, Col: 47)
|————————CursorKind.INTEGER_LITERAL:  (Line: 483, Col: 48)
|—————CursorKind.IF_STMT:  (Line: 485, Col: 3)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 485, Col: 6)
|——————CursorKind.RETURN_STMT:  (Line: 485, Col: 41)
|———————CursorKind.UNARY_OPERATOR:  (Line: 485, Col: 48)
|————————CursorKind.INTEGER_LITERAL:  (Line: 485, Col: 49)
|—————CursorKind.BREAK_STMT:  (Line: 486, Col: 7)
|—————CursorKind.CASE_STMT:  (Line: 487, Col: 2)
|——————CursorKind.INTEGER_LITERAL:  (Line: 487, Col: 7)
|——————CursorKind.CALL_EXPR: hil_erasebank1 (Line: 491, Col: 3)
|———————CursorKind.UNEXPOSED_EXPR: hil_erasebank1 (Line: 491, Col: 3)
|————————CursorKind.DECL_REF_EXPR: hil_erasebank1 (Line: 491, Col: 3)
|—————CursorKind.IF_STMT:  (Line: 492, Col: 3)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 492, Col: 6)
|——————CursorKind.RETURN_STMT:  (Line: 492, Col: 40)
|———————CursorKind.UNARY_OPERATOR:  (Line: 492, Col: 47)
|————————CursorKind.INTEGER_LITERAL:  (Line: 492, Col: 48)
|—————CursorKind.IF_STMT:  (Line: 494, Col: 3)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 494, Col: 6)
|——————CursorKind.RETURN_STMT:  (Line: 494, Col: 41)
|———————CursorKind.UNARY_OPERATOR:  (Line: 494, Col: 48)
|————————CursorKind.INTEGER_LITERAL:  (Line: 494, Col: 49)
|—————CursorKind.BREAK_STMT:  (Line: 495, Col: 4)
|—————CursorKind.CASE_STMT:  (Line: 496, Col: 2)
|——————CursorKind.INTEGER_LITERAL:  (Line: 496, Col: 7)
|——————CursorKind.CALL_EXPR: hil_erasebank2 (Line: 500, Col: 3)
|———————CursorKind.UNEXPOSED_EXPR: hil_erasebank2 (Line: 500, Col: 3)
|————————CursorKind.DECL_REF_EXPR: hil_erasebank2 (Line: 500, Col: 3)
|—————CursorKind.IF_STMT:  (Line: 501, Col: 3)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 501, Col: 6)
|——————CursorKind.RETURN_STMT:  (Line: 501, Col: 40)
|———————CursorKind.UNARY_OPERATOR:  (Line: 501, Col: 47)
|————————CursorKind.INTEGER_LITERAL:  (Line: 501, Col: 48)
|—————CursorKind.IF_STMT:  (Line: 503, Col: 3)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 503, Col: 6)
|——————CursorKind.RETURN_STMT:  (Line: 503, Col: 41)
|———————CursorKind.UNARY_OPERATOR:  (Line: 503, Col: 48)
|————————CursorKind.INTEGER_LITERAL:  (Line: 503, Col: 49)
|—————CursorKind.BREAK_STMT:  (Line: 504, Col: 4)
|—————CursorKind.DEFAULT_STMT:  (Line: 505, Col: 2)
|——————CursorKind.IF_STMT:  (Line: 509, Col: 3)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 509, Col: 6)
|———————CursorKind.RETURN_STMT:  (Line: 509, Col: 41)
|————————CursorKind.UNARY_OPERATOR:  (Line: 509, Col: 48)
|—————————CursorKind.INTEGER_LITERAL:  (Line: 509, Col: 49)
|—————CursorKind.CALL_EXPR: hil_erasecorrespondingpage (Line: 511, Col: 3)
|——————CursorKind.UNEXPOSED_EXPR: hil_erasecorrespondingpage (Line: 511, Col: 3)
|———————CursorKind.DECL_REF_EXPR: hil_erasecorrespondingpage (Line: 511, Col: 3)
|——————CursorKind.INTEGER_LITERAL:  (Line: 511, Col: 30)
|—————CursorKind.IF_STMT:  (Line: 512, Col: 3)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 512, Col: 6)
|——————CursorKind.RETURN_STMT:  (Line: 512, Col: 40)
|———————CursorKind.UNARY_OPERATOR:  (Line: 512, Col: 47)
|————————CursorKind.INTEGER_LITERAL:  (Line: 512, Col: 48)
|—————CursorKind.BREAK_STMT:  (Line: 513, Col: 3)
|———CursorKind.RETURN_STMT:  (Line: 515, Col: 2)
|————CursorKind.INTEGER_LITERAL:  (Line: 515, Col: 9)
|—CursorKind.FUNCTION_DECL: command_write_protect() (Line: 519, Col: 9)
|——CursorKind.COMPOUND_STMT:  (Line: 519, Col: 33)
|———CursorKind.IF_STMT:  (Line: 524, Col: 2)
|————CursorKind.CALL_EXPR: hil_ropactive (Line: 524, Col: 6)
|—————CursorKind.UNEXPOSED_EXPR: hil_ropactive (Line: 524, Col: 6)
|——————CursorKind.DECL_REF_EXPR: hil_ropactive (Line: 524, Col: 6)
|————CursorKind.COMPOUND_STMT:  (Line: 524, Col: 24)
|—————CursorKind.RETURN_STMT:  (Line: 524, Col: 56)
|——————CursorKind.UNARY_OPERATOR:  (Line: 524, Col: 63)
|———————CursorKind.INTEGER_LITERAL:  (Line: 524, Col: 64)
|———CursorKind.IF_STMT:  (Line: 525, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 525, Col: 5)
|————CursorKind.RETURN_STMT:  (Line: 525, Col: 39)
|—————CursorKind.UNARY_OPERATOR:  (Line: 525, Col: 46)
|——————CursorKind.INTEGER_LITERAL:  (Line: 525, Col: 47)
|———CursorKind.IF_STMT:  (Line: 532, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 532, Col: 5)
|————CursorKind.RETURN_STMT:  (Line: 532, Col: 64)
|—————CursorKind.UNARY_OPERATOR:  (Line: 532, Col: 71)
|——————CursorKind.INTEGER_LITERAL:  (Line: 532, Col: 72)
|———CursorKind.IF_STMT:  (Line: 533, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 533, Col: 5)
|————CursorKind.COMPOUND_STMT:  (Line: 533, Col: 59)
|—————CursorKind.RETURN_STMT:  (Line: 533, Col: 91)
|——————CursorKind.UNARY_OPERATOR:  (Line: 533, Col: 98)
|———————CursorKind.INTEGER_LITERAL:  (Line: 533, Col: 99)
|———CursorKind.NULL_STMT:  (Line: 533, Col: 102)
|———CursorKind.IF_STMT:  (Line: 538, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 538, Col: 5)
|————CursorKind.RETURN_STMT:  (Line: 538, Col: 39)
|—————CursorKind.UNARY_OPERATOR:  (Line: 538, Col: 46)
|——————CursorKind.INTEGER_LITERAL:  (Line: 538, Col: 47)
|———CursorKind.CALL_EXPR: hil_reset (Line: 539, Col: 2)
|————CursorKind.UNEXPOSED_EXPR: hil_reset (Line: 539, Col: 2)
|—————CursorKind.DECL_REF_EXPR: hil_reset (Line: 539, Col: 2)
|———CursorKind.RETURN_STMT:  (Line: 540, Col: 2)
|————CursorKind.INTEGER_LITERAL:  (Line: 540, Col: 9)
|—CursorKind.FUNCTION_DECL: command_write_unprotect() (Line: 544, Col: 9)
|——CursorKind.COMPOUND_STMT:  (Line: 544, Col: 35)
|———CursorKind.CALL_EXPR: cal_SENDLOG (Line: 546, Col: 2)
|————CursorKind.UNEXPOSED_EXPR: cal_SENDLOG (Line: 546, Col: 2)
|—————CursorKind.DECL_REF_EXPR: cal_SENDLOG (Line: 546, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 546, Col: 14)
|—————CursorKind.STRING_LITERAL: "-> cmd: write unprotect entered, acking \r\n" (Line: 546, Col: 14)
|———CursorKind.CALL_EXPR: cal_SENDACK (Line: 547, Col: 2)
|————CursorKind.UNEXPOSED_EXPR: cal_SENDACK (Line: 547, Col: 2)
|—————CursorKind.DECL_REF_EXPR: cal_SENDACK (Line: 547, Col: 2)
|———CursorKind.CALL_EXPR: hil_removewriteprotectionflashmem (Line: 548, Col: 2)
|————CursorKind.UNEXPOSED_EXPR: hil_removewriteprotectionflashmem (Line: 548, Col: 2)
|—————CursorKind.DECL_REF_EXPR: hil_removewriteprotectionflashmem (Line: 548, Col: 2)
|———CursorKind.CALL_EXPR: cal_SENDLOG (Line: 549, Col: 2)
|————CursorKind.UNEXPOSED_EXPR: cal_SENDLOG (Line: 549, Col: 2)
|—————CursorKind.DECL_REF_EXPR: cal_SENDLOG (Line: 549, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 549, Col: 14)
|—————CursorKind.STRING_LITERAL: "-> cmd: write protection removed, acking \r\n" (Line: 549, Col: 14)
|———CursorKind.CALL_EXPR: cal_SENDACK (Line: 550, Col: 2)
|————CursorKind.UNEXPOSED_EXPR: cal_SENDACK (Line: 550, Col: 2)
|—————CursorKind.DECL_REF_EXPR: cal_SENDACK (Line: 550, Col: 2)
|———CursorKind.CALL_EXPR: cal_SENDLOG (Line: 551, Col: 2)
|————CursorKind.UNEXPOSED_EXPR: cal_SENDLOG (Line: 551, Col: 2)
|—————CursorKind.DECL_REF_EXPR: cal_SENDLOG (Line: 551, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 551, Col: 14)
|—————CursorKind.STRING_LITERAL: "-> cmd: write unprotect ended, generating system reset \r\n" (Line: 551, Col: 14)
|———CursorKind.CALL_EXPR: hil_reset (Line: 552, Col: 2)
|————CursorKind.UNEXPOSED_EXPR: hil_reset (Line: 552, Col: 2)
|—————CursorKind.DECL_REF_EXPR: hil_reset (Line: 552, Col: 2)
|———CursorKind.RETURN_STMT:  (Line: 553, Col: 2)
|————CursorKind.INTEGER_LITERAL:  (Line: 553, Col: 9)
|—CursorKind.FUNCTION_DECL: command_readout_protect() (Line: 557, Col: 9)
|——CursorKind.COMPOUND_STMT:  (Line: 557, Col: 35)
|———CursorKind.IF_STMT:  (Line: 558, Col: 2)
|————CursorKind.CALL_EXPR: hil_ropactive (Line: 558, Col: 6)
|—————CursorKind.UNEXPOSED_EXPR: hil_ropactive (Line: 558, Col: 6)
|——————CursorKind.DECL_REF_EXPR: hil_ropactive (Line: 558, Col: 6)
|————CursorKind.COMPOUND_STMT:  (Line: 558, Col: 24)
|—————CursorKind.RETURN_STMT:  (Line: 558, Col: 56)
|——————CursorKind.UNARY_OPERATOR:  (Line: 558, Col: 63)
|———————CursorKind.INTEGER_LITERAL:  (Line: 558, Col: 64)
|———CursorKind.IF_STMT:  (Line: 559, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 559, Col: 5)
|————CursorKind.RETURN_STMT:  (Line: 559, Col: 39)
|—————CursorKind.UNARY_OPERATOR:  (Line: 559, Col: 46)
|——————CursorKind.INTEGER_LITERAL:  (Line: 559, Col: 47)
|———CursorKind.CALL_EXPR: hil_enablerop (Line: 560, Col: 2)
|————CursorKind.UNEXPOSED_EXPR: hil_enablerop (Line: 560, Col: 2)
|—————CursorKind.DECL_REF_EXPR: hil_enablerop (Line: 560, Col: 2)
|———CursorKind.IF_STMT:  (Line: 561, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 561, Col: 5)
|————CursorKind.RETURN_STMT:  (Line: 561, Col: 39)
|—————CursorKind.UNARY_OPERATOR:  (Line: 561, Col: 46)
|——————CursorKind.INTEGER_LITERAL:  (Line: 561, Col: 47)
|———CursorKind.CALL_EXPR: hil_reset (Line: 562, Col: 2)
|————CursorKind.UNEXPOSED_EXPR: hil_reset (Line: 562, Col: 2)
|—————CursorKind.DECL_REF_EXPR: hil_reset (Line: 562, Col: 2)
|———CursorKind.RETURN_STMT:  (Line: 563, Col: 2)
|————CursorKind.INTEGER_LITERAL:  (Line: 563, Col: 9)
|—CursorKind.FUNCTION_DECL: command_readout_unprotect() (Line: 567, Col: 9)
|——CursorKind.COMPOUND_STMT:  (Line: 567, Col: 37)
|———CursorKind.IF_STMT:  (Line: 568, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 568, Col: 5)
|————CursorKind.RETURN_STMT:  (Line: 568, Col: 39)
|—————CursorKind.UNARY_OPERATOR:  (Line: 568, Col: 46)
|——————CursorKind.INTEGER_LITERAL:  (Line: 568, Col: 47)
|———CursorKind.CALL_EXPR: hil_disablerop (Line: 569, Col: 2)
|————CursorKind.UNEXPOSED_EXPR: hil_disablerop (Line: 569, Col: 2)
|—————CursorKind.DECL_REF_EXPR: hil_disablerop (Line: 569, Col: 2)
|———CursorKind.IF_STMT:  (Line: 570, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 570, Col: 5)
|————CursorKind.RETURN_STMT:  (Line: 570, Col: 39)
|—————CursorKind.UNARY_OPERATOR:  (Line: 570, Col: 46)
|——————CursorKind.INTEGER_LITERAL:  (Line: 570, Col: 47)
|———CursorKind.CALL_EXPR: hil_clearram (Line: 571, Col: 2)
|————CursorKind.UNEXPOSED_EXPR: hil_clearram (Line: 571, Col: 2)
|—————CursorKind.DECL_REF_EXPR: hil_clearram (Line: 571, Col: 2)
|———CursorKind.CALL_EXPR: hil_reset (Line: 572, Col: 2)
|————CursorKind.UNEXPOSED_EXPR: hil_reset (Line: 572, Col: 2)
|—————CursorKind.DECL_REF_EXPR: hil_reset (Line: 572, Col: 2)
|———CursorKind.RETURN_STMT:  (Line: 573, Col: 2)
|————CursorKind.INTEGER_LITERAL:  (Line: 573, Col: 9)
