CANnuccia-src\stm32\can.c

|CursorKind.TRANSLATION_UNIT: src\stm32\can.c (Line: 0, Col: 0)
|—CursorKind.STRUCT_DECL: CanMailbox (Line: 23, Col: 8)
|——CursorKind.FIELD_DECL: IR (Line: 25, Col: 14)
|——CursorKind.FIELD_DECL: DTR (Line: 26, Col: 14)
|——CursorKind.FIELD_DECL: DLR (Line: 27, Col: 14)
|——CursorKind.FIELD_DECL: DHR (Line: 28, Col: 14)
|—CursorKind.STRUCT_DECL: CanFilter (Line: 31, Col: 8)
|——CursorKind.FIELD_DECL: R1 (Line: 33, Col: 14)
|——CursorKind.FIELD_DECL: R2 (Line: 34, Col: 14)
|—CursorKind.STRUCT_DECL: Can (Line: 37, Col: 8)
|——CursorKind.FIELD_DECL: MCR (Line: 39, Col: 14)
|——CursorKind.FIELD_DECL: MSR (Line: 40, Col: 14)
|——CursorKind.FIELD_DECL: TSR (Line: 41, Col: 14)
|——CursorKind.FIELD_DECL: RF0R (Line: 42, Col: 14)
|——CursorKind.FIELD_DECL: RF1R (Line: 43, Col: 14)
|——CursorKind.FIELD_DECL: IER (Line: 44, Col: 14)
|——CursorKind.FIELD_DECL: ESR (Line: 45, Col: 14)
|——CursorKind.FIELD_DECL: BTR (Line: 46, Col: 14)
|——CursorKind.FIELD_DECL: _reserved1 (Line: 47, Col: 14)
|———CursorKind.INTEGER_LITERAL:  (Line: 47, Col: 25)
|——CursorKind.FIELD_DECL: OUTBOX (Line: 48, Col: 23)
|———CursorKind.TYPE_REF: struct CanMailbox (Line: 48, Col: 12)
|———CursorKind.INTEGER_LITERAL:  (Line: 48, Col: 30)
|——CursorKind.FIELD_DECL: INBOX (Line: 49, Col: 23)
|———CursorKind.TYPE_REF: struct CanMailbox (Line: 49, Col: 12)
|———CursorKind.INTEGER_LITERAL:  (Line: 49, Col: 29)
|——CursorKind.FIELD_DECL: _reserved2 (Line: 50, Col: 14)
|———CursorKind.INTEGER_LITERAL:  (Line: 50, Col: 25)
|——CursorKind.FIELD_DECL: FMR (Line: 51, Col: 14)
|——CursorKind.FIELD_DECL: FM1R (Line: 52, Col: 14)
|——CursorKind.FIELD_DECL: _reserved3 (Line: 53, Col: 14)
|———CursorKind.INTEGER_LITERAL:  (Line: 53, Col: 25)
|——CursorKind.FIELD_DECL: FS1R (Line: 54, Col: 14)
|——CursorKind.FIELD_DECL: _reserved4 (Line: 55, Col: 14)
|———CursorKind.INTEGER_LITERAL:  (Line: 55, Col: 25)
|——CursorKind.FIELD_DECL: FFA1R (Line: 56, Col: 14)
|——CursorKind.FIELD_DECL: _reserved5 (Line: 57, Col: 14)
|———CursorKind.INTEGER_LITERAL:  (Line: 57, Col: 25)
|——CursorKind.FIELD_DECL: FA1R (Line: 58, Col: 14)
|——CursorKind.FIELD_DECL: _reserved6 (Line: 59, Col: 14)
|———CursorKind.INTEGER_LITERAL:  (Line: 59, Col: 25)
|——CursorKind.FIELD_DECL: FILTER (Line: 60, Col: 22)
|———CursorKind.TYPE_REF: struct CanFilter (Line: 60, Col: 12)
|———CursorKind.INTEGER_LITERAL:  (Line: 60, Col: 29)
|—CursorKind.FUNCTION_DECL: initCANFilter(unsigned int, int, int) (Line: 84, Col: 20)
|——CursorKind.PARM_DECL: n (Line: 84, Col: 43)
|——CursorKind.PARM_DECL: id (Line: 84, Col: 55)
|——CursorKind.PARM_DECL: mask (Line: 84, Col: 68)
|——CursorKind.COMPOUND_STMT:  (Line: 85, Col: 1)
|———CursorKind.DECL_STMT:  (Line: 86, Col: 5)
|————CursorKind.VAR_DECL: fltBit (Line: 86, Col: 20)
|———CursorKind.COMPOUND_ASSIGNMENT_OPERATOR:  (Line: 87, Col: 5)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 87, Col: 5)
|—————CursorKind.PAREN_EXPR:  (Line: 87, Col: 5)
|——————CursorKind.CSTYLE_CAST_EXPR:  (Line: 87, Col: 5)
|———————CursorKind.TYPE_REF: struct Can (Line: 87, Col: 5)
|———————CursorKind.INTEGER_LITERAL:  (Line: 87, Col: 5)
|————CursorKind.UNARY_OPERATOR:  (Line: 87, Col: 19)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 87, Col: 20)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 87, Col: 20)
|———CursorKind.COMPOUND_ASSIGNMENT_OPERATOR:  (Line: 88, Col: 5)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 88, Col: 5)
|—————CursorKind.PAREN_EXPR:  (Line: 88, Col: 5)
|——————CursorKind.CSTYLE_CAST_EXPR:  (Line: 88, Col: 5)
|———————CursorKind.TYPE_REF: struct Can (Line: 88, Col: 5)
|———————CursorKind.INTEGER_LITERAL:  (Line: 88, Col: 5)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 88, Col: 19)
|———CursorKind.COMPOUND_ASSIGNMENT_OPERATOR:  (Line: 89, Col: 5)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 89, Col: 5)
|—————CursorKind.PAREN_EXPR:  (Line: 89, Col: 5)
|——————CursorKind.CSTYLE_CAST_EXPR:  (Line: 89, Col: 5)
|———————CursorKind.TYPE_REF: struct Can (Line: 89, Col: 5)
|———————CursorKind.INTEGER_LITERAL:  (Line: 89, Col: 5)
|————CursorKind.UNARY_OPERATOR:  (Line: 89, Col: 20)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 89, Col: 21)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 89, Col: 21)
|———CursorKind.BINARY_OPERATOR:  (Line: 90, Col: 5)
|————CursorKind.MEMBER_REF_EXPR:  (Line: 90, Col: 5)
|—————CursorKind.ARRAY_SUBSCRIPT_EXPR:  (Line: 90, Col: 5)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 90, Col: 5)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 90, Col: 5)
|————————CursorKind.PAREN_EXPR:  (Line: 90, Col: 5)
|—————————CursorKind.CSTYLE_CAST_EXPR:  (Line: 90, Col: 5)
|——————————CursorKind.TYPE_REF: struct Can (Line: 90, Col: 5)
|——————————CursorKind.INTEGER_LITERAL:  (Line: 90, Col: 5)
|——————CursorKind.UNEXPOSED_EXPR: n (Line: 90, Col: 18)
|———————CursorKind.DECL_REF_EXPR: n (Line: 90, Col: 18)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 90, Col: 26)
|———CursorKind.BINARY_OPERATOR:  (Line: 91, Col: 5)
|————CursorKind.MEMBER_REF_EXPR:  (Line: 91, Col: 5)
|—————CursorKind.ARRAY_SUBSCRIPT_EXPR:  (Line: 91, Col: 5)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 91, Col: 5)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 91, Col: 5)
|————————CursorKind.PAREN_EXPR:  (Line: 91, Col: 5)
|—————————CursorKind.CSTYLE_CAST_EXPR:  (Line: 91, Col: 5)
|——————————CursorKind.TYPE_REF: struct Can (Line: 91, Col: 5)
|——————————CursorKind.INTEGER_LITERAL:  (Line: 91, Col: 5)
|——————CursorKind.UNEXPOSED_EXPR: n (Line: 91, Col: 18)
|———————CursorKind.DECL_REF_EXPR: n (Line: 91, Col: 18)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 91, Col: 26)
|———CursorKind.COMPOUND_ASSIGNMENT_OPERATOR:  (Line: 92, Col: 5)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 92, Col: 5)
|—————CursorKind.PAREN_EXPR:  (Line: 92, Col: 5)
|——————CursorKind.CSTYLE_CAST_EXPR:  (Line: 92, Col: 5)
|———————CursorKind.TYPE_REF: struct Can (Line: 92, Col: 5)
|———————CursorKind.INTEGER_LITERAL:  (Line: 92, Col: 5)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 92, Col: 19)
|—CursorKind.FUNCTION_DECL: cnCANInit(int, int) (Line: 95, Col: 5)
|——CursorKind.PARM_DECL: id (Line: 95, Col: 24)
|——CursorKind.PARM_DECL: mask (Line: 95, Col: 37)
|——CursorKind.COMPOUND_STMT:  (Line: 96, Col: 1)
|———CursorKind.COMPOUND_ASSIGNMENT_OPERATOR:  (Line: 107, Col: 5)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 107, Col: 5)
|—————CursorKind.PAREN_EXPR:  (Line: 107, Col: 5)
|——————CursorKind.CSTYLE_CAST_EXPR:  (Line: 107, Col: 5)
|———————CursorKind.TYPE_REF: struct Can (Line: 107, Col: 5)
|———————CursorKind.INTEGER_LITERAL:  (Line: 107, Col: 5)
|————CursorKind.INTEGER_LITERAL:  (Line: 107, Col: 18)
|———CursorKind.WHILE_STMT:  (Line: 108, Col: 5)
|————CursorKind.UNARY_OPERATOR:  (Line: 108, Col: 11)
|—————CursorKind.PAREN_EXPR:  (Line: 108, Col: 12)
|——————CursorKind.BINARY_OPERATOR:  (Line: 108, Col: 13)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 108, Col: 13)
|————————CursorKind.PAREN_EXPR:  (Line: 108, Col: 13)
|—————————CursorKind.CSTYLE_CAST_EXPR:  (Line: 108, Col: 13)
|——————————CursorKind.TYPE_REF: struct Can (Line: 108, Col: 13)
|——————————CursorKind.INTEGER_LITERAL:  (Line: 108, Col: 13)
|———————CursorKind.INTEGER_LITERAL:  (Line: 108, Col: 25)
|————CursorKind.COMPOUND_STMT:  (Line: 108, Col: 40)
|———CursorKind.COMPOUND_ASSIGNMENT_OPERATOR:  (Line: 110, Col: 5)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 110, Col: 5)
|—————CursorKind.PAREN_EXPR:  (Line: 110, Col: 5)
|——————CursorKind.CSTYLE_CAST_EXPR:  (Line: 110, Col: 5)
|———————CursorKind.TYPE_REF: struct Can (Line: 110, Col: 5)
|———————CursorKind.INTEGER_LITERAL:  (Line: 110, Col: 5)
|————CursorKind.INTEGER_LITERAL:  (Line: 110, Col: 18)
|———CursorKind.CALL_EXPR:  (Line: 111, Col: 5)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 111, Col: 5)
|—————CursorKind.DECL_REF_EXPR: initCANFilter (Line: 111, Col: 5)
|————CursorKind.INTEGER_LITERAL:  (Line: 111, Col: 19)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 111, Col: 22)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 111, Col: 26)
|———CursorKind.COMPOUND_ASSIGNMENT_OPERATOR:  (Line: 112, Col: 5)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 112, Col: 5)
|—————CursorKind.PAREN_EXPR:  (Line: 112, Col: 5)
|——————CursorKind.CSTYLE_CAST_EXPR:  (Line: 112, Col: 5)
|———————CursorKind.TYPE_REF: struct Can (Line: 112, Col: 5)
|———————CursorKind.INTEGER_LITERAL:  (Line: 112, Col: 5)
|————CursorKind.UNARY_OPERATOR:  (Line: 112, Col: 18)
|—————CursorKind.INTEGER_LITERAL:  (Line: 112, Col: 19)
|———CursorKind.COMPOUND_ASSIGNMENT_OPERATOR:  (Line: 114, Col: 5)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 114, Col: 5)
|—————CursorKind.PAREN_EXPR:  (Line: 114, Col: 5)
|——————CursorKind.CSTYLE_CAST_EXPR:  (Line: 114, Col: 5)
|———————CursorKind.TYPE_REF: struct Can (Line: 114, Col: 5)
|———————CursorKind.INTEGER_LITERAL:  (Line: 114, Col: 5)
|————CursorKind.BINARY_OPERATOR:  (Line: 114, Col: 18)
|—————CursorKind.INTEGER_LITERAL:  (Line: 114, Col: 18)
|—————CursorKind.INTEGER_LITERAL:  (Line: 114, Col: 33)
|———CursorKind.COMPOUND_ASSIGNMENT_OPERATOR:  (Line: 120, Col: 5)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 120, Col: 5)
|—————CursorKind.PAREN_EXPR:  (Line: 120, Col: 5)
|——————CursorKind.CSTYLE_CAST_EXPR:  (Line: 120, Col: 5)
|———————CursorKind.TYPE_REF: struct Can (Line: 120, Col: 5)
|———————CursorKind.INTEGER_LITERAL:  (Line: 120, Col: 5)
|————CursorKind.UNARY_OPERATOR:  (Line: 120, Col: 18)
|—————CursorKind.INTEGER_LITERAL:  (Line: 120, Col: 19)
|———CursorKind.WHILE_STMT:  (Line: 121, Col: 5)
|————CursorKind.BINARY_OPERATOR:  (Line: 121, Col: 11)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 121, Col: 11)
|——————CursorKind.PAREN_EXPR:  (Line: 121, Col: 11)
|———————CursorKind.CSTYLE_CAST_EXPR:  (Line: 121, Col: 11)
|————————CursorKind.TYPE_REF: struct Can (Line: 121, Col: 11)
|————————CursorKind.INTEGER_LITERAL:  (Line: 121, Col: 11)
|—————CursorKind.INTEGER_LITERAL:  (Line: 121, Col: 23)
|————CursorKind.COMPOUND_STMT:  (Line: 121, Col: 37)
|———CursorKind.COMPOUND_ASSIGNMENT_OPERATOR:  (Line: 122, Col: 5)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 122, Col: 5)
|—————CursorKind.PAREN_EXPR:  (Line: 122, Col: 5)
|——————CursorKind.CSTYLE_CAST_EXPR:  (Line: 122, Col: 5)
|———————CursorKind.TYPE_REF: struct Can (Line: 122, Col: 5)
|———————CursorKind.INTEGER_LITERAL:  (Line: 122, Col: 5)
|————CursorKind.UNARY_OPERATOR:  (Line: 122, Col: 18)
|—————CursorKind.INTEGER_LITERAL:  (Line: 122, Col: 19)
|———CursorKind.RETURN_STMT:  (Line: 124, Col: 5)
|————CursorKind.INTEGER_LITERAL:  (Line: 124, Col: 12)
|—CursorKind.FUNCTION_DECL: cnCANSend(int, unsigned int, const int *) (Line: 127, Col: 5)
|——CursorKind.PARM_DECL: id (Line: 127, Col: 24)
|——CursorKind.PARM_DECL: len (Line: 127, Col: 37)
|——CursorKind.PARM_DECL: data (Line: 127, Col: 56)
|———CursorKind.DECL_REF_EXPR: len (Line: 127, Col: 61)
|——CursorKind.COMPOUND_STMT:  (Line: 128, Col: 1)
|———CursorKind.IF_STMT:  (Line: 129, Col: 5)
|————CursorKind.UNARY_OPERATOR:  (Line: 129, Col: 8)
|—————CursorKind.PAREN_EXPR:  (Line: 129, Col: 9)
|——————CursorKind.BINARY_OPERATOR:  (Line: 129, Col: 10)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 129, Col: 10)
|————————CursorKind.PAREN_EXPR:  (Line: 129, Col: 10)
|—————————CursorKind.CSTYLE_CAST_EXPR:  (Line: 129, Col: 10)
|——————————CursorKind.TYPE_REF: struct Can (Line: 129, Col: 10)
|——————————CursorKind.INTEGER_LITERAL:  (Line: 129, Col: 10)
|———————CursorKind.PAREN_EXPR:  (Line: 129, Col: 22)
|————————CursorKind.BINARY_OPERATOR:  (Line: 129, Col: 23)
|—————————CursorKind.BINARY_OPERATOR:  (Line: 129, Col: 23)
|——————————CursorKind.INTEGER_LITERAL:  (Line: 129, Col: 23)
|——————————CursorKind.INTEGER_LITERAL:  (Line: 129, Col: 38)
|—————————CursorKind.INTEGER_LITERAL:  (Line: 129, Col: 53)
|————CursorKind.COMPOUND_STMT:  (Line: 130, Col: 5)
|—————CursorKind.RETURN_STMT:  (Line: 132, Col: 9)
|——————CursorKind.UNARY_OPERATOR:  (Line: 132, Col: 16)
|———————CursorKind.INTEGER_LITERAL:  (Line: 132, Col: 17)
|———CursorKind.BINARY_OPERATOR:  (Line: 137, Col: 5)
|————CursorKind.DECL_REF_EXPR: len (Line: 137, Col: 5)
|————CursorKind.CONDITIONAL_OPERATOR:  (Line: 137, Col: 11)
|—————CursorKind.BINARY_OPERATOR:  (Line: 137, Col: 11)
|——————CursorKind.UNEXPOSED_EXPR: len (Line: 137, Col: 11)
|———————CursorKind.DECL_REF_EXPR: len (Line: 137, Col: 11)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 137, Col: 18)
|———————CursorKind.INTEGER_LITERAL:  (Line: 137, Col: 18)
|—————CursorKind.UNEXPOSED_EXPR: len (Line: 137, Col: 22)
|——————CursorKind.DECL_REF_EXPR: len (Line: 137, Col: 22)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 137, Col: 28)
|——————CursorKind.INTEGER_LITERAL:  (Line: 137, Col: 28)
|———CursorKind.DECL_STMT:  (Line: 144, Col: 5)
|————CursorKind.VAR_DECL: DHR (Line: 144, Col: 24)
|———CursorKind.BINARY_OPERATOR:  (Line: 145, Col: 5)
|————CursorKind.UNARY_OPERATOR:  (Line: 145, Col: 5)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 145, Col: 6)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 145, Col: 6)
|————CursorKind.INTEGER_LITERAL:  (Line: 145, Col: 12)
|———CursorKind.SWITCH_STMT:  (Line: 147, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: len (Line: 147, Col: 12)
|—————CursorKind.DECL_REF_EXPR: len (Line: 147, Col: 12)
|————CursorKind.COMPOUND_STMT:  (Line: 148, Col: 5)
|—————CursorKind.CASE_STMT:  (Line: 149, Col: 5)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 149, Col: 10)
|———————CursorKind.INTEGER_LITERAL:  (Line: 149, Col: 10)
|——————CursorKind.DEFAULT_STMT:  (Line: 150, Col: 5)
|———————CursorKind.NULL_STMT:  (Line: 150, Col: 12)
|—————CursorKind.CASE_STMT:  (Line: 152, Col: 5)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 152, Col: 10)
|———————CursorKind.INTEGER_LITERAL:  (Line: 152, Col: 10)
|——————CursorKind.NULL_STMT:  (Line: 0, Col: 0)
|—————CursorKind.CASE_STMT:  (Line: 154, Col: 5)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 154, Col: 10)
|———————CursorKind.INTEGER_LITERAL:  (Line: 154, Col: 10)
|——————CursorKind.NULL_STMT:  (Line: 0, Col: 0)
|—————CursorKind.CASE_STMT:  (Line: 156, Col: 5)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 156, Col: 10)
|———————CursorKind.INTEGER_LITERAL:  (Line: 156, Col: 10)
|——————CursorKind.COMPOUND_ASSIGNMENT_OPERATOR:  (Line: 157, Col: 9)
|———————CursorKind.UNARY_OPERATOR:  (Line: 157, Col: 9)
|————————CursorKind.UNEXPOSED_EXPR:  (Line: 157, Col: 10)
|—————————CursorKind.UNEXPOSED_EXPR:  (Line: 157, Col: 10)
|———————CursorKind.ARRAY_SUBSCRIPT_EXPR:  (Line: 157, Col: 17)
|————————CursorKind.UNEXPOSED_EXPR:  (Line: 157, Col: 17)
|—————————CursorKind.UNEXPOSED_EXPR:  (Line: 157, Col: 17)
|————————CursorKind.INTEGER_LITERAL:  (Line: 157, Col: 22)
|—————CursorKind.CASE_STMT:  (Line: 158, Col: 5)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 158, Col: 10)
|———————CursorKind.INTEGER_LITERAL:  (Line: 158, Col: 10)
|——————CursorKind.NULL_STMT:  (Line: 0, Col: 0)
|—————CursorKind.CASE_STMT:  (Line: 160, Col: 5)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 160, Col: 10)
|———————CursorKind.INTEGER_LITERAL:  (Line: 160, Col: 10)
|——————CursorKind.NULL_STMT:  (Line: 0, Col: 0)
|—————CursorKind.CASE_STMT:  (Line: 162, Col: 5)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 162, Col: 10)
|———————CursorKind.INTEGER_LITERAL:  (Line: 162, Col: 10)
|——————CursorKind.NULL_STMT:  (Line: 0, Col: 0)
|—————CursorKind.CASE_STMT:  (Line: 164, Col: 5)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 164, Col: 10)
|———————CursorKind.INTEGER_LITERAL:  (Line: 164, Col: 10)
|——————CursorKind.NULL_STMT:  (Line: 0, Col: 0)
|—————CursorKind.CASE_STMT:  (Line: 166, Col: 5)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 166, Col: 10)
|———————CursorKind.INTEGER_LITERAL:  (Line: 166, Col: 10)
|——————CursorKind.BREAK_STMT:  (Line: 167, Col: 9)
|———CursorKind.RETURN_STMT:  (Line: 171, Col: 5)
|————CursorKind.CSTYLE_CAST_EXPR:  (Line: 171, Col: 12)
|—————CursorKind.UNEXPOSED_EXPR: len (Line: 171, Col: 17)
|——————CursorKind.DECL_REF_EXPR: len (Line: 171, Col: 17)
|—CursorKind.FUNCTION_DECL: cnCANRecv(int *, unsigned int, int *) (Line: 174, Col: 5)
|——CursorKind.PARM_DECL: recvId (Line: 174, Col: 25)
|——CursorKind.PARM_DECL: maxLen (Line: 174, Col: 42)
|——CursorKind.PARM_DECL: data (Line: 174, Col: 58)
|———CursorKind.DECL_REF_EXPR: maxLen (Line: 174, Col: 63)
|——CursorKind.COMPOUND_STMT:  (Line: 175, Col: 1)
|———CursorKind.IF_STMT:  (Line: 179, Col: 5)
|————CursorKind.UNARY_OPERATOR:  (Line: 179, Col: 8)
|—————CursorKind.PAREN_EXPR:  (Line: 179, Col: 9)
|——————CursorKind.BINARY_OPERATOR:  (Line: 179, Col: 10)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 179, Col: 10)
|————————CursorKind.PAREN_EXPR:  (Line: 179, Col: 10)
|—————————CursorKind.CSTYLE_CAST_EXPR:  (Line: 179, Col: 10)
|——————————CursorKind.TYPE_REF: struct Can (Line: 179, Col: 10)
|——————————CursorKind.INTEGER_LITERAL:  (Line: 179, Col: 10)
|———————CursorKind.INTEGER_LITERAL:  (Line: 179, Col: 23)
|————CursorKind.COMPOUND_STMT:  (Line: 180, Col: 5)
|—————CursorKind.RETURN_STMT:  (Line: 182, Col: 9)
|——————CursorKind.UNARY_OPERATOR:  (Line: 182, Col: 16)
|———————CursorKind.INTEGER_LITERAL:  (Line: 182, Col: 17)
|———CursorKind.BINARY_OPERATOR:  (Line: 185, Col: 5)
|————CursorKind.UNARY_OPERATOR:  (Line: 185, Col: 5)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 185, Col: 6)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 185, Col: 6)
|————CursorKind.MEMBER_REF_EXPR:  (Line: 185, Col: 15)
|—————CursorKind.ARRAY_SUBSCRIPT_EXPR:  (Line: 185, Col: 15)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 185, Col: 15)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 185, Col: 15)
|————————CursorKind.PAREN_EXPR:  (Line: 185, Col: 15)
|—————————CursorKind.CSTYLE_CAST_EXPR:  (Line: 185, Col: 15)
|——————————CursorKind.TYPE_REF: struct Can (Line: 185, Col: 15)
|——————————CursorKind.INTEGER_LITERAL:  (Line: 185, Col: 15)
|——————CursorKind.INTEGER_LITERAL:  (Line: 185, Col: 27)
|———CursorKind.DECL_STMT:  (Line: 186, Col: 5)
|————CursorKind.VAR_DECL: payloadLen (Line: 186, Col: 14)
|—————CursorKind.BINARY_OPERATOR:  (Line: 186, Col: 27)
|——————CursorKind.MEMBER_REF_EXPR:  (Line: 186, Col: 27)
|———————CursorKind.ARRAY_SUBSCRIPT_EXPR:  (Line: 186, Col: 27)
|————————CursorKind.UNEXPOSED_EXPR:  (Line: 186, Col: 27)
|—————————CursorKind.UNEXPOSED_EXPR:  (Line: 186, Col: 27)
|——————————CursorKind.PAREN_EXPR:  (Line: 186, Col: 27)
|———————————CursorKind.CSTYLE_CAST_EXPR:  (Line: 186, Col: 27)
|————————————CursorKind.TYPE_REF: struct Can (Line: 186, Col: 27)
|————————————CursorKind.INTEGER_LITERAL:  (Line: 186, Col: 27)
|————————CursorKind.INTEGER_LITERAL:  (Line: 186, Col: 39)
|——————CursorKind.INTEGER_LITERAL:  (Line: 186, Col: 48)
|———CursorKind.BINARY_OPERATOR:  (Line: 187, Col: 5)
|————CursorKind.DECL_REF_EXPR: maxLen (Line: 187, Col: 5)
|————CursorKind.CONDITIONAL_OPERATOR:  (Line: 187, Col: 14)
|—————CursorKind.BINARY_OPERATOR:  (Line: 187, Col: 14)
|——————CursorKind.UNEXPOSED_EXPR: maxLen (Line: 187, Col: 14)
|———————CursorKind.DECL_REF_EXPR: maxLen (Line: 187, Col: 14)
|——————CursorKind.UNEXPOSED_EXPR: payloadLen (Line: 187, Col: 23)
|———————CursorKind.DECL_REF_EXPR: payloadLen (Line: 187, Col: 23)
|—————CursorKind.UNEXPOSED_EXPR: maxLen (Line: 187, Col: 36)
|——————CursorKind.DECL_REF_EXPR: maxLen (Line: 187, Col: 36)
|—————CursorKind.UNEXPOSED_EXPR: payloadLen (Line: 187, Col: 45)
|——————CursorKind.DECL_REF_EXPR: payloadLen (Line: 187, Col: 45)
|———CursorKind.DECL_STMT:  (Line: 193, Col: 5)
|————CursorKind.VAR_DECL: DHR (Line: 193, Col: 30)
|———CursorKind.SWITCH_STMT:  (Line: 194, Col: 5)
|————CursorKind.UNEXPOSED_EXPR: maxLen (Line: 194, Col: 12)
|—————CursorKind.DECL_REF_EXPR: maxLen (Line: 194, Col: 12)
|————CursorKind.COMPOUND_STMT:  (Line: 195, Col: 5)
|—————CursorKind.CASE_STMT:  (Line: 196, Col: 5)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 196, Col: 10)
|———————CursorKind.INTEGER_LITERAL:  (Line: 196, Col: 10)
|——————CursorKind.DEFAULT_STMT:  (Line: 197, Col: 5)
|———————CursorKind.NULL_STMT:  (Line: 197, Col: 12)
|—————CursorKind.CASE_STMT:  (Line: 199, Col: 5)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 199, Col: 10)
|———————CursorKind.INTEGER_LITERAL:  (Line: 199, Col: 10)
|——————CursorKind.NULL_STMT:  (Line: 0, Col: 0)
|—————CursorKind.CASE_STMT:  (Line: 201, Col: 5)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 201, Col: 10)
|———————CursorKind.INTEGER_LITERAL:  (Line: 201, Col: 10)
|——————CursorKind.NULL_STMT:  (Line: 0, Col: 0)
|—————CursorKind.CASE_STMT:  (Line: 203, Col: 5)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 203, Col: 10)
|———————CursorKind.INTEGER_LITERAL:  (Line: 203, Col: 10)
|——————CursorKind.NULL_STMT:  (Line: 0, Col: 0)
|—————CursorKind.CASE_STMT:  (Line: 205, Col: 5)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 205, Col: 10)
|———————CursorKind.INTEGER_LITERAL:  (Line: 205, Col: 10)
|——————CursorKind.NULL_STMT:  (Line: 0, Col: 0)
|—————CursorKind.CASE_STMT:  (Line: 207, Col: 5)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 207, Col: 10)
|———————CursorKind.INTEGER_LITERAL:  (Line: 207, Col: 10)
|——————CursorKind.NULL_STMT:  (Line: 0, Col: 0)
|—————CursorKind.CASE_STMT:  (Line: 209, Col: 5)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 209, Col: 10)
|———————CursorKind.INTEGER_LITERAL:  (Line: 209, Col: 10)
|——————CursorKind.NULL_STMT:  (Line: 0, Col: 0)
|—————CursorKind.CASE_STMT:  (Line: 211, Col: 5)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 211, Col: 10)
|———————CursorKind.INTEGER_LITERAL:  (Line: 211, Col: 10)
|——————CursorKind.NULL_STMT:  (Line: 0, Col: 0)
|—————CursorKind.CASE_STMT:  (Line: 213, Col: 5)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 213, Col: 10)
|———————CursorKind.INTEGER_LITERAL:  (Line: 213, Col: 10)
|——————CursorKind.BREAK_STMT:  (Line: 214, Col: 9)
|———CursorKind.COMPOUND_ASSIGNMENT_OPERATOR:  (Line: 218, Col: 5)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 218, Col: 5)
|—————CursorKind.PAREN_EXPR:  (Line: 218, Col: 5)
|——————CursorKind.CSTYLE_CAST_EXPR:  (Line: 218, Col: 5)
|———————CursorKind.TYPE_REF: struct Can (Line: 218, Col: 5)
|———————CursorKind.INTEGER_LITERAL:  (Line: 218, Col: 5)
|————CursorKind.INTEGER_LITERAL:  (Line: 218, Col: 19)
|———CursorKind.RETURN_STMT:  (Line: 220, Col: 5)
|————CursorKind.CSTYLE_CAST_EXPR:  (Line: 220, Col: 12)
|—————CursorKind.UNEXPOSED_EXPR: maxLen (Line: 220, Col: 17)
|——————CursorKind.DECL_REF_EXPR: maxLen (Line: 220, Col: 17)
