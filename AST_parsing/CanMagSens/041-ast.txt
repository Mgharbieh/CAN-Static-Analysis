CanMagSens-main\comm\CanBus.cpp

|CursorKind.TRANSLATION_UNIT: main\comm\CanBus.cpp (Line: 0, Col: 0)
|—CursorKind.LINKAGE_SPEC:  (Line: 2361, Col: 8)
|—CursorKind.LINKAGE_SPEC:  (Line: 22, Col: 8)
|—CursorKind.LINKAGE_SPEC:  (Line: 51, Col: 8)
|——CursorKind.TYPEDEF_DECL: uintptr_t (Line: 61, Col: 35)
|——CursorKind.TYPEDEF_DECL: va_list (Line: 72, Col: 23)
|——CursorKind.FUNCTION_DECL: __va_start(va_list *, ...) (Line: 155, Col: 18)
|———CursorKind.PARM_DECL:  (Line: 155, Col: 38)
|————CursorKind.TYPE_REF: va_list (Line: 155, Col: 29)
|—CursorKind.LINKAGE_SPEC:  (Line: 171, Col: 12)
|——CursorKind.CLASS_TEMPLATE: __vcrt_va_list_is_reference<_Ty> (Line: 174, Col: 16)
|———CursorKind.TEMPLATE_TYPE_PARAMETER: _Ty (Line: 173, Col: 28)
|———CursorKind.ENUM_DECL: (unnamed enum at C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vadefs.h:176:13) (Line: 176, Col: 13)
|————CursorKind.ENUM_CONSTANT_DECL: __the_value (Line: 176, Col: 27)
|—————CursorKind.CXX_BOOL_LITERAL_EXPR:  (Line: 176, Col: 41)
|——CursorKind.CLASS_TEMPLATE_PARTIAL_SPECIALIZATION: __vcrt_va_list_is_reference<_Ty &> (Line: 180, Col: 16)
|———CursorKind.TEMPLATE_TYPE_PARAMETER: _Ty (Line: 179, Col: 28)
|———CursorKind.TYPE_REF: _Ty (Line: 180, Col: 44)
|———CursorKind.ENUM_DECL: (unnamed enum at C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vadefs.h:182:13) (Line: 182, Col: 13)
|————CursorKind.ENUM_CONSTANT_DECL: __the_value (Line: 182, Col: 27)
|—————CursorKind.CXX_BOOL_LITERAL_EXPR:  (Line: 182, Col: 41)
|——CursorKind.CLASS_TEMPLATE_PARTIAL_SPECIALIZATION: __vcrt_va_list_is_reference<_Ty &&> (Line: 186, Col: 16)
|———CursorKind.TEMPLATE_TYPE_PARAMETER: _Ty (Line: 185, Col: 28)
|———CursorKind.TYPE_REF: _Ty (Line: 186, Col: 44)
|———CursorKind.ENUM_DECL: (unnamed enum at C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vadefs.h:188:13) (Line: 188, Col: 13)
|————CursorKind.ENUM_CONSTANT_DECL: __the_value (Line: 188, Col: 27)
|—————CursorKind.CXX_BOOL_LITERAL_EXPR:  (Line: 188, Col: 41)
|——CursorKind.CLASS_TEMPLATE: __vcrt_assert_va_start_is_not_reference<_Ty> (Line: 192, Col: 16)
|———CursorKind.TEMPLATE_TYPE_PARAMETER: _Ty (Line: 191, Col: 28)
|———CursorKind.STATIC_ASSERT:  (Line: 194, Col: 13)
|————CursorKind.UNARY_OPERATOR:  (Line: 194, Col: 27)
|—————CursorKind.DECL_REF_EXPR:  (Line: 194, Col: 28)
|——————CursorKind.TEMPLATE_REF: __vcrt_va_list_is_reference (Line: 194, Col: 28)
|——————CursorKind.TYPE_REF: _Ty (Line: 194, Col: 56)
|————CursorKind.STRING_LITERAL: "va_start argument must not have reference type and must not be parenthesized" (Line: 195, Col: 17)
|—CursorKind.LINKAGE_SPEC:  (Line: 96, Col: 1)
|——CursorKind.TYPEDEF_DECL: size_t (Line: 188, Col: 30)
|——CursorKind.TYPEDEF_DECL: ptrdiff_t (Line: 189, Col: 30)
|——CursorKind.TYPEDEF_DECL: intptr_t (Line: 190, Col: 30)
|——CursorKind.TYPEDEF_DECL: __vcrt_bool (Line: 198, Col: 19)
|——CursorKind.LINKAGE_SPEC:  (Line: 245, Col: 12)
|———CursorKind.FUNCTION_TEMPLATE: __countof_helper(__unaligned _CountofType (&)[_SizeOfArray]) (Line: 248, Col: 16)
|————CursorKind.TEMPLATE_TYPE_PARAMETER: _CountofType (Line: 247, Col: 28)
|————CursorKind.TEMPLATE_NON_TYPE_PARAMETER: _SizeOfArray (Line: 247, Col: 49)
|—————CursorKind.TYPE_REF: size_t (Line: 247, Col: 42)
|————CursorKind.DECL_REF_EXPR: _SizeOfArray (Line: 248, Col: 83)
|————CursorKind.PARM_DECL: _Array (Line: 248, Col: 59)
|—————CursorKind.TYPE_REF: _CountofType (Line: 248, Col: 44)
|—————CursorKind.DECL_REF_EXPR: _SizeOfArray (Line: 248, Col: 67)
|——CursorKind.FUNCTION_DECL: __security_init_cookie() (Line: 390, Col: 18)
|——CursorKind.FUNCTION_DECL: __security_check_cookie(uintptr_t) (Line: 399, Col: 22)
|———CursorKind.PARM_DECL: _StackCookie (Line: 399, Col: 61)
|————CursorKind.TYPE_REF: uintptr_t (Line: 399, Col: 51)
|——CursorKind.FUNCTION_DECL: __report_gsfailure(uintptr_t) (Line: 400, Col: 43)
|———CursorKind.PARM_DECL: _StackCookie (Line: 400, Col: 77)
|————CursorKind.TYPE_REF: uintptr_t (Line: 400, Col: 67)
|——CursorKind.VAR_DECL: __security_cookie (Line: 404, Col: 18)
|———CursorKind.TYPE_REF: uintptr_t (Line: 404, Col: 8)
|—CursorKind.STATIC_ASSERT:  (Line: 908, Col: 1)
|——CursorKind.CXX_BOOL_LITERAL_EXPR:  (Line: 908, Col: 1)
|——CursorKind.STRING_LITERAL: "error STL1000: Unexpected compiler version, expected Clang 19.0.0 or newer." (Line: 908, Col: 1)
|—CursorKind.LINKAGE_SPEC:  (Line: 125, Col: 1)
|——CursorKind.LINKAGE_SPEC:  (Line: 254, Col: 8)
|———CursorKind.CLASS_TEMPLATE: _CrtEnableIf<_Enable, _Ty> (Line: 257, Col: 12)
|————CursorKind.TEMPLATE_NON_TYPE_PARAMETER: _Enable (Line: 256, Col: 19)
|————CursorKind.TEMPLATE_TYPE_PARAMETER: _Ty (Line: 256, Col: 37)
|———CursorKind.CLASS_TEMPLATE_PARTIAL_SPECIALIZATION: _CrtEnableIf<true, _Ty> (Line: 260, Col: 12)
|————CursorKind.TEMPLATE_TYPE_PARAMETER: _Ty (Line: 259, Col: 23)
|————CursorKind.CXX_BOOL_LITERAL_EXPR:  (Line: 260, Col: 25)
|————CursorKind.TYPE_REF: _Ty (Line: 260, Col: 31)
|————CursorKind.TYPEDEF_DECL: _Type (Line: 262, Col: 21)
|—————CursorKind.TYPE_REF: _Ty (Line: 262, Col: 17)
|——CursorKind.TYPEDEF_DECL: __crt_bool (Line: 268, Col: 19)
|——CursorKind.FUNCTION_DECL: _invalid_parameter_noinfo() (Line: 371, Col: 27)
|——CursorKind.FUNCTION_DECL: _invalid_parameter_noinfo_noreturn() (Line: 372, Col: 44)
|——CursorKind.FUNCTION_DECL: _invoke_watson(const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) (Line: 375, Col: 23)
|———CursorKind.PARM_DECL: _Expression (Line: 376, Col: 31)
|———CursorKind.PARM_DECL: _FunctionName (Line: 377, Col: 31)
|———CursorKind.PARM_DECL: _FileName (Line: 378, Col: 31)
|———CursorKind.PARM_DECL: _LineNo (Line: 379, Col: 29)
|———CursorKind.PARM_DECL: _Reserved (Line: 380, Col: 26)
|————CursorKind.TYPE_REF: uintptr_t (Line: 380, Col: 16)
|——CursorKind.TYPEDEF_DECL: errno_t (Line: 604, Col: 39)
|——CursorKind.TYPEDEF_DECL: wint_t (Line: 605, Col: 39)
|——CursorKind.TYPEDEF_DECL: wctype_t (Line: 606, Col: 39)
|——CursorKind.TYPEDEF_DECL: __time32_t (Line: 607, Col: 39)
|——CursorKind.TYPEDEF_DECL: __time64_t (Line: 608, Col: 39)
|——CursorKind.STRUCT_DECL: __crt_locale_data_public (Line: 610, Col: 16)
|———CursorKind.FIELD_DECL: _locale_pctype (Line: 612, Col: 29)
|———CursorKind.FIELD_DECL: _locale_mb_cur_max (Line: 613, Col: 29)
|———CursorKind.FIELD_DECL: _locale_lc_codepage (Line: 614, Col: 29)
|——CursorKind.TYPEDEF_DECL: __crt_locale_data_public (Line: 615, Col: 3)
|———CursorKind.STRUCT_DECL: __crt_locale_data_public (Line: 610, Col: 16)
|————CursorKind.FIELD_DECL: _locale_pctype (Line: 612, Col: 29)
|————CursorKind.FIELD_DECL: _locale_mb_cur_max (Line: 613, Col: 29)
|————CursorKind.FIELD_DECL: _locale_lc_codepage (Line: 614, Col: 29)
|——CursorKind.STRUCT_DECL: __crt_locale_pointers (Line: 617, Col: 16)
|———CursorKind.STRUCT_DECL: __crt_locale_data (Line: 619, Col: 12)
|———CursorKind.FIELD_DECL: locinfo (Line: 619, Col: 34)
|————CursorKind.TYPE_REF: struct __crt_locale_data (Line: 619, Col: 12)
|———CursorKind.STRUCT_DECL: __crt_multibyte_data (Line: 620, Col: 12)
|———CursorKind.FIELD_DECL: mbcinfo (Line: 620, Col: 34)
|————CursorKind.TYPE_REF: struct __crt_multibyte_data (Line: 620, Col: 12)
|——CursorKind.TYPEDEF_DECL: __crt_locale_pointers (Line: 621, Col: 3)
|———CursorKind.STRUCT_DECL: __crt_locale_pointers (Line: 617, Col: 16)
|————CursorKind.STRUCT_DECL: __crt_locale_data (Line: 619, Col: 12)
|————CursorKind.FIELD_DECL: locinfo (Line: 619, Col: 34)
|—————CursorKind.TYPE_REF: struct __crt_locale_data (Line: 619, Col: 12)
|————CursorKind.STRUCT_DECL: __crt_multibyte_data (Line: 620, Col: 12)
|————CursorKind.FIELD_DECL: mbcinfo (Line: 620, Col: 34)
|—————CursorKind.TYPE_REF: struct __crt_multibyte_data (Line: 620, Col: 12)
|——CursorKind.TYPEDEF_DECL: _locale_t (Line: 623, Col: 32)
|———CursorKind.TYPE_REF: __crt_locale_pointers (Line: 623, Col: 9)
|——CursorKind.STRUCT_DECL: _Mbstatet (Line: 625, Col: 16)
|———CursorKind.FIELD_DECL: _Wchar (Line: 627, Col: 19)
|———CursorKind.FIELD_DECL: _Byte (Line: 628, Col: 20)
|———CursorKind.FIELD_DECL: _State (Line: 628, Col: 27)
|——CursorKind.TYPEDEF_DECL: _Mbstatet (Line: 629, Col: 3)
|———CursorKind.STRUCT_DECL: _Mbstatet (Line: 625, Col: 16)
|————CursorKind.FIELD_DECL: _Wchar (Line: 627, Col: 19)
|————CursorKind.FIELD_DECL: _Byte (Line: 628, Col: 20)
|————CursorKind.FIELD_DECL: _State (Line: 628, Col: 27)
|——CursorKind.TYPEDEF_DECL: mbstate_t (Line: 631, Col: 19)
|———CursorKind.TYPE_REF: _Mbstatet (Line: 631, Col: 9)
|——CursorKind.TYPEDEF_DECL: time_t (Line: 645, Col: 28)
|———CursorKind.TYPE_REF: __time64_t (Line: 645, Col: 17)
|——CursorKind.TYPEDEF_DECL: rsize_t (Line: 655, Col: 20)
|———CursorKind.TYPE_REF: size_t (Line: 655, Col: 13)
|—CursorKind.LINKAGE_SPEC:  (Line: 18, Col: 1)
|——CursorKind.FUNCTION_DECL: _errno() (Line: 23, Col: 27)
|——CursorKind.FUNCTION_DECL: _set_errno(int) (Line: 26, Col: 30)
|———CursorKind.TYPE_REF: errno_t (Line: 26, Col: 14)
|———CursorKind.PARM_DECL: _Value (Line: 26, Col: 50)
|——CursorKind.FUNCTION_DECL: _get_errno(int *) (Line: 27, Col: 30)
|———CursorKind.TYPE_REF: errno_t (Line: 27, Col: 14)
|———CursorKind.PARM_DECL: _Value (Line: 27, Col: 52)
|——CursorKind.FUNCTION_DECL: __doserrno() (Line: 29, Col: 37)
|——CursorKind.FUNCTION_DECL: _set_doserrno(unsigned long) (Line: 32, Col: 30)
|———CursorKind.TYPE_REF: errno_t (Line: 32, Col: 14)
|———CursorKind.PARM_DECL: _Value (Line: 32, Col: 63)
|——CursorKind.FUNCTION_DECL: _get_doserrno(unsigned long *) (Line: 33, Col: 30)
|———CursorKind.TYPE_REF: errno_t (Line: 33, Col: 14)
|———CursorKind.PARM_DECL: _Value (Line: 33, Col: 66)
|—CursorKind.LINKAGE_SPEC:  (Line: 17, Col: 1)
|——CursorKind.FUNCTION_DECL: memchr(const void *, int, size_t) (Line: 22, Col: 38)
|———CursorKind.WARN_UNUSED_RESULT_ATTR:  (Line: 21, Col: 1)
|———CursorKind.PARM_DECL: _Buf (Line: 23, Col: 49)
|———CursorKind.PARM_DECL: _Val (Line: 24, Col: 49)
|———CursorKind.PARM_DECL: _MaxCount (Line: 25, Col: 49)
|————CursorKind.TYPE_REF: size_t (Line: 25, Col: 37)
|——CursorKind.FUNCTION_DECL: memcmp(const void *, const void *, size_t) (Line: 29, Col: 13)
|———CursorKind.WARN_UNUSED_RESULT_ATTR:  (Line: 28, Col: 1)
|———CursorKind.PARM_DECL: _Buf1 (Line: 30, Col: 41)
|———CursorKind.PARM_DECL: _Buf2 (Line: 31, Col: 41)
|———CursorKind.PARM_DECL: _Size (Line: 32, Col: 41)
|————CursorKind.TYPE_REF: size_t (Line: 32, Col: 29)
|——CursorKind.FUNCTION_DECL: memcpy(void *, const void *, size_t) (Line: 43, Col: 15)
|———CursorKind.PARM_DECL: _Dst (Line: 44, Col: 41)
|———CursorKind.PARM_DECL: _Src (Line: 45, Col: 47)
|———CursorKind.PARM_DECL: _Size (Line: 46, Col: 47)
|————CursorKind.TYPE_REF: size_t (Line: 46, Col: 35)
|——CursorKind.FUNCTION_DECL: memmove(void *, const void *, size_t) (Line: 50, Col: 24)
|———CursorKind.PARM_DECL: _Dst (Line: 51, Col: 51)
|———CursorKind.PARM_DECL: _Src (Line: 52, Col: 51)
|———CursorKind.PARM_DECL: _Size (Line: 53, Col: 51)
|————CursorKind.TYPE_REF: size_t (Line: 53, Col: 39)
|——CursorKind.FUNCTION_DECL: memset(void *, int, size_t) (Line: 63, Col: 15)
|———CursorKind.PARM_DECL: _Dst (Line: 64, Col: 42)
|———CursorKind.PARM_DECL: _Val (Line: 65, Col: 42)
|———CursorKind.PARM_DECL: _Size (Line: 66, Col: 42)
|————CursorKind.TYPE_REF: size_t (Line: 66, Col: 35)
|——CursorKind.FUNCTION_DECL: strchr(const char *, int) (Line: 70, Col: 38)
|———CursorKind.WARN_UNUSED_RESULT_ATTR:  (Line: 69, Col: 1)
|———CursorKind.PARM_DECL: _Str (Line: 71, Col: 24)
|———CursorKind.PARM_DECL: _Val (Line: 72, Col: 24)
|——CursorKind.FUNCTION_DECL: strrchr(const char *, int) (Line: 76, Col: 38)
|———CursorKind.WARN_UNUSED_RESULT_ATTR:  (Line: 75, Col: 1)
|———CursorKind.PARM_DECL: _Str (Line: 77, Col: 24)
|———CursorKind.PARM_DECL: _Ch (Line: 78, Col: 24)
|——CursorKind.FUNCTION_DECL: strstr(const char *, const char *) (Line: 82, Col: 38)
|———CursorKind.WARN_UNUSED_RESULT_ATTR:  (Line: 81, Col: 1)
|———CursorKind.PARM_DECL: _Str (Line: 83, Col: 24)
|———CursorKind.PARM_DECL: _SubStr (Line: 84, Col: 24)
|——CursorKind.FUNCTION_DECL: wcschr(const wchar_t *, wchar_t) (Line: 89, Col: 41)
|———CursorKind.WARN_UNUSED_RESULT_ATTR:  (Line: 87, Col: 1)
|———CursorKind.PARM_DECL: _Str (Line: 90, Col: 27)
|———CursorKind.PARM_DECL: _Ch (Line: 91, Col: 27)
|——CursorKind.FUNCTION_DECL: wcsrchr(const wchar_t *, wchar_t) (Line: 95, Col: 41)
|———CursorKind.WARN_UNUSED_RESULT_ATTR:  (Line: 94, Col: 1)
|———CursorKind.PARM_DECL: _Str (Line: 96, Col: 27)
|———CursorKind.PARM_DECL: _Ch (Line: 97, Col: 27)
|——CursorKind.FUNCTION_DECL: wcsstr(const wchar_t *, const wchar_t *) (Line: 102, Col: 41)
|———CursorKind.WARN_UNUSED_RESULT_ATTR:  (Line: 100, Col: 1)
|———CursorKind.PARM_DECL: _Str (Line: 103, Col: 27)
|———CursorKind.PARM_DECL: _SubStr (Line: 104, Col: 27)
|—CursorKind.LINKAGE_SPEC:  (Line: 18, Col: 1)
|——CursorKind.FUNCTION_DECL: memcpy_s(void *const, const rsize_t, const void *const, const rsize_t) (Line: 39, Col: 44)
|———CursorKind.TYPE_REF: errno_t (Line: 39, Col: 26)
|———CursorKind.PARM_DECL: _Destination (Line: 40, Col: 84)
|———CursorKind.PARM_DECL: _DestinationSize (Line: 41, Col: 84)
|————CursorKind.TYPE_REF: rsize_t (Line: 41, Col: 66)
|———CursorKind.PARM_DECL: _Source (Line: 42, Col: 84)
|———CursorKind.PARM_DECL: _SourceSize (Line: 43, Col: 84)
|————CursorKind.TYPE_REF: rsize_t (Line: 43, Col: 66)
|———CursorKind.COMPOUND_STMT:  (Line: 45, Col: 5)
|————CursorKind.IF_STMT:  (Line: 46, Col: 9)
|—————CursorKind.BINARY_OPERATOR:  (Line: 46, Col: 13)
|——————CursorKind.UNEXPOSED_EXPR: _SourceSize (Line: 46, Col: 13)
|———————CursorKind.DECL_REF_EXPR: _SourceSize (Line: 46, Col: 13)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 46, Col: 28)
|———————CursorKind.INTEGER_LITERAL:  (Line: 46, Col: 28)
|—————CursorKind.COMPOUND_STMT:  (Line: 47, Col: 9)
|——————CursorKind.RETURN_STMT:  (Line: 48, Col: 13)
|———————CursorKind.INTEGER_LITERAL:  (Line: 48, Col: 20)
|————CursorKind.COMPOUND_STMT:  (Line: 51, Col: 9)
|—————CursorKind.DECL_STMT:  (Line: 51, Col: 9)
|——————CursorKind.VAR_DECL: _Expr_val (Line: 51, Col: 9)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 51, Col: 9)
|————————CursorKind.UNARY_OPERATOR:  (Line: 51, Col: 9)
|—————————CursorKind.UNARY_OPERATOR:  (Line: 51, Col: 9)
|——————————CursorKind.PAREN_EXPR:  (Line: 51, Col: 9)
|———————————CursorKind.BINARY_OPERATOR:  (Line: 51, Col: 9)
|————————————CursorKind.UNEXPOSED_EXPR: _Destination (Line: 51, Col: 9)
|—————————————CursorKind.DECL_REF_EXPR: _Destination (Line: 51, Col: 9)
|————————————CursorKind.UNEXPOSED_EXPR:  (Line: 51, Col: 9)
|—————————————CursorKind.INTEGER_LITERAL:  (Line: 51, Col: 9)
|—————CursorKind.IF_STMT:  (Line: 51, Col: 9)
|——————CursorKind.UNARY_OPERATOR:  (Line: 51, Col: 9)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 51, Col: 9)
|————————CursorKind.UNEXPOSED_EXPR:  (Line: 51, Col: 9)
|—————————CursorKind.PAREN_EXPR:  (Line: 51, Col: 9)
|——————————CursorKind.DECL_REF_EXPR: _Expr_val (Line: 51, Col: 9)
|——————CursorKind.COMPOUND_STMT:  (Line: 51, Col: 9)
|———————CursorKind.BINARY_OPERATOR:  (Line: 51, Col: 9)
|————————CursorKind.PAREN_EXPR:  (Line: 51, Col: 9)
|—————————CursorKind.UNARY_OPERATOR:  (Line: 51, Col: 9)
|——————————CursorKind.CALL_EXPR: _errno (Line: 51, Col: 9)
|———————————CursorKind.UNEXPOSED_EXPR: _errno (Line: 51, Col: 9)
|————————————CursorKind.DECL_REF_EXPR: _errno (Line: 51, Col: 9)
|————————CursorKind.INTEGER_LITERAL:  (Line: 51, Col: 9)
|———————CursorKind.CALL_EXPR: _invalid_parameter_noinfo (Line: 51, Col: 9)
|————————CursorKind.UNEXPOSED_EXPR: _invalid_parameter_noinfo (Line: 51, Col: 9)
|—————————CursorKind.DECL_REF_EXPR: _invalid_parameter_noinfo (Line: 51, Col: 9)
|———————CursorKind.RETURN_STMT:  (Line: 51, Col: 9)
|————————CursorKind.INTEGER_LITERAL:  (Line: 51, Col: 9)
|————CursorKind.NULL_STMT:  (Line: 51, Col: 76)
|————CursorKind.IF_STMT:  (Line: 52, Col: 9)
|—————CursorKind.BINARY_OPERATOR:  (Line: 52, Col: 13)
|——————CursorKind.BINARY_OPERATOR:  (Line: 52, Col: 13)
|———————CursorKind.UNEXPOSED_EXPR: _Source (Line: 52, Col: 13)
|————————CursorKind.DECL_REF_EXPR: _Source (Line: 52, Col: 13)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 52, Col: 24)
|————————CursorKind.INTEGER_LITERAL:  (Line: 52, Col: 24)
|——————CursorKind.BINARY_OPERATOR:  (Line: 52, Col: 32)
|———————CursorKind.UNEXPOSED_EXPR: _DestinationSize (Line: 52, Col: 32)
|————————CursorKind.DECL_REF_EXPR: _DestinationSize (Line: 52, Col: 32)
|———————CursorKind.UNEXPOSED_EXPR: _SourceSize (Line: 52, Col: 51)
|————————CursorKind.DECL_REF_EXPR: _SourceSize (Line: 52, Col: 51)
|—————CursorKind.COMPOUND_STMT:  (Line: 53, Col: 9)
|——————CursorKind.CALL_EXPR: memset (Line: 54, Col: 13)
|———————CursorKind.UNEXPOSED_EXPR: memset (Line: 54, Col: 13)
|————————CursorKind.DECL_REF_EXPR: memset (Line: 54, Col: 13)
|———————CursorKind.UNEXPOSED_EXPR: _Destination (Line: 54, Col: 20)
|————————CursorKind.DECL_REF_EXPR: _Destination (Line: 54, Col: 20)
|———————CursorKind.INTEGER_LITERAL:  (Line: 54, Col: 34)
|———————CursorKind.UNEXPOSED_EXPR: _DestinationSize (Line: 54, Col: 37)
|————————CursorKind.DECL_REF_EXPR: _DestinationSize (Line: 54, Col: 37)
|——————CursorKind.COMPOUND_STMT:  (Line: 56, Col: 13)
|———————CursorKind.DECL_STMT:  (Line: 56, Col: 13)
|————————CursorKind.VAR_DECL: _Expr_val (Line: 56, Col: 13)
|—————————CursorKind.UNEXPOSED_EXPR:  (Line: 56, Col: 13)
|——————————CursorKind.UNARY_OPERATOR:  (Line: 56, Col: 13)
|———————————CursorKind.UNARY_OPERATOR:  (Line: 56, Col: 13)
|————————————CursorKind.PAREN_EXPR:  (Line: 56, Col: 13)
|—————————————CursorKind.BINARY_OPERATOR:  (Line: 56, Col: 13)
|——————————————CursorKind.UNEXPOSED_EXPR: _Source (Line: 56, Col: 13)
|———————————————CursorKind.DECL_REF_EXPR: _Source (Line: 56, Col: 13)
|——————————————CursorKind.UNEXPOSED_EXPR:  (Line: 56, Col: 13)
|———————————————CursorKind.INTEGER_LITERAL:  (Line: 56, Col: 13)
|———————CursorKind.IF_STMT:  (Line: 56, Col: 13)
|————————CursorKind.UNARY_OPERATOR:  (Line: 56, Col: 13)
|—————————CursorKind.UNEXPOSED_EXPR:  (Line: 56, Col: 13)
|——————————CursorKind.UNEXPOSED_EXPR:  (Line: 56, Col: 13)
|———————————CursorKind.PAREN_EXPR:  (Line: 56, Col: 13)
|————————————CursorKind.DECL_REF_EXPR: _Expr_val (Line: 56, Col: 13)
|————————CursorKind.COMPOUND_STMT:  (Line: 56, Col: 13)
|—————————CursorKind.BINARY_OPERATOR:  (Line: 56, Col: 13)
|——————————CursorKind.PAREN_EXPR:  (Line: 56, Col: 13)
|———————————CursorKind.UNARY_OPERATOR:  (Line: 56, Col: 13)
|————————————CursorKind.CALL_EXPR: _errno (Line: 56, Col: 13)
|—————————————CursorKind.UNEXPOSED_EXPR: _errno (Line: 56, Col: 13)
|——————————————CursorKind.DECL_REF_EXPR: _errno (Line: 56, Col: 13)
|——————————CursorKind.INTEGER_LITERAL:  (Line: 56, Col: 13)
|—————————CursorKind.CALL_EXPR: _invalid_parameter_noinfo (Line: 56, Col: 13)
|——————————CursorKind.UNEXPOSED_EXPR: _invalid_parameter_noinfo (Line: 56, Col: 13)
|———————————CursorKind.DECL_REF_EXPR: _invalid_parameter_noinfo (Line: 56, Col: 13)
|—————————CursorKind.RETURN_STMT:  (Line: 56, Col: 13)
|——————————CursorKind.INTEGER_LITERAL:  (Line: 56, Col: 13)
|——————CursorKind.NULL_STMT:  (Line: 56, Col: 91)
|——————CursorKind.COMPOUND_STMT:  (Line: 57, Col: 13)
|———————CursorKind.DECL_STMT:  (Line: 57, Col: 13)
|————————CursorKind.VAR_DECL: _Expr_val (Line: 57, Col: 13)
|—————————CursorKind.UNEXPOSED_EXPR:  (Line: 57, Col: 13)
|——————————CursorKind.UNARY_OPERATOR:  (Line: 57, Col: 13)
|———————————CursorKind.UNARY_OPERATOR:  (Line: 57, Col: 13)
|————————————CursorKind.PAREN_EXPR:  (Line: 57, Col: 13)
|—————————————CursorKind.BINARY_OPERATOR:  (Line: 57, Col: 13)
|——————————————CursorKind.UNEXPOSED_EXPR: _DestinationSize (Line: 57, Col: 13)
|———————————————CursorKind.DECL_REF_EXPR: _DestinationSize (Line: 57, Col: 13)
|——————————————CursorKind.UNEXPOSED_EXPR: _SourceSize (Line: 57, Col: 13)
|———————————————CursorKind.DECL_REF_EXPR: _SourceSize (Line: 57, Col: 13)
|———————CursorKind.IF_STMT:  (Line: 57, Col: 13)
|————————CursorKind.UNARY_OPERATOR:  (Line: 57, Col: 13)
|—————————CursorKind.UNEXPOSED_EXPR:  (Line: 57, Col: 13)
|——————————CursorKind.UNEXPOSED_EXPR:  (Line: 57, Col: 13)
|———————————CursorKind.PAREN_EXPR:  (Line: 57, Col: 13)
|————————————CursorKind.DECL_REF_EXPR: _Expr_val (Line: 57, Col: 13)
|————————CursorKind.COMPOUND_STMT:  (Line: 57, Col: 13)
|—————————CursorKind.BINARY_OPERATOR:  (Line: 57, Col: 13)
|——————————CursorKind.PAREN_EXPR:  (Line: 57, Col: 13)
|———————————CursorKind.UNARY_OPERATOR:  (Line: 57, Col: 13)
|————————————CursorKind.CALL_EXPR: _errno (Line: 57, Col: 13)
|—————————————CursorKind.UNEXPOSED_EXPR: _errno (Line: 57, Col: 13)
|——————————————CursorKind.DECL_REF_EXPR: _errno (Line: 57, Col: 13)
|——————————CursorKind.INTEGER_LITERAL:  (Line: 57, Col: 13)
|—————————CursorKind.CALL_EXPR: _invalid_parameter_noinfo (Line: 57, Col: 13)
|——————————CursorKind.UNEXPOSED_EXPR: _invalid_parameter_noinfo (Line: 57, Col: 13)
|———————————CursorKind.DECL_REF_EXPR: _invalid_parameter_noinfo (Line: 57, Col: 13)
|—————————CursorKind.RETURN_STMT:  (Line: 57, Col: 13)
|——————————CursorKind.INTEGER_LITERAL:  (Line: 57, Col: 13)
|——————CursorKind.NULL_STMT:  (Line: 57, Col: 91)
|——————CursorKind.RETURN_STMT:  (Line: 60, Col: 13)
|———————CursorKind.INTEGER_LITERAL:  (Line: 60, Col: 20)
|————CursorKind.CALL_EXPR: memcpy (Line: 62, Col: 9)
|—————CursorKind.UNEXPOSED_EXPR: memcpy (Line: 62, Col: 9)
|——————CursorKind.DECL_REF_EXPR: memcpy (Line: 62, Col: 9)
|—————CursorKind.UNEXPOSED_EXPR: _Destination (Line: 62, Col: 16)
|——————CursorKind.DECL_REF_EXPR: _Destination (Line: 62, Col: 16)
|—————CursorKind.UNEXPOSED_EXPR: _Source (Line: 62, Col: 30)
|——————CursorKind.DECL_REF_EXPR: _Source (Line: 62, Col: 30)
|—————CursorKind.UNEXPOSED_EXPR: _SourceSize (Line: 62, Col: 39)
|——————CursorKind.DECL_REF_EXPR: _SourceSize (Line: 62, Col: 39)
|————CursorKind.RETURN_STMT:  (Line: 63, Col: 9)
|—————CursorKind.INTEGER_LITERAL:  (Line: 63, Col: 16)
|——CursorKind.FUNCTION_DECL: memmove_s(void *const, const rsize_t, const void *const, const rsize_t) (Line: 67, Col: 44)
|———CursorKind.TYPE_REF: errno_t (Line: 67, Col: 26)
|———CursorKind.PARM_DECL: _Destination (Line: 68, Col: 84)
|———CursorKind.PARM_DECL: _DestinationSize (Line: 69, Col: 84)
|————CursorKind.TYPE_REF: rsize_t (Line: 69, Col: 66)
|———CursorKind.PARM_DECL: _Source (Line: 70, Col: 84)
|———CursorKind.PARM_DECL: _SourceSize (Line: 71, Col: 84)
|————CursorKind.TYPE_REF: rsize_t (Line: 71, Col: 66)
|———CursorKind.COMPOUND_STMT:  (Line: 73, Col: 5)
|————CursorKind.IF_STMT:  (Line: 74, Col: 9)
|—————CursorKind.BINARY_OPERATOR:  (Line: 74, Col: 13)
|——————CursorKind.UNEXPOSED_EXPR: _SourceSize (Line: 74, Col: 13)
|———————CursorKind.DECL_REF_EXPR: _SourceSize (Line: 74, Col: 13)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 74, Col: 28)
|———————CursorKind.INTEGER_LITERAL:  (Line: 74, Col: 28)
|—————CursorKind.COMPOUND_STMT:  (Line: 75, Col: 9)
|——————CursorKind.RETURN_STMT:  (Line: 76, Col: 13)
|———————CursorKind.INTEGER_LITERAL:  (Line: 76, Col: 20)
|————CursorKind.COMPOUND_STMT:  (Line: 79, Col: 9)
|—————CursorKind.DECL_STMT:  (Line: 79, Col: 9)
|——————CursorKind.VAR_DECL: _Expr_val (Line: 79, Col: 9)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 79, Col: 9)
|————————CursorKind.UNARY_OPERATOR:  (Line: 79, Col: 9)
|—————————CursorKind.UNARY_OPERATOR:  (Line: 79, Col: 9)
|——————————CursorKind.PAREN_EXPR:  (Line: 79, Col: 9)
|———————————CursorKind.BINARY_OPERATOR:  (Line: 79, Col: 9)
|————————————CursorKind.UNEXPOSED_EXPR: _Destination (Line: 79, Col: 9)
|—————————————CursorKind.DECL_REF_EXPR: _Destination (Line: 79, Col: 9)
|————————————CursorKind.UNEXPOSED_EXPR:  (Line: 79, Col: 9)
|—————————————CursorKind.INTEGER_LITERAL:  (Line: 79, Col: 9)
|—————CursorKind.IF_STMT:  (Line: 79, Col: 9)
|——————CursorKind.UNARY_OPERATOR:  (Line: 79, Col: 9)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 79, Col: 9)
|————————CursorKind.UNEXPOSED_EXPR:  (Line: 79, Col: 9)
|—————————CursorKind.PAREN_EXPR:  (Line: 79, Col: 9)
|——————————CursorKind.DECL_REF_EXPR: _Expr_val (Line: 79, Col: 9)
|——————CursorKind.COMPOUND_STMT:  (Line: 79, Col: 9)
|———————CursorKind.BINARY_OPERATOR:  (Line: 79, Col: 9)
|————————CursorKind.PAREN_EXPR:  (Line: 79, Col: 9)
|—————————CursorKind.UNARY_OPERATOR:  (Line: 79, Col: 9)
|——————————CursorKind.CALL_EXPR: _errno (Line: 79, Col: 9)
|———————————CursorKind.UNEXPOSED_EXPR: _errno (Line: 79, Col: 9)
|————————————CursorKind.DECL_REF_EXPR: _errno (Line: 79, Col: 9)
|————————CursorKind.INTEGER_LITERAL:  (Line: 79, Col: 9)
|———————CursorKind.CALL_EXPR: _invalid_parameter_noinfo (Line: 79, Col: 9)
|————————CursorKind.UNEXPOSED_EXPR: _invalid_parameter_noinfo (Line: 79, Col: 9)
|—————————CursorKind.DECL_REF_EXPR: _invalid_parameter_noinfo (Line: 79, Col: 9)
|———————CursorKind.RETURN_STMT:  (Line: 79, Col: 9)
|————————CursorKind.INTEGER_LITERAL:  (Line: 79, Col: 9)
|————CursorKind.NULL_STMT:  (Line: 79, Col: 87)
|————CursorKind.COMPOUND_STMT:  (Line: 80, Col: 9)
|—————CursorKind.DECL_STMT:  (Line: 80, Col: 9)
|——————CursorKind.VAR_DECL: _Expr_val (Line: 80, Col: 9)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 80, Col: 9)
|————————CursorKind.UNARY_OPERATOR:  (Line: 80, Col: 9)
|—————————CursorKind.UNARY_OPERATOR:  (Line: 80, Col: 9)
|——————————CursorKind.PAREN_EXPR:  (Line: 80, Col: 9)
|———————————CursorKind.BINARY_OPERATOR:  (Line: 80, Col: 9)
|————————————CursorKind.UNEXPOSED_EXPR: _Source (Line: 80, Col: 9)
|—————————————CursorKind.DECL_REF_EXPR: _Source (Line: 80, Col: 9)
|————————————CursorKind.UNEXPOSED_EXPR:  (Line: 80, Col: 9)
|—————————————CursorKind.INTEGER_LITERAL:  (Line: 80, Col: 9)
|—————CursorKind.IF_STMT:  (Line: 80, Col: 9)
|——————CursorKind.UNARY_OPERATOR:  (Line: 80, Col: 9)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 80, Col: 9)
|————————CursorKind.UNEXPOSED_EXPR:  (Line: 80, Col: 9)
|—————————CursorKind.PAREN_EXPR:  (Line: 80, Col: 9)
|——————————CursorKind.DECL_REF_EXPR: _Expr_val (Line: 80, Col: 9)
|——————CursorKind.COMPOUND_STMT:  (Line: 80, Col: 9)
|———————CursorKind.BINARY_OPERATOR:  (Line: 80, Col: 9)
|————————CursorKind.PAREN_EXPR:  (Line: 80, Col: 9)
|—————————CursorKind.UNARY_OPERATOR:  (Line: 80, Col: 9)
|——————————CursorKind.CALL_EXPR: _errno (Line: 80, Col: 9)
|———————————CursorKind.UNEXPOSED_EXPR: _errno (Line: 80, Col: 9)
|————————————CursorKind.DECL_REF_EXPR: _errno (Line: 80, Col: 9)
|————————CursorKind.INTEGER_LITERAL:  (Line: 80, Col: 9)
|———————CursorKind.CALL_EXPR: _invalid_parameter_noinfo (Line: 80, Col: 9)
|————————CursorKind.UNEXPOSED_EXPR: _invalid_parameter_noinfo (Line: 80, Col: 9)
|—————————CursorKind.DECL_REF_EXPR: _invalid_parameter_noinfo (Line: 80, Col: 9)
|———————CursorKind.RETURN_STMT:  (Line: 80, Col: 9)
|————————CursorKind.INTEGER_LITERAL:  (Line: 80, Col: 9)
|————CursorKind.NULL_STMT:  (Line: 80, Col: 87)
|————CursorKind.COMPOUND_STMT:  (Line: 81, Col: 9)
|—————CursorKind.DECL_STMT:  (Line: 81, Col: 9)
|——————CursorKind.VAR_DECL: _Expr_val (Line: 81, Col: 9)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 81, Col: 9)
|————————CursorKind.UNARY_OPERATOR:  (Line: 81, Col: 9)
|—————————CursorKind.UNARY_OPERATOR:  (Line: 81, Col: 9)
|——————————CursorKind.PAREN_EXPR:  (Line: 81, Col: 9)
|———————————CursorKind.BINARY_OPERATOR:  (Line: 81, Col: 9)
|————————————CursorKind.UNEXPOSED_EXPR: _DestinationSize (Line: 81, Col: 9)
|—————————————CursorKind.DECL_REF_EXPR: _DestinationSize (Line: 81, Col: 9)
|————————————CursorKind.UNEXPOSED_EXPR: _SourceSize (Line: 81, Col: 9)
|—————————————CursorKind.DECL_REF_EXPR: _SourceSize (Line: 81, Col: 9)
|—————CursorKind.IF_STMT:  (Line: 81, Col: 9)
|——————CursorKind.UNARY_OPERATOR:  (Line: 81, Col: 9)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 81, Col: 9)
|————————CursorKind.UNEXPOSED_EXPR:  (Line: 81, Col: 9)
|—————————CursorKind.PAREN_EXPR:  (Line: 81, Col: 9)
|——————————CursorKind.DECL_REF_EXPR: _Expr_val (Line: 81, Col: 9)
|——————CursorKind.COMPOUND_STMT:  (Line: 81, Col: 9)
|———————CursorKind.BINARY_OPERATOR:  (Line: 81, Col: 9)
|————————CursorKind.PAREN_EXPR:  (Line: 81, Col: 9)
|—————————CursorKind.UNARY_OPERATOR:  (Line: 81, Col: 9)
|——————————CursorKind.CALL_EXPR: _errno (Line: 81, Col: 9)
|———————————CursorKind.UNEXPOSED_EXPR: _errno (Line: 81, Col: 9)
|————————————CursorKind.DECL_REF_EXPR: _errno (Line: 81, Col: 9)
|————————CursorKind.INTEGER_LITERAL:  (Line: 81, Col: 9)
|———————CursorKind.CALL_EXPR: _invalid_parameter_noinfo (Line: 81, Col: 9)
|————————CursorKind.UNEXPOSED_EXPR: _invalid_parameter_noinfo (Line: 81, Col: 9)
|—————————CursorKind.DECL_REF_EXPR: _invalid_parameter_noinfo (Line: 81, Col: 9)
|———————CursorKind.RETURN_STMT:  (Line: 81, Col: 9)
|————————CursorKind.INTEGER_LITERAL:  (Line: 81, Col: 9)
|————CursorKind.NULL_STMT:  (Line: 81, Col: 87)
|————CursorKind.CALL_EXPR: memmove (Line: 83, Col: 9)
|—————CursorKind.UNEXPOSED_EXPR: memmove (Line: 83, Col: 9)
|——————CursorKind.DECL_REF_EXPR: memmove (Line: 83, Col: 9)
|—————CursorKind.UNEXPOSED_EXPR: _Destination (Line: 83, Col: 17)
|——————CursorKind.DECL_REF_EXPR: _Destination (Line: 83, Col: 17)
|—————CursorKind.UNEXPOSED_EXPR: _Source (Line: 83, Col: 31)
|——————CursorKind.DECL_REF_EXPR: _Source (Line: 83, Col: 31)
|—————CursorKind.UNEXPOSED_EXPR: _SourceSize (Line: 83, Col: 40)
|——————CursorKind.DECL_REF_EXPR: _SourceSize (Line: 83, Col: 40)
|————CursorKind.RETURN_STMT:  (Line: 84, Col: 9)
|—————CursorKind.INTEGER_LITERAL:  (Line: 84, Col: 16)
|—CursorKind.LINKAGE_SPEC:  (Line: 23, Col: 1)
|——CursorKind.FUNCTION_DECL: _memicmp(const void *, const void *, size_t) (Line: 28, Col: 22)
|———CursorKind.PARM_DECL: _Buf1 (Line: 29, Col: 45)
|———CursorKind.PARM_DECL: _Buf2 (Line: 30, Col: 45)
|———CursorKind.PARM_DECL: _Size (Line: 31, Col: 45)
|————CursorKind.TYPE_REF: size_t (Line: 31, Col: 33)
|——CursorKind.FUNCTION_DECL: _memicmp_l(const void *, const void *, size_t, _locale_t) (Line: 35, Col: 22)
|———CursorKind.PARM_DECL: _Buf1 (Line: 36, Col: 45)
|———CursorKind.PARM_DECL: _Buf2 (Line: 37, Col: 45)
|———CursorKind.PARM_DECL: _Size (Line: 38, Col: 45)
|————CursorKind.TYPE_REF: size_t (Line: 38, Col: 33)
|———CursorKind.PARM_DECL: _Locale (Line: 39, Col: 45)
|————CursorKind.TYPE_REF: _locale_t (Line: 39, Col: 33)
|——CursorKind.FUNCTION_DECL: memccpy(void *, const void *, int, size_t) (Line: 83, Col: 28)
|———CursorKind.UNEXPOSED_ATTR:  (Line: 82, Col: 5)
|———CursorKind.PARM_DECL: _Dst (Line: 84, Col: 51)
|———CursorKind.PARM_DECL: _Src (Line: 85, Col: 51)
|———CursorKind.PARM_DECL: _Val (Line: 86, Col: 51)
|———CursorKind.PARM_DECL: _Size (Line: 87, Col: 51)
|————CursorKind.TYPE_REF: size_t (Line: 87, Col: 39)
|——CursorKind.FUNCTION_DECL: memicmp(const void *, const void *, size_t) (Line: 91, Col: 26)
|———CursorKind.UNEXPOSED_ATTR:  (Line: 90, Col: 20)
|———CursorKind.PARM_DECL: _Buf1 (Line: 92, Col: 49)
|———CursorKind.PARM_DECL: _Buf2 (Line: 93, Col: 49)
|———CursorKind.PARM_DECL: _Size (Line: 94, Col: 49)
|————CursorKind.TYPE_REF: size_t (Line: 94, Col: 37)
|——CursorKind.LINKAGE_SPEC:  (Line: 103, Col: 12)
|———CursorKind.FUNCTION_DECL: memchr(void *, int, size_t) (Line: 104, Col: 28)
|————CursorKind.PARM_DECL: _Pv (Line: 105, Col: 41)
|————CursorKind.PARM_DECL: _C (Line: 106, Col: 41)
|————CursorKind.PARM_DECL: _N (Line: 107, Col: 41)
|—————CursorKind.TYPE_REF: size_t (Line: 107, Col: 34)
|————CursorKind.COMPOUND_STMT:  (Line: 109, Col: 5)
|—————CursorKind.DECL_STMT:  (Line: 110, Col: 9)
|——————CursorKind.VAR_DECL: _Pvc (Line: 110, Col: 27)
|———————CursorKind.UNEXPOSED_EXPR: _Pv (Line: 110, Col: 34)
|————————CursorKind.UNEXPOSED_EXPR: _Pv (Line: 110, Col: 34)
|—————————CursorKind.DECL_REF_EXPR: _Pv (Line: 110, Col: 34)
|—————CursorKind.RETURN_STMT:  (Line: 111, Col: 9)
|——————CursorKind.CXX_CONST_CAST_EXPR:  (Line: 111, Col: 16)
|———————CursorKind.CALL_EXPR: memchr (Line: 111, Col: 34)
|————————CursorKind.UNEXPOSED_EXPR: memchr (Line: 111, Col: 34)
|—————————CursorKind.DECL_REF_EXPR: memchr (Line: 111, Col: 34)
|————————CursorKind.UNEXPOSED_EXPR: _Pvc (Line: 111, Col: 41)
|—————————CursorKind.DECL_REF_EXPR: _Pvc (Line: 111, Col: 41)
|————————CursorKind.UNEXPOSED_EXPR: _C (Line: 111, Col: 47)
|—————————CursorKind.DECL_REF_EXPR: _C (Line: 111, Col: 47)
|————————CursorKind.UNEXPOSED_EXPR: _N (Line: 111, Col: 51)
|—————————CursorKind.DECL_REF_EXPR: _N (Line: 111, Col: 51)
|—CursorKind.LINKAGE_SPEC:  (Line: 20, Col: 1)
|——CursorKind.FUNCTION_DECL: wcscat_s(wchar_t *, rsize_t, const wchar_t *) (Line: 32, Col: 30)
|———CursorKind.TYPE_REF: errno_t (Line: 32, Col: 14)
|———CursorKind.PARM_DECL: _Destination (Line: 33, Col: 50)
|———CursorKind.PARM_DECL: _SizeInWords (Line: 34, Col: 22)
|————CursorKind.TYPE_REF: rsize_t (Line: 34, Col: 14)
|———CursorKind.PARM_DECL: _Source (Line: 35, Col: 31)
|——CursorKind.FUNCTION_DECL: wcscpy_s(wchar_t *, rsize_t, const wchar_t *) (Line: 39, Col: 30)
|———CursorKind.TYPE_REF: errno_t (Line: 39, Col: 14)
|———CursorKind.PARM_DECL: _Destination (Line: 40, Col: 47)
|———CursorKind.PARM_DECL: _SizeInWords (Line: 41, Col: 22)
|————CursorKind.TYPE_REF: rsize_t (Line: 41, Col: 14)
|———CursorKind.PARM_DECL: _Source (Line: 42, Col: 31)
|——CursorKind.FUNCTION_DECL: wcsncat_s(wchar_t *, rsize_t, const wchar_t *, rsize_t) (Line: 46, Col: 30)
|———CursorKind.TYPE_REF: errno_t (Line: 46, Col: 14)
|———CursorKind.PARM_DECL: _Destination (Line: 47, Col: 56)
|———CursorKind.PARM_DECL: _SizeInWords (Line: 48, Col: 56)
|————CursorKind.TYPE_REF: rsize_t (Line: 48, Col: 41)
|———CursorKind.PARM_DECL: _Source (Line: 49, Col: 56)
|———CursorKind.PARM_DECL: _MaxCount (Line: 50, Col: 56)
|————CursorKind.TYPE_REF: rsize_t (Line: 50, Col: 41)
|——CursorKind.FUNCTION_DECL: wcsncpy_s(wchar_t *, rsize_t, const wchar_t *, rsize_t) (Line: 54, Col: 30)
|———CursorKind.TYPE_REF: errno_t (Line: 54, Col: 14)
|———CursorKind.PARM_DECL: _Destination (Line: 55, Col: 53)
|———CursorKind.PARM_DECL: _SizeInWords (Line: 56, Col: 53)
|————CursorKind.TYPE_REF: rsize_t (Line: 56, Col: 38)
|———CursorKind.PARM_DECL: _Source (Line: 57, Col: 53)
|———CursorKind.PARM_DECL: _MaxCount (Line: 58, Col: 53)
|————CursorKind.TYPE_REF: rsize_t (Line: 58, Col: 38)
|——CursorKind.FUNCTION_DECL: wcstok_s(wchar_t *, const wchar_t *, wchar_t **) (Line: 62, Col: 31)
|———CursorKind.PARM_DECL: _String (Line: 63, Col: 54)
|———CursorKind.PARM_DECL: _Delimiter (Line: 64, Col: 54)
|———CursorKind.PARM_DECL: _Context (Line: 65, Col: 54)
|——CursorKind.FUNCTION_DECL: _wcsdup(const wchar_t *) (Line: 83, Col: 41)
|———CursorKind.UNEXPOSED_ATTR:  (Line: 83, Col: 10)
|———CursorKind.PARM_DECL: _String (Line: 84, Col: 27)
|——CursorKind.LINKAGE_SPEC:  (Line: 93, Col: 1)
|———CursorKind.FUNCTION_TEMPLATE: wcscat_s(wchar_t (&)[_Size], const wchar_t *) (Line: 93, Col: 1)
|————CursorKind.TEMPLATE_NON_TYPE_PARAMETER: _Size (Line: 93, Col: 1)
|—————CursorKind.TYPE_REF: size_t (Line: 93, Col: 1)
|————CursorKind.TYPE_REF: errno_t (Line: 93, Col: 1)
|————CursorKind.PARM_DECL: _Destination (Line: 93, Col: 1)
|—————CursorKind.DECL_REF_EXPR: _Size (Line: 93, Col: 1)
|————CursorKind.PARM_DECL: _Source (Line: 93, Col: 1)
|——CursorKind.FUNCTION_DECL: wcscat(wchar_t *, const wchar_t *) (Line: 100, Col: 5)
|———CursorKind.UNEXPOSED_ATTR:  (Line: 100, Col: 5)
|———CursorKind.PARM_DECL: _Destination (Line: 100, Col: 5)
|———CursorKind.PARM_DECL: _Source (Line: 100, Col: 5)
|——CursorKind.FUNCTION_DECL: wcscmp(const wchar_t *, const wchar_t *) (Line: 108, Col: 22)
|———CursorKind.PARM_DECL: _String1 (Line: 109, Col: 27)
|———CursorKind.PARM_DECL: _String2 (Line: 110, Col: 27)
|——CursorKind.LINKAGE_SPEC:  (Line: 113, Col: 1)
|———CursorKind.FUNCTION_TEMPLATE: wcscpy_s(wchar_t (&)[_Size], const wchar_t *) (Line: 113, Col: 1)
|————CursorKind.TEMPLATE_NON_TYPE_PARAMETER: _Size (Line: 113, Col: 1)
|—————CursorKind.TYPE_REF: size_t (Line: 113, Col: 1)
|————CursorKind.TYPE_REF: errno_t (Line: 113, Col: 1)
|————CursorKind.PARM_DECL: _Destination (Line: 113, Col: 1)
|—————CursorKind.DECL_REF_EXPR: _Size (Line: 113, Col: 1)
|————CursorKind.PARM_DECL: _Source (Line: 113, Col: 1)
|——CursorKind.FUNCTION_DECL: wcscpy(wchar_t *, const wchar_t *) (Line: 119, Col: 1)
|———CursorKind.UNEXPOSED_ATTR:  (Line: 119, Col: 1)
|———CursorKind.PARM_DECL: _Destination (Line: 119, Col: 1)
|———CursorKind.PARM_DECL: _Source (Line: 119, Col: 1)
|——CursorKind.FUNCTION_DECL: wcscspn(const wchar_t *, const wchar_t *) (Line: 126, Col: 25)
|———CursorKind.TYPE_REF: size_t (Line: 126, Col: 10)
|———CursorKind.PARM_DECL: _String (Line: 127, Col: 27)
|———CursorKind.PARM_DECL: _Control (Line: 128, Col: 27)
|——CursorKind.FUNCTION_DECL: wcslen(const wchar_t *) (Line: 132, Col: 25)
|———CursorKind.TYPE_REF: size_t (Line: 132, Col: 10)
|———CursorKind.PARM_DECL: _String (Line: 133, Col: 27)
|——CursorKind.FUNCTION_DECL: wcsnlen(const wchar_t *, size_t) (Line: 145, Col: 25)
|———CursorKind.TYPE_REF: size_t (Line: 145, Col: 10)
|———CursorKind.PARM_DECL: _Source (Line: 146, Col: 47)
|———CursorKind.PARM_DECL: _MaxCount (Line: 147, Col: 47)
|————CursorKind.TYPE_REF: size_t (Line: 147, Col: 32)
|——CursorKind.FUNCTION_DECL: wcsnlen_s(const wchar_t *, size_t) (Line: 161, Col: 38)
|———CursorKind.TYPE_REF: size_t (Line: 161, Col: 21)
|———CursorKind.PARM_DECL: _Source (Line: 162, Col: 51)
|———CursorKind.PARM_DECL: _MaxCount (Line: 163, Col: 51)
|————CursorKind.TYPE_REF: size_t (Line: 163, Col: 36)
|———CursorKind.COMPOUND_STMT:  (Line: 165, Col: 5)
|————CursorKind.RETURN_STMT:  (Line: 166, Col: 9)
|—————CursorKind.CONDITIONAL_OPERATOR:  (Line: 166, Col: 16)
|——————CursorKind.PAREN_EXPR:  (Line: 166, Col: 16)
|———————CursorKind.BINARY_OPERATOR:  (Line: 166, Col: 17)
|————————CursorKind.UNEXPOSED_EXPR: _Source (Line: 166, Col: 17)
|—————————CursorKind.DECL_REF_EXPR: _Source (Line: 166, Col: 17)
|————————CursorKind.UNEXPOSED_EXPR:  (Line: 166, Col: 28)
|—————————CursorKind.INTEGER_LITERAL:  (Line: 166, Col: 28)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 166, Col: 33)
|———————CursorKind.INTEGER_LITERAL:  (Line: 166, Col: 33)
|——————CursorKind.CALL_EXPR: wcsnlen (Line: 166, Col: 37)
|———————CursorKind.UNEXPOSED_EXPR: wcsnlen (Line: 166, Col: 37)
|————————CursorKind.DECL_REF_EXPR: wcsnlen (Line: 166, Col: 37)
|———————CursorKind.UNEXPOSED_EXPR: _Source (Line: 166, Col: 45)
|————————CursorKind.DECL_REF_EXPR: _Source (Line: 166, Col: 45)
|———————CursorKind.UNEXPOSED_EXPR: _MaxCount (Line: 166, Col: 54)
|————————CursorKind.DECL_REF_EXPR: _MaxCount (Line: 166, Col: 54)
|——CursorKind.LINKAGE_SPEC:  (Line: 171, Col: 1)
|———CursorKind.FUNCTION_TEMPLATE: wcsncat_s(wchar_t (&)[_Size], const wchar_t *, size_t) (Line: 171, Col: 1)
|————CursorKind.TEMPLATE_NON_TYPE_PARAMETER: _Size (Line: 171, Col: 1)
|—————CursorKind.TYPE_REF: size_t (Line: 171, Col: 1)
|————CursorKind.TYPE_REF: errno_t (Line: 171, Col: 1)
|————CursorKind.PARM_DECL: _Destination (Line: 171, Col: 1)
|—————CursorKind.DECL_REF_EXPR: _Size (Line: 171, Col: 1)
|————CursorKind.PARM_DECL: _Source (Line: 171, Col: 1)
|————CursorKind.PARM_DECL: _Count (Line: 171, Col: 1)
|—————CursorKind.TYPE_REF: size_t (Line: 171, Col: 1)
|——CursorKind.FUNCTION_DECL: wcsncat(wchar_t *, const wchar_t *, size_t) (Line: 178, Col: 1)
|———CursorKind.UNEXPOSED_ATTR:  (Line: 178, Col: 1)
|———CursorKind.PARM_DECL: _Destination (Line: 178, Col: 1)
|———CursorKind.PARM_DECL: _Source (Line: 178, Col: 1)
|———CursorKind.PARM_DECL: _Count (Line: 178, Col: 1)
|————CursorKind.TYPE_REF: size_t (Line: 178, Col: 1)
|——CursorKind.FUNCTION_DECL: wcsncmp(const wchar_t *, const wchar_t *, size_t) (Line: 187, Col: 22)
|———CursorKind.PARM_DECL: _String1 (Line: 188, Col: 47)
|———CursorKind.PARM_DECL: _String2 (Line: 189, Col: 47)
|———CursorKind.PARM_DECL: _MaxCount (Line: 190, Col: 47)
|————CursorKind.TYPE_REF: size_t (Line: 190, Col: 32)
|——CursorKind.LINKAGE_SPEC:  (Line: 193, Col: 1)
|———CursorKind.FUNCTION_TEMPLATE: wcsncpy_s(wchar_t (&)[_Size], const wchar_t *, size_t) (Line: 193, Col: 1)
|————CursorKind.TEMPLATE_NON_TYPE_PARAMETER: _Size (Line: 193, Col: 1)
|—————CursorKind.TYPE_REF: size_t (Line: 193, Col: 1)
|————CursorKind.TYPE_REF: errno_t (Line: 193, Col: 1)
|————CursorKind.PARM_DECL: _Destination (Line: 193, Col: 1)
|—————CursorKind.DECL_REF_EXPR: _Size (Line: 193, Col: 1)
|————CursorKind.PARM_DECL: _Source (Line: 193, Col: 1)
|————CursorKind.PARM_DECL: _Count (Line: 193, Col: 1)
|—————CursorKind.TYPE_REF: size_t (Line: 193, Col: 1)
|——CursorKind.FUNCTION_DECL: wcsncpy(wchar_t *, const wchar_t *, size_t) (Line: 200, Col: 1)
|———CursorKind.UNEXPOSED_ATTR:  (Line: 200, Col: 1)
|———CursorKind.PARM_DECL: _Destination (Line: 200, Col: 1)
|———CursorKind.PARM_DECL: _Source (Line: 200, Col: 1)
|———CursorKind.PARM_DECL: _Count (Line: 200, Col: 1)
|————CursorKind.TYPE_REF: size_t (Line: 200, Col: 1)
|——CursorKind.FUNCTION_DECL: wcspbrk(const wchar_t *, const wchar_t *) (Line: 209, Col: 41)
|———CursorKind.PARM_DECL: _String (Line: 210, Col: 27)
|———CursorKind.PARM_DECL: _Control (Line: 211, Col: 27)
|——CursorKind.FUNCTION_DECL: wcsspn(const wchar_t *, const wchar_t *) (Line: 215, Col: 25)
|———CursorKind.TYPE_REF: size_t (Line: 215, Col: 10)
|———CursorKind.PARM_DECL: _String (Line: 216, Col: 27)
|———CursorKind.PARM_DECL: _Control (Line: 217, Col: 27)
|——CursorKind.FUNCTION_DECL: wcstok(wchar_t *, const wchar_t *, wchar_t **) (Line: 221, Col: 27)
|———CursorKind.UNEXPOSED_ATTR:  (Line: 220, Col: 16)
|———CursorKind.PARM_DECL: _String (Line: 222, Col: 54)
|———CursorKind.PARM_DECL: _Delimiter (Line: 223, Col: 54)
|———CursorKind.PARM_DECL: _Context (Line: 224, Col: 54)
|——CursorKind.FUNCTION_DECL: _wcstok(wchar_t *const, const wchar_t *const) (Line: 239, Col: 40)
|———CursorKind.UNEXPOSED_ATTR:  (Line: 238, Col: 20)
|———CursorKind.PARM_DECL: _String (Line: 240, Col: 44)
|———CursorKind.PARM_DECL: _Delimiter (Line: 241, Col: 44)
|———CursorKind.COMPOUND_STMT:  (Line: 243, Col: 5)
|————CursorKind.RETURN_STMT:  (Line: 244, Col: 9)
|—————CursorKind.CALL_EXPR: wcstok (Line: 244, Col: 16)
|——————CursorKind.UNEXPOSED_EXPR: wcstok (Line: 244, Col: 16)
|———————CursorKind.DECL_REF_EXPR: wcstok (Line: 244, Col: 16)
|——————CursorKind.UNEXPOSED_EXPR: _String (Line: 244, Col: 23)
|———————CursorKind.DECL_REF_EXPR: _String (Line: 244, Col: 23)
|——————CursorKind.UNEXPOSED_EXPR: _Delimiter (Line: 244, Col: 32)
|———————CursorKind.DECL_REF_EXPR: _Delimiter (Line: 244, Col: 32)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 244, Col: 44)
|———————CursorKind.INTEGER_LITERAL:  (Line: 244, Col: 44)
|——CursorKind.LINKAGE_SPEC:  (Line: 252, Col: 16)
|———CursorKind.FUNCTION_DECL: wcstok(wchar_t *, const wchar_t *) (Line: 253, Col: 35)
|————CursorKind.UNEXPOSED_ATTR:  (Line: 252, Col: 37)
|————CursorKind.PARM_DECL: _String (Line: 254, Col: 42)
|————CursorKind.PARM_DECL: _Delimiter (Line: 255, Col: 42)
|————CursorKind.COMPOUND_STMT:  (Line: 257, Col: 9)
|—————CursorKind.RETURN_STMT:  (Line: 258, Col: 13)
|——————CursorKind.CALL_EXPR: wcstok (Line: 258, Col: 20)
|———————CursorKind.UNEXPOSED_EXPR: wcstok (Line: 258, Col: 20)
|————————CursorKind.DECL_REF_EXPR: wcstok (Line: 258, Col: 20)
|———————CursorKind.UNEXPOSED_EXPR: _String (Line: 258, Col: 27)
|————————CursorKind.DECL_REF_EXPR: _String (Line: 258, Col: 27)
|———————CursorKind.UNEXPOSED_EXPR: _Delimiter (Line: 258, Col: 36)
|————————CursorKind.DECL_REF_EXPR: _Delimiter (Line: 258, Col: 36)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 258, Col: 48)
|————————CursorKind.INTEGER_LITERAL:  (Line: 258, Col: 48)
|——CursorKind.FUNCTION_DECL: _wcserror(int) (Line: 268, Col: 27)
|———CursorKind.UNEXPOSED_ATTR:  (Line: 267, Col: 16)
|———CursorKind.PARM_DECL: _ErrorNumber (Line: 269, Col: 14)
|——CursorKind.FUNCTION_DECL: _wcserror_s(wchar_t *, size_t, int) (Line: 273, Col: 26)
|———CursorKind.TYPE_REF: errno_t (Line: 273, Col: 10)
|———CursorKind.PARM_DECL: _Buffer (Line: 274, Col: 47)
|———CursorKind.PARM_DECL: _SizeInWords (Line: 275, Col: 47)
|————CursorKind.TYPE_REF: size_t (Line: 275, Col: 38)
|———CursorKind.PARM_DECL: _ErrorNumber (Line: 276, Col: 47)
|——CursorKind.LINKAGE_SPEC:  (Line: 279, Col: 1)
|———CursorKind.FUNCTION_TEMPLATE: _wcserror_s(wchar_t (&)[_Size], int) (Line: 279, Col: 1)
|————CursorKind.TEMPLATE_NON_TYPE_PARAMETER: _Size (Line: 279, Col: 1)
|—————CursorKind.TYPE_REF: size_t (Line: 279, Col: 1)
|————CursorKind.TYPE_REF: errno_t (Line: 279, Col: 1)
|————CursorKind.PARM_DECL: _Buffer (Line: 279, Col: 1)
|—————CursorKind.DECL_REF_EXPR: _Size (Line: 279, Col: 1)
|————CursorKind.PARM_DECL: _Error (Line: 279, Col: 1)
|——CursorKind.FUNCTION_DECL: __wcserror(const wchar_t *) (Line: 288, Col: 27)
|———CursorKind.UNEXPOSED_ATTR:  (Line: 287, Col: 16)
|———CursorKind.PARM_DECL: _String (Line: 289, Col: 31)
|——CursorKind.FUNCTION_DECL: __wcserror_s(wchar_t *, size_t, const wchar_t *) (Line: 292, Col: 49)
|———CursorKind.TYPE_REF: errno_t (Line: 292, Col: 33)
|———CursorKind.PARM_DECL: _Buffer (Line: 293, Col: 53)
|———CursorKind.PARM_DECL: _SizeInWords (Line: 294, Col: 53)
|————CursorKind.TYPE_REF: size_t (Line: 294, Col: 38)
|———CursorKind.PARM_DECL: _ErrorMessage (Line: 295, Col: 53)
|——CursorKind.LINKAGE_SPEC:  (Line: 298, Col: 1)
|———CursorKind.FUNCTION_TEMPLATE: __wcserror_s(wchar_t (&)[_Size], const wchar_t *) (Line: 298, Col: 1)
|————CursorKind.TEMPLATE_NON_TYPE_PARAMETER: _Size (Line: 298, Col: 1)
|—————CursorKind.TYPE_REF: size_t (Line: 298, Col: 1)
|————CursorKind.TYPE_REF: errno_t (Line: 298, Col: 1)
|————CursorKind.PARM_DECL: _Buffer (Line: 298, Col: 1)
|—————CursorKind.DECL_REF_EXPR: _Size (Line: 298, Col: 1)
|————CursorKind.PARM_DECL: _ErrorMessage (Line: 298, Col: 1)
|——CursorKind.FUNCTION_DECL: _wcsicmp(const wchar_t *, const wchar_t *) (Line: 304, Col: 37)
|———CursorKind.PARM_DECL: _String1 (Line: 305, Col: 27)
|———CursorKind.PARM_DECL: _String2 (Line: 306, Col: 27)
|——CursorKind.FUNCTION_DECL: _wcsicmp_l(const wchar_t *, const wchar_t *, _locale_t) (Line: 309, Col: 37)
|———CursorKind.PARM_DECL: _String1 (Line: 310, Col: 29)
|———CursorKind.PARM_DECL: _String2 (Line: 311, Col: 29)
|———CursorKind.PARM_DECL: _Locale (Line: 312, Col: 29)
|————CursorKind.TYPE_REF: _locale_t (Line: 312, Col: 14)
|——CursorKind.FUNCTION_DECL: _wcsnicmp(const wchar_t *, const wchar_t *, size_t) (Line: 315, Col: 37)
|———CursorKind.PARM_DECL: _String1 (Line: 316, Col: 47)
|———CursorKind.PARM_DECL: _String2 (Line: 317, Col: 47)
|———CursorKind.PARM_DECL: _MaxCount (Line: 318, Col: 47)
|————CursorKind.TYPE_REF: size_t (Line: 318, Col: 32)
|——CursorKind.FUNCTION_DECL: _wcsnicmp_l(const wchar_t *, const wchar_t *, size_t, _locale_t) (Line: 321, Col: 37)
|———CursorKind.PARM_DECL: _String1 (Line: 322, Col: 47)
|———CursorKind.PARM_DECL: _String2 (Line: 323, Col: 47)
|———CursorKind.PARM_DECL: _MaxCount (Line: 324, Col: 47)
|————CursorKind.TYPE_REF: size_t (Line: 324, Col: 32)
|———CursorKind.PARM_DECL: _Locale (Line: 325, Col: 47)
|————CursorKind.TYPE_REF: _locale_t (Line: 325, Col: 32)
|——CursorKind.FUNCTION_DECL: _wcsnset_s(wchar_t *, size_t, wchar_t, size_t) (Line: 328, Col: 45)
|———CursorKind.TYPE_REF: errno_t (Line: 328, Col: 29)
|———CursorKind.PARM_DECL: _Destination (Line: 329, Col: 46)
|———CursorKind.PARM_DECL: _SizeInWords (Line: 330, Col: 46)
|————CursorKind.TYPE_REF: size_t (Line: 330, Col: 37)
|———CursorKind.PARM_DECL: _Value (Line: 331, Col: 46)
|———CursorKind.PARM_DECL: _MaxCount (Line: 332, Col: 46)
|————CursorKind.TYPE_REF: size_t (Line: 332, Col: 37)
|——CursorKind.LINKAGE_SPEC:  (Line: 335, Col: 1)
|———CursorKind.FUNCTION_TEMPLATE: _wcsnset_s(wchar_t (&)[_Size], wchar_t, size_t) (Line: 335, Col: 1)
|————CursorKind.TEMPLATE_NON_TYPE_PARAMETER: _Size (Line: 335, Col: 1)
|—————CursorKind.TYPE_REF: size_t (Line: 335, Col: 1)
|————CursorKind.TYPE_REF: errno_t (Line: 335, Col: 1)
|————CursorKind.PARM_DECL: _Destination (Line: 335, Col: 1)
|—————CursorKind.DECL_REF_EXPR: _Size (Line: 335, Col: 1)
|————CursorKind.PARM_DECL: _Value (Line: 335, Col: 1)
|————CursorKind.PARM_DECL: _MaxCount (Line: 335, Col: 1)
|—————CursorKind.TYPE_REF: size_t (Line: 335, Col: 1)
|——CursorKind.FUNCTION_DECL: _wcsnset(wchar_t *, wchar_t, size_t) (Line: 342, Col: 1)
|———CursorKind.UNEXPOSED_ATTR:  (Line: 342, Col: 1)
|———CursorKind.PARM_DECL: _String (Line: 342, Col: 1)
|———CursorKind.PARM_DECL: _Value (Line: 342, Col: 1)
|———CursorKind.PARM_DECL: _MaxCount (Line: 342, Col: 1)
|————CursorKind.TYPE_REF: size_t (Line: 342, Col: 1)
|——CursorKind.FUNCTION_DECL: _wcsrev(wchar_t *) (Line: 350, Col: 27)
|———CursorKind.PARM_DECL: _String (Line: 351, Col: 24)
|——CursorKind.FUNCTION_DECL: _wcsset_s(wchar_t *, size_t, wchar_t) (Line: 354, Col: 45)
|———CursorKind.TYPE_REF: errno_t (Line: 354, Col: 29)
|———CursorKind.PARM_DECL: _Destination (Line: 355, Col: 46)
|———CursorKind.PARM_DECL: _SizeInWords (Line: 356, Col: 46)
|————CursorKind.TYPE_REF: size_t (Line: 356, Col: 37)
|———CursorKind.PARM_DECL: _Value (Line: 357, Col: 46)
|——CursorKind.LINKAGE_SPEC:  (Line: 360, Col: 1)
|———CursorKind.FUNCTION_TEMPLATE: _wcsset_s(wchar_t (&)[_Size], wchar_t) (Line: 360, Col: 1)
|————CursorKind.TEMPLATE_NON_TYPE_PARAMETER: _Size (Line: 360, Col: 1)
|—————CursorKind.TYPE_REF: size_t (Line: 360, Col: 1)
|————CursorKind.TYPE_REF: errno_t (Line: 360, Col: 1)
|————CursorKind.PARM_DECL: _String (Line: 360, Col: 1)
|—————CursorKind.DECL_REF_EXPR: _Size (Line: 360, Col: 1)
|————CursorKind.PARM_DECL: _Value (Line: 360, Col: 1)
|——CursorKind.FUNCTION_DECL: _wcsset(wchar_t *, wchar_t) (Line: 366, Col: 1)
|———CursorKind.UNEXPOSED_ATTR:  (Line: 366, Col: 1)
|———CursorKind.PARM_DECL: _String (Line: 366, Col: 1)
|———CursorKind.PARM_DECL: _Value (Line: 366, Col: 1)
|——CursorKind.FUNCTION_DECL: _wcslwr_s(wchar_t *, size_t) (Line: 373, Col: 45)
|———CursorKind.TYPE_REF: errno_t (Line: 373, Col: 29)
|———CursorKind.PARM_DECL: _String (Line: 374, Col: 46)
|———CursorKind.PARM_DECL: _SizeInWords (Line: 375, Col: 46)
|————CursorKind.TYPE_REF: size_t (Line: 375, Col: 37)
|——CursorKind.LINKAGE_SPEC:  (Line: 378, Col: 1)
|———CursorKind.FUNCTION_TEMPLATE: _wcslwr_s(wchar_t (&)[_Size]) (Line: 378, Col: 1)
|————CursorKind.TEMPLATE_NON_TYPE_PARAMETER: _Size (Line: 378, Col: 1)
|—————CursorKind.TYPE_REF: size_t (Line: 378, Col: 1)
|————CursorKind.TYPE_REF: errno_t (Line: 378, Col: 1)
|————CursorKind.PARM_DECL: _String (Line: 378, Col: 1)
|—————CursorKind.DECL_REF_EXPR: _Size (Line: 378, Col: 1)
|——CursorKind.FUNCTION_DECL: _wcslwr(wchar_t *) (Line: 383, Col: 1)
|———CursorKind.UNEXPOSED_ATTR:  (Line: 383, Col: 1)
|———CursorKind.PARM_DECL: _String (Line: 383, Col: 1)
|——CursorKind.FUNCTION_DECL: _wcslwr_s_l(wchar_t *, size_t, _locale_t) (Line: 389, Col: 26)
|———CursorKind.TYPE_REF: errno_t (Line: 389, Col: 10)
|———CursorKind.PARM_DECL: _String (Line: 390, Col: 47)
|———CursorKind.PARM_DECL: _SizeInWords (Line: 391, Col: 47)
|————CursorKind.TYPE_REF: size_t (Line: 391, Col: 37)
|———CursorKind.PARM_DECL: _Locale (Line: 392, Col: 47)
|————CursorKind.TYPE_REF: _locale_t (Line: 392, Col: 37)
|——CursorKind.LINKAGE_SPEC:  (Line: 395, Col: 1)
|———CursorKind.FUNCTION_TEMPLATE: _wcslwr_s_l(wchar_t (&)[_Size], _locale_t) (Line: 395, Col: 1)
|————CursorKind.TEMPLATE_NON_TYPE_PARAMETER: _Size (Line: 395, Col: 1)
|—————CursorKind.TYPE_REF: size_t (Line: 395, Col: 1)
|————CursorKind.TYPE_REF: errno_t (Line: 395, Col: 1)
|————CursorKind.PARM_DECL: _String (Line: 395, Col: 1)
|—————CursorKind.DECL_REF_EXPR: _Size (Line: 395, Col: 1)
|————CursorKind.PARM_DECL: _Locale (Line: 395, Col: 1)
|—————CursorKind.TYPE_REF: _locale_t (Line: 395, Col: 1)
|——CursorKind.FUNCTION_DECL: _wcslwr_l(wchar_t *, _locale_t) (Line: 401, Col: 1)
|———CursorKind.UNEXPOSED_ATTR:  (Line: 401, Col: 1)
|———CursorKind.PARM_DECL: _String (Line: 401, Col: 1)
|———CursorKind.PARM_DECL: _Locale (Line: 401, Col: 1)
|————CursorKind.TYPE_REF: _locale_t (Line: 401, Col: 1)
|——CursorKind.FUNCTION_DECL: _wcsupr_s(wchar_t *, size_t) (Line: 409, Col: 26)
|———CursorKind.TYPE_REF: errno_t (Line: 409, Col: 10)
|———CursorKind.PARM_DECL: _String (Line: 410, Col: 39)
|———CursorKind.PARM_DECL: _Size (Line: 411, Col: 39)
|————CursorKind.TYPE_REF: size_t (Line: 411, Col: 30)
|——CursorKind.LINKAGE_SPEC:  (Line: 414, Col: 1)
|———CursorKind.FUNCTION_TEMPLATE: _wcsupr_s(wchar_t (&)[_Size]) (Line: 414, Col: 1)
|————CursorKind.TEMPLATE_NON_TYPE_PARAMETER: _Size (Line: 414, Col: 1)
|—————CursorKind.TYPE_REF: size_t (Line: 414, Col: 1)
|————CursorKind.TYPE_REF: errno_t (Line: 414, Col: 1)
|————CursorKind.PARM_DECL: _String (Line: 414, Col: 1)
|—————CursorKind.DECL_REF_EXPR: _Size (Line: 414, Col: 1)
|——CursorKind.FUNCTION_DECL: _wcsupr(wchar_t *) (Line: 419, Col: 1)
|———CursorKind.UNEXPOSED_ATTR:  (Line: 419, Col: 1)
|———CursorKind.PARM_DECL: _String (Line: 419, Col: 1)
|——CursorKind.FUNCTION_DECL: _wcsupr_s_l(wchar_t *, size_t, _locale_t) (Line: 425, Col: 26)
|———CursorKind.TYPE_REF: errno_t (Line: 425, Col: 10)
|———CursorKind.PARM_DECL: _String (Line: 426, Col: 40)
|———CursorKind.PARM_DECL: _Size (Line: 427, Col: 40)
|————CursorKind.TYPE_REF: size_t (Line: 427, Col: 30)
|———CursorKind.PARM_DECL: _Locale (Line: 428, Col: 40)
|————CursorKind.TYPE_REF: _locale_t (Line: 428, Col: 30)
|——CursorKind.LINKAGE_SPEC:  (Line: 431, Col: 1)
|———CursorKind.FUNCTION_TEMPLATE: _wcsupr_s_l(wchar_t (&)[_Size], _locale_t) (Line: 431, Col: 1)
|————CursorKind.TEMPLATE_NON_TYPE_PARAMETER: _Size (Line: 431, Col: 1)
|—————CursorKind.TYPE_REF: size_t (Line: 431, Col: 1)
|————CursorKind.TYPE_REF: errno_t (Line: 431, Col: 1)
|————CursorKind.PARM_DECL: _String (Line: 431, Col: 1)
|—————CursorKind.DECL_REF_EXPR: _Size (Line: 431, Col: 1)
|————CursorKind.PARM_DECL: _Locale (Line: 431, Col: 1)
|—————CursorKind.TYPE_REF: _locale_t (Line: 431, Col: 1)
|——CursorKind.FUNCTION_DECL: _wcsupr_l(wchar_t *, _locale_t) (Line: 437, Col: 1)
|———CursorKind.UNEXPOSED_ATTR:  (Line: 437, Col: 1)
|———CursorKind.PARM_DECL: _String (Line: 437, Col: 1)
|———CursorKind.PARM_DECL: _Locale (Line: 437, Col: 1)
|————CursorKind.TYPE_REF: _locale_t (Line: 437, Col: 1)
|——CursorKind.FUNCTION_DECL: wcsxfrm(wchar_t *, const wchar_t *, size_t) (Line: 446, Col: 25)
|———CursorKind.TYPE_REF: size_t (Line: 446, Col: 10)
|———CursorKind.PARM_DECL: _Destination (Line: 447, Col: 62)
|———CursorKind.PARM_DECL: _Source (Line: 448, Col: 62)
|———CursorKind.PARM_DECL: _MaxCount (Line: 449, Col: 62)
|————CursorKind.TYPE_REF: size_t (Line: 449, Col: 47)
|——CursorKind.FUNCTION_DECL: _wcsxfrm_l(wchar_t *, const wchar_t *, size_t, _locale_t) (Line: 454, Col: 25)
|———CursorKind.TYPE_REF: size_t (Line: 454, Col: 10)
|———CursorKind.PARM_DECL: _Destination (Line: 455, Col: 62)
|———CursorKind.PARM_DECL: _Source (Line: 456, Col: 62)
|———CursorKind.PARM_DECL: _MaxCount (Line: 457, Col: 62)
|————CursorKind.TYPE_REF: size_t (Line: 457, Col: 47)
|———CursorKind.PARM_DECL: _Locale (Line: 458, Col: 62)
|————CursorKind.TYPE_REF: _locale_t (Line: 458, Col: 47)
|——CursorKind.FUNCTION_DECL: wcscoll(const wchar_t *, const wchar_t *) (Line: 462, Col: 22)
|———CursorKind.PARM_DECL: _String1 (Line: 463, Col: 27)
|———CursorKind.PARM_DECL: _String2 (Line: 464, Col: 27)
|——CursorKind.FUNCTION_DECL: _wcscoll_l(const wchar_t *, const wchar_t *, _locale_t) (Line: 468, Col: 22)
|———CursorKind.PARM_DECL: _String1 (Line: 469, Col: 29)
|———CursorKind.PARM_DECL: _String2 (Line: 470, Col: 29)
|———CursorKind.PARM_DECL: _Locale (Line: 471, Col: 29)
|————CursorKind.TYPE_REF: _locale_t (Line: 471, Col: 14)
|——CursorKind.FUNCTION_DECL: _wcsicoll(const wchar_t *, const wchar_t *) (Line: 475, Col: 22)
|———CursorKind.PARM_DECL: _String1 (Line: 476, Col: 27)
|———CursorKind.PARM_DECL: _String2 (Line: 477, Col: 27)
|——CursorKind.FUNCTION_DECL: _wcsicoll_l(const wchar_t *, const wchar_t *, _locale_t) (Line: 481, Col: 22)
|———CursorKind.PARM_DECL: _String1 (Line: 482, Col: 29)
|———CursorKind.PARM_DECL: _String2 (Line: 483, Col: 29)
|———CursorKind.PARM_DECL: _Locale (Line: 484, Col: 29)
|————CursorKind.TYPE_REF: _locale_t (Line: 484, Col: 14)
|——CursorKind.FUNCTION_DECL: _wcsncoll(const wchar_t *, const wchar_t *, size_t) (Line: 488, Col: 22)
|———CursorKind.PARM_DECL: _String1 (Line: 489, Col: 47)
|———CursorKind.PARM_DECL: _String2 (Line: 490, Col: 47)
|———CursorKind.PARM_DECL: _MaxCount (Line: 491, Col: 47)
|————CursorKind.TYPE_REF: size_t (Line: 491, Col: 32)
|——CursorKind.FUNCTION_DECL: _wcsncoll_l(const wchar_t *, const wchar_t *, size_t, _locale_t) (Line: 495, Col: 22)
|———CursorKind.PARM_DECL: _String1 (Line: 496, Col: 47)
|———CursorKind.PARM_DECL: _String2 (Line: 497, Col: 47)
|———CursorKind.PARM_DECL: _MaxCount (Line: 498, Col: 47)
|————CursorKind.TYPE_REF: size_t (Line: 498, Col: 32)
|———CursorKind.PARM_DECL: _Locale (Line: 499, Col: 47)
|————CursorKind.TYPE_REF: _locale_t (Line: 499, Col: 32)
|——CursorKind.FUNCTION_DECL: _wcsnicoll(const wchar_t *, const wchar_t *, size_t) (Line: 503, Col: 22)
|———CursorKind.PARM_DECL: _String1 (Line: 504, Col: 47)
|———CursorKind.PARM_DECL: _String2 (Line: 505, Col: 47)
|———CursorKind.PARM_DECL: _MaxCount (Line: 506, Col: 47)
|————CursorKind.TYPE_REF: size_t (Line: 506, Col: 32)
|——CursorKind.FUNCTION_DECL: _wcsnicoll_l(const wchar_t *, const wchar_t *, size_t, _locale_t) (Line: 510, Col: 22)
|———CursorKind.PARM_DECL: _String1 (Line: 511, Col: 47)
|———CursorKind.PARM_DECL: _String2 (Line: 512, Col: 47)
|———CursorKind.PARM_DECL: _MaxCount (Line: 513, Col: 47)
|————CursorKind.TYPE_REF: size_t (Line: 513, Col: 32)
|———CursorKind.PARM_DECL: _Locale (Line: 514, Col: 47)
|————CursorKind.TYPE_REF: _locale_t (Line: 514, Col: 32)
|——CursorKind.LINKAGE_SPEC:  (Line: 525, Col: 8)
|———CursorKind.FUNCTION_DECL: wcschr(wchar_t *, wchar_t) (Line: 529, Col: 31)
|————CursorKind.PARM_DECL: _String (Line: 529, Col: 54)
|————CursorKind.PARM_DECL: _C (Line: 529, Col: 71)
|————CursorKind.COMPOUND_STMT:  (Line: 530, Col: 5)
|—————CursorKind.RETURN_STMT:  (Line: 531, Col: 9)
|——————CursorKind.CXX_CONST_CAST_EXPR:  (Line: 531, Col: 16)
|———————CursorKind.CALL_EXPR: wcschr (Line: 531, Col: 37)
|————————CursorKind.UNEXPOSED_EXPR: wcschr (Line: 531, Col: 37)
|—————————CursorKind.DECL_REF_EXPR: wcschr (Line: 531, Col: 37)
|————————CursorKind.CXX_STATIC_CAST_EXPR:  (Line: 531, Col: 44)
|—————————CursorKind.UNEXPOSED_EXPR: _String (Line: 531, Col: 72)
|——————————CursorKind.UNEXPOSED_EXPR: _String (Line: 531, Col: 72)
|———————————CursorKind.DECL_REF_EXPR: _String (Line: 531, Col: 72)
|————————CursorKind.UNEXPOSED_EXPR: _C (Line: 531, Col: 82)
|—————————CursorKind.DECL_REF_EXPR: _C (Line: 531, Col: 82)
|———CursorKind.FUNCTION_DECL: wcspbrk(wchar_t *, const wchar_t *) (Line: 535, Col: 31)
|————CursorKind.PARM_DECL: _String (Line: 535, Col: 55)
|————CursorKind.PARM_DECL: _Control (Line: 535, Col: 86)
|————CursorKind.COMPOUND_STMT:  (Line: 536, Col: 5)
|—————CursorKind.RETURN_STMT:  (Line: 537, Col: 9)
|——————CursorKind.CXX_CONST_CAST_EXPR:  (Line: 537, Col: 16)
|———————CursorKind.CALL_EXPR: wcspbrk (Line: 537, Col: 37)
|————————CursorKind.UNEXPOSED_EXPR: wcspbrk (Line: 537, Col: 37)
|—————————CursorKind.DECL_REF_EXPR: wcspbrk (Line: 537, Col: 37)
|————————CursorKind.CXX_STATIC_CAST_EXPR:  (Line: 537, Col: 45)
|—————————CursorKind.UNEXPOSED_EXPR: _String (Line: 537, Col: 73)
|——————————CursorKind.UNEXPOSED_EXPR: _String (Line: 537, Col: 73)
|———————————CursorKind.DECL_REF_EXPR: _String (Line: 537, Col: 73)
|————————CursorKind.UNEXPOSED_EXPR: _Control (Line: 537, Col: 83)
|—————————CursorKind.DECL_REF_EXPR: _Control (Line: 537, Col: 83)
|———CursorKind.FUNCTION_DECL: wcsrchr(wchar_t *, wchar_t) (Line: 541, Col: 31)
|————CursorKind.PARM_DECL: _String (Line: 541, Col: 55)
|————CursorKind.PARM_DECL: _C (Line: 541, Col: 77)
|————CursorKind.COMPOUND_STMT:  (Line: 542, Col: 5)
|—————CursorKind.RETURN_STMT:  (Line: 543, Col: 9)
|——————CursorKind.CXX_CONST_CAST_EXPR:  (Line: 543, Col: 16)
|———————CursorKind.CALL_EXPR: wcsrchr (Line: 543, Col: 37)
|————————CursorKind.UNEXPOSED_EXPR: wcsrchr (Line: 543, Col: 37)
|—————————CursorKind.DECL_REF_EXPR: wcsrchr (Line: 543, Col: 37)
|————————CursorKind.CXX_STATIC_CAST_EXPR:  (Line: 543, Col: 45)
|—————————CursorKind.UNEXPOSED_EXPR: _String (Line: 543, Col: 73)
|——————————CursorKind.UNEXPOSED_EXPR: _String (Line: 543, Col: 73)
|———————————CursorKind.DECL_REF_EXPR: _String (Line: 543, Col: 73)
|————————CursorKind.UNEXPOSED_EXPR: _C (Line: 543, Col: 83)
|—————————CursorKind.DECL_REF_EXPR: _C (Line: 543, Col: 83)
|———CursorKind.FUNCTION_DECL: wcsstr(wchar_t *, const wchar_t *) (Line: 548, Col: 31)
|————CursorKind.PARM_DECL: _String (Line: 548, Col: 54)
|————CursorKind.PARM_DECL: _SubStr (Line: 548, Col: 84)
|————CursorKind.COMPOUND_STMT:  (Line: 549, Col: 5)
|—————CursorKind.RETURN_STMT:  (Line: 550, Col: 9)
|——————CursorKind.CXX_CONST_CAST_EXPR:  (Line: 550, Col: 16)
|———————CursorKind.CALL_EXPR: wcsstr (Line: 550, Col: 37)
|————————CursorKind.UNEXPOSED_EXPR: wcsstr (Line: 550, Col: 37)
|—————————CursorKind.DECL_REF_EXPR: wcsstr (Line: 550, Col: 37)
|————————CursorKind.CXX_STATIC_CAST_EXPR:  (Line: 550, Col: 44)
|—————————CursorKind.UNEXPOSED_EXPR: _String (Line: 550, Col: 72)
|——————————CursorKind.UNEXPOSED_EXPR: _String (Line: 550, Col: 72)
|———————————CursorKind.DECL_REF_EXPR: _String (Line: 550, Col: 72)
|————————CursorKind.UNEXPOSED_EXPR: _SubStr (Line: 550, Col: 82)
|—————————CursorKind.DECL_REF_EXPR: _SubStr (Line: 550, Col: 82)
|——CursorKind.FUNCTION_DECL: wcsdup(const wchar_t *) (Line: 570, Col: 31)
|———CursorKind.UNEXPOSED_ATTR:  (Line: 569, Col: 20)
|———CursorKind.PARM_DECL: _String (Line: 571, Col: 31)
|——CursorKind.FUNCTION_DECL: wcsicmp(const wchar_t *, const wchar_t *) (Line: 582, Col: 26)
|———CursorKind.UNEXPOSED_ATTR:  (Line: 581, Col: 20)
|———CursorKind.PARM_DECL: _String1 (Line: 583, Col: 31)
|———CursorKind.PARM_DECL: _String2 (Line: 584, Col: 31)
|——CursorKind.FUNCTION_DECL: wcsnicmp(const wchar_t *, const wchar_t *, size_t) (Line: 588, Col: 26)
|———CursorKind.UNEXPOSED_ATTR:  (Line: 587, Col: 20)
|———CursorKind.PARM_DECL: _String1 (Line: 589, Col: 51)
|———CursorKind.PARM_DECL: _String2 (Line: 590, Col: 51)
|———CursorKind.PARM_DECL: _MaxCount (Line: 591, Col: 51)
|————CursorKind.TYPE_REF: size_t (Line: 591, Col: 36)
|——CursorKind.FUNCTION_DECL: wcsnset(wchar_t *, wchar_t, size_t) (Line: 596, Col: 31)
|———CursorKind.UNEXPOSED_ATTR:  (Line: 594, Col: 5)
|———CursorKind.PARM_DECL: _String (Line: 597, Col: 47)
|———CursorKind.PARM_DECL: _Value (Line: 598, Col: 47)
|———CursorKind.PARM_DECL: _MaxCount (Line: 599, Col: 47)
|————CursorKind.TYPE_REF: size_t (Line: 599, Col: 38)
|——CursorKind.FUNCTION_DECL: wcsrev(wchar_t *) (Line: 604, Col: 31)
|———CursorKind.UNEXPOSED_ATTR:  (Line: 602, Col: 5)
|———CursorKind.PARM_DECL: _String (Line: 605, Col: 28)
|——CursorKind.FUNCTION_DECL: wcsset(wchar_t *, wchar_t) (Line: 610, Col: 31)
|———CursorKind.UNEXPOSED_ATTR:  (Line: 608, Col: 5)
|———CursorKind.PARM_DECL: _String (Line: 611, Col: 28)
|———CursorKind.PARM_DECL: _Value (Line: 612, Col: 28)
|——CursorKind.FUNCTION_DECL: wcslwr(wchar_t *) (Line: 617, Col: 31)
|———CursorKind.UNEXPOSED_ATTR:  (Line: 615, Col: 5)
|———CursorKind.PARM_DECL: _String (Line: 618, Col: 28)
|——CursorKind.FUNCTION_DECL: wcsupr(wchar_t *) (Line: 623, Col: 31)
|———CursorKind.UNEXPOSED_ATTR:  (Line: 621, Col: 5)
|———CursorKind.PARM_DECL: _String (Line: 624, Col: 28)
|——CursorKind.FUNCTION_DECL: wcsicoll(const wchar_t *, const wchar_t *) (Line: 628, Col: 26)
|———CursorKind.UNEXPOSED_ATTR:  (Line: 627, Col: 20)
|———CursorKind.PARM_DECL: _String1 (Line: 629, Col: 31)
|———CursorKind.PARM_DECL: _String2 (Line: 630, Col: 31)
|—CursorKind.LINKAGE_SPEC:  (Line: 23, Col: 1)
|——CursorKind.FUNCTION_DECL: strcpy_s(char *, rsize_t, const char *) (Line: 32, Col: 30)
|———CursorKind.TYPE_REF: errno_t (Line: 32, Col: 14)
|———CursorKind.PARM_DECL: _Destination (Line: 33, Col: 50)
|———CursorKind.PARM_DECL: _SizeInBytes (Line: 34, Col: 50)
|————CursorKind.TYPE_REF: rsize_t (Line: 34, Col: 38)
|———CursorKind.PARM_DECL: _Source (Line: 35, Col: 50)
|——CursorKind.FUNCTION_DECL: strcat_s(char *, rsize_t, const char *) (Line: 39, Col: 30)
|———CursorKind.TYPE_REF: errno_t (Line: 39, Col: 14)
|———CursorKind.PARM_DECL: _Destination (Line: 40, Col: 53)
|———CursorKind.PARM_DECL: _SizeInBytes (Line: 41, Col: 53)
|————CursorKind.TYPE_REF: rsize_t (Line: 41, Col: 41)
|———CursorKind.PARM_DECL: _Source (Line: 42, Col: 53)
|——CursorKind.FUNCTION_DECL: strerror_s(char *, size_t, int) (Line: 46, Col: 30)
|———CursorKind.TYPE_REF: errno_t (Line: 46, Col: 14)
|———CursorKind.PARM_DECL: _Buffer (Line: 47, Col: 45)
|———CursorKind.PARM_DECL: _SizeInBytes (Line: 48, Col: 45)
|————CursorKind.TYPE_REF: size_t (Line: 48, Col: 38)
|———CursorKind.PARM_DECL: _ErrorNumber (Line: 49, Col: 45)
|——CursorKind.FUNCTION_DECL: strncat_s(char *, rsize_t, const char *, rsize_t) (Line: 52, Col: 30)
|———CursorKind.TYPE_REF: errno_t (Line: 52, Col: 14)
|———CursorKind.PARM_DECL: _Destination (Line: 53, Col: 53)
|———CursorKind.PARM_DECL: _SizeInBytes (Line: 54, Col: 53)
|————CursorKind.TYPE_REF: rsize_t (Line: 54, Col: 41)
|———CursorKind.PARM_DECL: _Source (Line: 55, Col: 53)
|———CursorKind.PARM_DECL: _MaxCount (Line: 56, Col: 53)
|————CursorKind.TYPE_REF: rsize_t (Line: 56, Col: 41)
|——CursorKind.FUNCTION_DECL: strncpy_s(char *, rsize_t, const char *, rsize_t) (Line: 60, Col: 30)
|———CursorKind.TYPE_REF: errno_t (Line: 60, Col: 14)
|———CursorKind.PARM_DECL: _Destination (Line: 61, Col: 50)
|———CursorKind.PARM_DECL: _SizeInBytes (Line: 62, Col: 50)
|————CursorKind.TYPE_REF: rsize_t (Line: 62, Col: 38)
|———CursorKind.PARM_DECL: _Source (Line: 63, Col: 50)
|———CursorKind.PARM_DECL: _MaxCount (Line: 64, Col: 50)
|————CursorKind.TYPE_REF: rsize_t (Line: 64, Col: 38)
|——CursorKind.FUNCTION_DECL: strtok_s(char *, const char *, char **) (Line: 68, Col: 29)
|———CursorKind.PARM_DECL: _String (Line: 69, Col: 51)
|———CursorKind.PARM_DECL: _Delimiter (Line: 70, Col: 51)
|———CursorKind.PARM_DECL: _Context (Line: 71, Col: 51)
|——CursorKind.FUNCTION_DECL: _memccpy(void *, const void *, int, size_t) (Line: 76, Col: 24)
|———CursorKind.PARM_DECL: _Dst (Line: 77, Col: 51)
|———CursorKind.PARM_DECL: _Src (Line: 78, Col: 51)
|———CursorKind.PARM_DECL: _Val (Line: 79, Col: 51)
|———CursorKind.PARM_DECL: _MaxCount (Line: 80, Col: 51)
|————CursorKind.TYPE_REF: size_t (Line: 80, Col: 39)
|——CursorKind.LINKAGE_SPEC:  (Line: 83, Col: 1)
|———CursorKind.FUNCTION_TEMPLATE: strcat_s(char (&)[_Size], const char *) (Line: 83, Col: 1)
|————CursorKind.TEMPLATE_NON_TYPE_PARAMETER: _Size (Line: 83, Col: 1)
|—————CursorKind.TYPE_REF: size_t (Line: 83, Col: 1)
|————CursorKind.TYPE_REF: errno_t (Line: 83, Col: 1)
|————CursorKind.PARM_DECL: _Destination (Line: 83, Col: 1)
|—————CursorKind.DECL_REF_EXPR: _Size (Line: 83, Col: 1)
|————CursorKind.PARM_DECL: _Source (Line: 83, Col: 1)
|——CursorKind.FUNCTION_DECL: strcat(char *, const char *) (Line: 91, Col: 5)
|———CursorKind.UNEXPOSED_ATTR:  (Line: 91, Col: 5)
|———CursorKind.PARM_DECL: _Destination (Line: 91, Col: 5)
|———CursorKind.PARM_DECL: _Source (Line: 91, Col: 5)
|——CursorKind.FUNCTION_DECL: strcmp(const char *, const char *) (Line: 100, Col: 13)
|———CursorKind.PARM_DECL: _Str1 (Line: 101, Col: 24)
|———CursorKind.PARM_DECL: _Str2 (Line: 102, Col: 24)
|——CursorKind.FUNCTION_DECL: _strcmpi(const char *, const char *) (Line: 106, Col: 22)
|———CursorKind.PARM_DECL: _String1 (Line: 107, Col: 24)
|———CursorKind.PARM_DECL: _String2 (Line: 108, Col: 24)
|——CursorKind.FUNCTION_DECL: strcoll(const char *, const char *) (Line: 112, Col: 22)
|———CursorKind.PARM_DECL: _String1 (Line: 113, Col: 24)
|———CursorKind.PARM_DECL: _String2 (Line: 114, Col: 24)
|——CursorKind.FUNCTION_DECL: _strcoll_l(const char *, const char *, _locale_t) (Line: 118, Col: 22)
|———CursorKind.PARM_DECL: _String1 (Line: 119, Col: 26)
|———CursorKind.PARM_DECL: _String2 (Line: 120, Col: 26)
|———CursorKind.PARM_DECL: _Locale (Line: 121, Col: 26)
|————CursorKind.TYPE_REF: _locale_t (Line: 121, Col: 14)
|——CursorKind.LINKAGE_SPEC:  (Line: 124, Col: 1)
|———CursorKind.FUNCTION_TEMPLATE: strcpy_s(char (&)[_Size], const char *) (Line: 124, Col: 1)
|————CursorKind.TEMPLATE_NON_TYPE_PARAMETER: _Size (Line: 124, Col: 1)
|—————CursorKind.TYPE_REF: size_t (Line: 124, Col: 1)
|————CursorKind.TYPE_REF: errno_t (Line: 124, Col: 1)
|————CursorKind.PARM_DECL: _Destination (Line: 124, Col: 1)
|—————CursorKind.DECL_REF_EXPR: _Size (Line: 124, Col: 1)
|————CursorKind.PARM_DECL: _Source (Line: 124, Col: 1)
|——CursorKind.FUNCTION_DECL: strcpy(char *, const char *) (Line: 130, Col: 1)
|———CursorKind.UNEXPOSED_ATTR:  (Line: 130, Col: 1)
|———CursorKind.PARM_DECL: _Destination (Line: 130, Col: 1)
|———CursorKind.PARM_DECL: _Source (Line: 130, Col: 1)
|——CursorKind.FUNCTION_DECL: strcspn(const char *, const char *) (Line: 137, Col: 25)
|———CursorKind.TYPE_REF: size_t (Line: 137, Col: 10)
|———CursorKind.PARM_DECL: _Str (Line: 138, Col: 24)
|———CursorKind.PARM_DECL: _Control (Line: 139, Col: 24)
|——CursorKind.FUNCTION_DECL: _strdup(const char *) (Line: 148, Col: 38)
|———CursorKind.UNEXPOSED_ATTR:  (Line: 148, Col: 10)
|———CursorKind.PARM_DECL: _Source (Line: 149, Col: 28)
|——CursorKind.FUNCTION_DECL: _strerror(const char *) (Line: 159, Col: 25)
|———CursorKind.UNEXPOSED_ATTR:  (Line: 158, Col: 16)
|———CursorKind.PARM_DECL: _ErrorMessage (Line: 160, Col: 28)
|——CursorKind.FUNCTION_DECL: _strerror_s(char *, size_t, const char *) (Line: 164, Col: 26)
|———CursorKind.TYPE_REF: errno_t (Line: 164, Col: 10)
|———CursorKind.PARM_DECL: _Buffer (Line: 165, Col: 46)
|———CursorKind.PARM_DECL: _SizeInBytes (Line: 166, Col: 46)
|————CursorKind.TYPE_REF: size_t (Line: 166, Col: 34)
|———CursorKind.PARM_DECL: _ErrorMessage (Line: 167, Col: 46)
|——CursorKind.LINKAGE_SPEC:  (Line: 170, Col: 1)
|———CursorKind.FUNCTION_TEMPLATE: _strerror_s(char (&)[_Size], const char *) (Line: 170, Col: 1)
|————CursorKind.TEMPLATE_NON_TYPE_PARAMETER: _Size (Line: 170, Col: 1)
|—————CursorKind.TYPE_REF: size_t (Line: 170, Col: 1)
|————CursorKind.TYPE_REF: errno_t (Line: 170, Col: 1)
|————CursorKind.PARM_DECL: _Buffer (Line: 170, Col: 1)
|—————CursorKind.DECL_REF_EXPR: _Size (Line: 170, Col: 1)
|————CursorKind.PARM_DECL: _ErrorMessage (Line: 170, Col: 1)
|——CursorKind.FUNCTION_DECL: strerror(int) (Line: 178, Col: 24)
|———CursorKind.UNEXPOSED_ATTR:  (Line: 177, Col: 16)
|———CursorKind.PARM_DECL: _ErrorMessage (Line: 179, Col: 14)
|——CursorKind.LINKAGE_SPEC:  (Line: 182, Col: 1)
|———CursorKind.FUNCTION_TEMPLATE: strerror_s(char (&)[_Size], int) (Line: 182, Col: 1)
|————CursorKind.TEMPLATE_NON_TYPE_PARAMETER: _Size (Line: 182, Col: 1)
|—————CursorKind.TYPE_REF: size_t (Line: 182, Col: 1)
|————CursorKind.TYPE_REF: errno_t (Line: 182, Col: 1)
|————CursorKind.PARM_DECL: _Buffer (Line: 182, Col: 1)
|—————CursorKind.DECL_REF_EXPR: _Size (Line: 182, Col: 1)
|————CursorKind.PARM_DECL: _ErrorMessage (Line: 182, Col: 1)
|——CursorKind.FUNCTION_DECL: _stricmp(const char *, const char *) (Line: 189, Col: 22)
|———CursorKind.PARM_DECL: _String1 (Line: 190, Col: 24)
|———CursorKind.PARM_DECL: _String2 (Line: 191, Col: 24)
|——CursorKind.FUNCTION_DECL: _stricoll(const char *, const char *) (Line: 195, Col: 22)
|———CursorKind.PARM_DECL: _String1 (Line: 196, Col: 24)
|———CursorKind.PARM_DECL: _String2 (Line: 197, Col: 24)
|——CursorKind.FUNCTION_DECL: _stricoll_l(const char *, const char *, _locale_t) (Line: 201, Col: 22)
|———CursorKind.PARM_DECL: _String1 (Line: 202, Col: 26)
|———CursorKind.PARM_DECL: _String2 (Line: 203, Col: 26)
|———CursorKind.PARM_DECL: _Locale (Line: 204, Col: 26)
|————CursorKind.TYPE_REF: _locale_t (Line: 204, Col: 14)
|——CursorKind.FUNCTION_DECL: _stricmp_l(const char *, const char *, _locale_t) (Line: 208, Col: 22)
|———CursorKind.PARM_DECL: _String1 (Line: 209, Col: 26)
|———CursorKind.PARM_DECL: _String2 (Line: 210, Col: 26)
|———CursorKind.PARM_DECL: _Locale (Line: 211, Col: 26)
|————CursorKind.TYPE_REF: _locale_t (Line: 211, Col: 14)
|——CursorKind.FUNCTION_DECL: strlen(const char *) (Line: 215, Col: 16)
|———CursorKind.TYPE_REF: size_t (Line: 215, Col: 1)
|———CursorKind.PARM_DECL: _Str (Line: 216, Col: 24)
|——CursorKind.FUNCTION_DECL: _strlwr_s(char *, size_t) (Line: 220, Col: 26)
|———CursorKind.TYPE_REF: errno_t (Line: 220, Col: 10)
|———CursorKind.PARM_DECL: _String (Line: 221, Col: 37)
|———CursorKind.PARM_DECL: _Size (Line: 222, Col: 37)
|————CursorKind.TYPE_REF: size_t (Line: 222, Col: 30)
|——CursorKind.LINKAGE_SPEC:  (Line: 225, Col: 1)
|———CursorKind.FUNCTION_TEMPLATE: _strlwr_s(char (&)[_Size]) (Line: 225, Col: 1)
|————CursorKind.TEMPLATE_NON_TYPE_PARAMETER: _Size (Line: 225, Col: 1)
|—————CursorKind.TYPE_REF: size_t (Line: 225, Col: 1)
|————CursorKind.TYPE_REF: errno_t (Line: 225, Col: 1)
|————CursorKind.PARM_DECL: _String (Line: 225, Col: 1)
|—————CursorKind.DECL_REF_EXPR: _Size (Line: 225, Col: 1)
|——CursorKind.FUNCTION_DECL: _strlwr(char *) (Line: 230, Col: 1)
|———CursorKind.UNEXPOSED_ATTR:  (Line: 230, Col: 1)
|———CursorKind.PARM_DECL: _String (Line: 230, Col: 1)
|——CursorKind.FUNCTION_DECL: _strlwr_s_l(char *, size_t, _locale_t) (Line: 236, Col: 26)
|———CursorKind.TYPE_REF: errno_t (Line: 236, Col: 10)
|———CursorKind.PARM_DECL: _String (Line: 237, Col: 40)
|———CursorKind.PARM_DECL: _Size (Line: 238, Col: 40)
|————CursorKind.TYPE_REF: size_t (Line: 238, Col: 30)
|———CursorKind.PARM_DECL: _Locale (Line: 239, Col: 40)
|————CursorKind.TYPE_REF: _locale_t (Line: 239, Col: 30)
|——CursorKind.LINKAGE_SPEC:  (Line: 242, Col: 1)
|———CursorKind.FUNCTION_TEMPLATE: _strlwr_s_l(char (&)[_Size], _locale_t) (Line: 242, Col: 1)
|————CursorKind.TEMPLATE_NON_TYPE_PARAMETER: _Size (Line: 242, Col: 1)
|—————CursorKind.TYPE_REF: size_t (Line: 242, Col: 1)
|————CursorKind.TYPE_REF: errno_t (Line: 242, Col: 1)
|————CursorKind.PARM_DECL: _String (Line: 242, Col: 1)
|—————CursorKind.DECL_REF_EXPR: _Size (Line: 242, Col: 1)
|————CursorKind.PARM_DECL: _Locale (Line: 242, Col: 1)
|—————CursorKind.TYPE_REF: _locale_t (Line: 242, Col: 1)
|——CursorKind.FUNCTION_DECL: _strlwr_l(char *, _locale_t) (Line: 248, Col: 1)
|———CursorKind.UNEXPOSED_ATTR:  (Line: 248, Col: 1)
|———CursorKind.PARM_DECL: _String (Line: 248, Col: 1)
|———CursorKind.PARM_DECL: _Locale (Line: 248, Col: 1)
|————CursorKind.TYPE_REF: _locale_t (Line: 248, Col: 1)
|——CursorKind.LINKAGE_SPEC:  (Line: 255, Col: 1)
|———CursorKind.FUNCTION_TEMPLATE: strncat_s(char (&)[_Size], const char *, size_t) (Line: 255, Col: 1)
|————CursorKind.TEMPLATE_NON_TYPE_PARAMETER: _Size (Line: 255, Col: 1)
|—————CursorKind.TYPE_REF: size_t (Line: 255, Col: 1)
|————CursorKind.TYPE_REF: errno_t (Line: 255, Col: 1)
|————CursorKind.PARM_DECL: _Destination (Line: 255, Col: 1)
|—————CursorKind.DECL_REF_EXPR: _Size (Line: 255, Col: 1)
|————CursorKind.PARM_DECL: _Source (Line: 255, Col: 1)
|————CursorKind.PARM_DECL: _Count (Line: 255, Col: 1)
|—————CursorKind.TYPE_REF: size_t (Line: 255, Col: 1)
|——CursorKind.FUNCTION_DECL: strncat(char *, const char *, size_t) (Line: 262, Col: 1)
|———CursorKind.UNEXPOSED_ATTR:  (Line: 262, Col: 1)
|———CursorKind.PARM_DECL: _Destination (Line: 262, Col: 1)
|———CursorKind.PARM_DECL: _Source (Line: 262, Col: 1)
|———CursorKind.PARM_DECL: _Count (Line: 262, Col: 1)
|————CursorKind.TYPE_REF: size_t (Line: 262, Col: 1)
|——CursorKind.FUNCTION_DECL: strncmp(const char *, const char *, size_t) (Line: 271, Col: 22)
|———CursorKind.PARM_DECL: _Str1 (Line: 272, Col: 44)
|———CursorKind.PARM_DECL: _Str2 (Line: 273, Col: 44)
|———CursorKind.PARM_DECL: _MaxCount (Line: 274, Col: 44)
|————CursorKind.TYPE_REF: size_t (Line: 274, Col: 32)
|——CursorKind.FUNCTION_DECL: _strnicmp(const char *, const char *, size_t) (Line: 278, Col: 22)
|———CursorKind.PARM_DECL: _String1 (Line: 279, Col: 44)
|———CursorKind.PARM_DECL: _String2 (Line: 280, Col: 44)
|———CursorKind.PARM_DECL: _MaxCount (Line: 281, Col: 44)
|————CursorKind.TYPE_REF: size_t (Line: 281, Col: 32)
|——CursorKind.FUNCTION_DECL: _strnicmp_l(const char *, const char *, size_t, _locale_t) (Line: 285, Col: 22)
|———CursorKind.PARM_DECL: _String1 (Line: 286, Col: 44)
|———CursorKind.PARM_DECL: _String2 (Line: 287, Col: 44)
|———CursorKind.PARM_DECL: _MaxCount (Line: 288, Col: 44)
|————CursorKind.TYPE_REF: size_t (Line: 288, Col: 32)
|———CursorKind.PARM_DECL: _Locale (Line: 289, Col: 44)
|————CursorKind.TYPE_REF: _locale_t (Line: 289, Col: 32)
|——CursorKind.FUNCTION_DECL: _strnicoll(const char *, const char *, size_t) (Line: 293, Col: 22)
|———CursorKind.PARM_DECL: _String1 (Line: 294, Col: 44)
|———CursorKind.PARM_DECL: _String2 (Line: 295, Col: 44)
|———CursorKind.PARM_DECL: _MaxCount (Line: 296, Col: 44)
|————CursorKind.TYPE_REF: size_t (Line: 296, Col: 32)
|——CursorKind.FUNCTION_DECL: _strnicoll_l(const char *, const char *, size_t, _locale_t) (Line: 300, Col: 22)
|———CursorKind.PARM_DECL: _String1 (Line: 301, Col: 44)
|———CursorKind.PARM_DECL: _String2 (Line: 302, Col: 44)
|———CursorKind.PARM_DECL: _MaxCount (Line: 303, Col: 44)
|————CursorKind.TYPE_REF: size_t (Line: 303, Col: 32)
|———CursorKind.PARM_DECL: _Locale (Line: 304, Col: 44)
|————CursorKind.TYPE_REF: _locale_t (Line: 304, Col: 32)
|——CursorKind.FUNCTION_DECL: _strncoll(const char *, const char *, size_t) (Line: 308, Col: 22)
|———CursorKind.PARM_DECL: _String1 (Line: 309, Col: 44)
|———CursorKind.PARM_DECL: _String2 (Line: 310, Col: 44)
|———CursorKind.PARM_DECL: _MaxCount (Line: 311, Col: 44)
|————CursorKind.TYPE_REF: size_t (Line: 311, Col: 32)
|——CursorKind.FUNCTION_DECL: _strncoll_l(const char *, const char *, size_t, _locale_t) (Line: 315, Col: 22)
|———CursorKind.PARM_DECL: _String1 (Line: 316, Col: 44)
|———CursorKind.PARM_DECL: _String2 (Line: 317, Col: 44)
|———CursorKind.PARM_DECL: _MaxCount (Line: 318, Col: 44)
|————CursorKind.TYPE_REF: size_t (Line: 318, Col: 32)
|———CursorKind.PARM_DECL: _Locale (Line: 319, Col: 44)
|————CursorKind.TYPE_REF: _locale_t (Line: 319, Col: 32)
|——CursorKind.FUNCTION_DECL: __strncnt(const char *, size_t) (Line: 322, Col: 25)
|———CursorKind.TYPE_REF: size_t (Line: 322, Col: 10)
|———CursorKind.PARM_DECL: _String (Line: 323, Col: 41)
|———CursorKind.PARM_DECL: _Count (Line: 324, Col: 41)
|————CursorKind.TYPE_REF: size_t (Line: 324, Col: 29)
|——CursorKind.LINKAGE_SPEC:  (Line: 327, Col: 1)
|———CursorKind.FUNCTION_TEMPLATE: strncpy_s(char (&)[_Size], const char *, size_t) (Line: 327, Col: 1)
|————CursorKind.TEMPLATE_NON_TYPE_PARAMETER: _Size (Line: 327, Col: 1)
|—————CursorKind.TYPE_REF: size_t (Line: 327, Col: 1)
|————CursorKind.TYPE_REF: errno_t (Line: 327, Col: 1)
|————CursorKind.PARM_DECL: _Destination (Line: 327, Col: 1)
|—————CursorKind.DECL_REF_EXPR: _Size (Line: 327, Col: 1)
|————CursorKind.PARM_DECL: _Source (Line: 327, Col: 1)
|————CursorKind.PARM_DECL: _Count (Line: 327, Col: 1)
|—————CursorKind.TYPE_REF: size_t (Line: 327, Col: 1)
|——CursorKind.FUNCTION_DECL: strncpy(char *, const char *, size_t) (Line: 334, Col: 1)
|———CursorKind.UNEXPOSED_ATTR:  (Line: 334, Col: 1)
|———CursorKind.PARM_DECL: _Destination (Line: 334, Col: 1)
|———CursorKind.PARM_DECL: _Source (Line: 334, Col: 1)
|———CursorKind.PARM_DECL: _Count (Line: 334, Col: 1)
|————CursorKind.TYPE_REF: size_t (Line: 334, Col: 1)
|——CursorKind.FUNCTION_DECL: strnlen(const char *, size_t) (Line: 351, Col: 25)
|———CursorKind.TYPE_REF: size_t (Line: 351, Col: 10)
|———CursorKind.PARM_DECL: _String (Line: 352, Col: 44)
|———CursorKind.PARM_DECL: _MaxCount (Line: 353, Col: 44)
|————CursorKind.TYPE_REF: size_t (Line: 353, Col: 32)
|——CursorKind.FUNCTION_DECL: strnlen_s(const char *, size_t) (Line: 367, Col: 38)
|———CursorKind.TYPE_REF: size_t (Line: 367, Col: 21)
|———CursorKind.PARM_DECL: _String (Line: 368, Col: 48)
|———CursorKind.PARM_DECL: _MaxCount (Line: 369, Col: 48)
|————CursorKind.TYPE_REF: size_t (Line: 369, Col: 36)
|———CursorKind.COMPOUND_STMT:  (Line: 371, Col: 5)
|————CursorKind.RETURN_STMT:  (Line: 372, Col: 9)
|—————CursorKind.CONDITIONAL_OPERATOR:  (Line: 372, Col: 16)
|——————CursorKind.BINARY_OPERATOR:  (Line: 372, Col: 16)
|———————CursorKind.UNEXPOSED_EXPR: _String (Line: 372, Col: 16)
|————————CursorKind.DECL_REF_EXPR: _String (Line: 372, Col: 16)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 372, Col: 27)
|————————CursorKind.INTEGER_LITERAL:  (Line: 372, Col: 27)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 372, Col: 31)
|———————CursorKind.INTEGER_LITERAL:  (Line: 372, Col: 31)
|——————CursorKind.CALL_EXPR: strnlen (Line: 372, Col: 35)
|———————CursorKind.UNEXPOSED_EXPR: strnlen (Line: 372, Col: 35)
|————————CursorKind.DECL_REF_EXPR: strnlen (Line: 372, Col: 35)
|———————CursorKind.UNEXPOSED_EXPR: _String (Line: 372, Col: 43)
|————————CursorKind.DECL_REF_EXPR: _String (Line: 372, Col: 43)
|———————CursorKind.UNEXPOSED_EXPR: _MaxCount (Line: 372, Col: 52)
|————————CursorKind.DECL_REF_EXPR: _MaxCount (Line: 372, Col: 52)
|——CursorKind.FUNCTION_DECL: _strnset_s(char *, size_t, int, size_t) (Line: 378, Col: 26)
|———CursorKind.TYPE_REF: errno_t (Line: 378, Col: 10)
|———CursorKind.PARM_DECL: _String (Line: 379, Col: 44)
|———CursorKind.PARM_DECL: _SizeInBytes (Line: 380, Col: 44)
|————CursorKind.TYPE_REF: size_t (Line: 380, Col: 37)
|———CursorKind.PARM_DECL: _Value (Line: 381, Col: 44)
|———CursorKind.PARM_DECL: _MaxCount (Line: 382, Col: 44)
|————CursorKind.TYPE_REF: size_t (Line: 382, Col: 37)
|——CursorKind.LINKAGE_SPEC:  (Line: 385, Col: 1)
|———CursorKind.FUNCTION_TEMPLATE: _strnset_s(char (&)[_Size], int, size_t) (Line: 385, Col: 1)
|————CursorKind.TEMPLATE_NON_TYPE_PARAMETER: _Size (Line: 385, Col: 1)
|—————CursorKind.TYPE_REF: size_t (Line: 385, Col: 1)
|————CursorKind.TYPE_REF: errno_t (Line: 385, Col: 1)
|————CursorKind.PARM_DECL: _Destination (Line: 385, Col: 1)
|—————CursorKind.DECL_REF_EXPR: _Size (Line: 385, Col: 1)
|————CursorKind.PARM_DECL: _Value (Line: 385, Col: 1)
|————CursorKind.PARM_DECL: _Count (Line: 385, Col: 1)
|—————CursorKind.TYPE_REF: size_t (Line: 385, Col: 1)
|——CursorKind.FUNCTION_DECL: _strnset(char *, int, size_t) (Line: 392, Col: 1)
|———CursorKind.UNEXPOSED_ATTR:  (Line: 392, Col: 1)
|———CursorKind.PARM_DECL: _Destination (Line: 392, Col: 1)
|———CursorKind.PARM_DECL: _Value (Line: 392, Col: 1)
|———CursorKind.PARM_DECL: _Count (Line: 392, Col: 1)
|————CursorKind.TYPE_REF: size_t (Line: 392, Col: 1)
|——CursorKind.FUNCTION_DECL: strpbrk(const char *, const char *) (Line: 401, Col: 38)
|———CursorKind.PARM_DECL: _Str (Line: 402, Col: 24)
|———CursorKind.PARM_DECL: _Control (Line: 403, Col: 24)
|——CursorKind.FUNCTION_DECL: _strrev(char *) (Line: 406, Col: 24)
|———CursorKind.PARM_DECL: _Str (Line: 407, Col: 21)
|——CursorKind.FUNCTION_DECL: _strset_s(char *, size_t, int) (Line: 411, Col: 26)
|———CursorKind.TYPE_REF: errno_t (Line: 411, Col: 10)
|———CursorKind.PARM_DECL: _Destination (Line: 412, Col: 48)
|———CursorKind.PARM_DECL: _DestinationSize (Line: 413, Col: 48)
|————CursorKind.TYPE_REF: size_t (Line: 413, Col: 41)
|———CursorKind.PARM_DECL: _Value (Line: 414, Col: 48)
|——CursorKind.LINKAGE_SPEC:  (Line: 417, Col: 1)
|———CursorKind.FUNCTION_TEMPLATE: _strset_s(char (&)[_Size], int) (Line: 417, Col: 1)
|————CursorKind.TEMPLATE_NON_TYPE_PARAMETER: _Size (Line: 417, Col: 1)
|—————CursorKind.TYPE_REF: size_t (Line: 417, Col: 1)
|————CursorKind.TYPE_REF: errno_t (Line: 417, Col: 1)
|————CursorKind.PARM_DECL: _Destination (Line: 417, Col: 1)
|—————CursorKind.DECL_REF_EXPR: _Size (Line: 417, Col: 1)
|————CursorKind.PARM_DECL: _Value (Line: 417, Col: 1)
|——CursorKind.FUNCTION_DECL: _strset(char *, int) (Line: 423, Col: 1)
|———CursorKind.UNEXPOSED_ATTR:  (Line: 423, Col: 1)
|———CursorKind.PARM_DECL: _Destination (Line: 423, Col: 1)
|———CursorKind.PARM_DECL: _Value (Line: 423, Col: 1)
|——CursorKind.FUNCTION_DECL: strspn(const char *, const char *) (Line: 430, Col: 25)
|———CursorKind.TYPE_REF: size_t (Line: 430, Col: 10)
|———CursorKind.PARM_DECL: _Str (Line: 431, Col: 24)
|———CursorKind.PARM_DECL: _Control (Line: 432, Col: 24)
|——CursorKind.FUNCTION_DECL: strtok(char *, const char *) (Line: 436, Col: 24)
|———CursorKind.UNEXPOSED_ATTR:  (Line: 435, Col: 16)
|———CursorKind.PARM_DECL: _String (Line: 437, Col: 31)
|———CursorKind.PARM_DECL: _Delimiter (Line: 438, Col: 31)
|——CursorKind.FUNCTION_DECL: _strupr_s(char *, size_t) (Line: 442, Col: 26)
|———CursorKind.TYPE_REF: errno_t (Line: 442, Col: 10)
|———CursorKind.PARM_DECL: _String (Line: 443, Col: 37)
|———CursorKind.PARM_DECL: _Size (Line: 444, Col: 37)
|————CursorKind.TYPE_REF: size_t (Line: 444, Col: 30)
|——CursorKind.LINKAGE_SPEC:  (Line: 447, Col: 1)
|———CursorKind.FUNCTION_TEMPLATE: _strupr_s(char (&)[_Size]) (Line: 447, Col: 1)
|————CursorKind.TEMPLATE_NON_TYPE_PARAMETER: _Size (Line: 447, Col: 1)
|—————CursorKind.TYPE_REF: size_t (Line: 447, Col: 1)
|————CursorKind.TYPE_REF: errno_t (Line: 447, Col: 1)
|————CursorKind.PARM_DECL: _String (Line: 447, Col: 1)
|—————CursorKind.DECL_REF_EXPR: _Size (Line: 447, Col: 1)
|——CursorKind.FUNCTION_DECL: _strupr(char *) (Line: 452, Col: 1)
|———CursorKind.UNEXPOSED_ATTR:  (Line: 452, Col: 1)
|———CursorKind.PARM_DECL: _String (Line: 452, Col: 1)
|——CursorKind.FUNCTION_DECL: _strupr_s_l(char *, size_t, _locale_t) (Line: 458, Col: 26)
|———CursorKind.TYPE_REF: errno_t (Line: 458, Col: 10)
|———CursorKind.PARM_DECL: _String (Line: 459, Col: 40)
|———CursorKind.PARM_DECL: _Size (Line: 460, Col: 40)
|————CursorKind.TYPE_REF: size_t (Line: 460, Col: 30)
|———CursorKind.PARM_DECL: _Locale (Line: 461, Col: 40)
|————CursorKind.TYPE_REF: _locale_t (Line: 461, Col: 30)
|——CursorKind.LINKAGE_SPEC:  (Line: 464, Col: 1)
|———CursorKind.FUNCTION_TEMPLATE: _strupr_s_l(char (&)[_Size], _locale_t) (Line: 464, Col: 1)
|————CursorKind.TEMPLATE_NON_TYPE_PARAMETER: _Size (Line: 464, Col: 1)
|—————CursorKind.TYPE_REF: size_t (Line: 464, Col: 1)
|————CursorKind.TYPE_REF: errno_t (Line: 464, Col: 1)
|————CursorKind.PARM_DECL: _String (Line: 464, Col: 1)
|—————CursorKind.DECL_REF_EXPR: _Size (Line: 464, Col: 1)
|————CursorKind.PARM_DECL: _Locale (Line: 464, Col: 1)
|—————CursorKind.TYPE_REF: _locale_t (Line: 464, Col: 1)
|——CursorKind.FUNCTION_DECL: _strupr_l(char *, _locale_t) (Line: 470, Col: 1)
|———CursorKind.UNEXPOSED_ATTR:  (Line: 470, Col: 1)
|———CursorKind.PARM_DECL: _String (Line: 470, Col: 1)
|———CursorKind.PARM_DECL: _Locale (Line: 470, Col: 1)
|————CursorKind.TYPE_REF: _locale_t (Line: 470, Col: 1)
|——CursorKind.FUNCTION_DECL: strxfrm(char *, const char *, size_t) (Line: 479, Col: 25)
|———CursorKind.TYPE_REF: size_t (Line: 479, Col: 10)
|———CursorKind.PARM_DECL: _Destination (Line: 480, Col: 59)
|———CursorKind.PARM_DECL: _Source (Line: 481, Col: 59)
|———CursorKind.PARM_DECL: _MaxCount (Line: 482, Col: 59)
|————CursorKind.TYPE_REF: size_t (Line: 482, Col: 47)
|——CursorKind.FUNCTION_DECL: _strxfrm_l(char *, const char *, size_t, _locale_t) (Line: 487, Col: 25)
|———CursorKind.TYPE_REF: size_t (Line: 487, Col: 10)
|———CursorKind.PARM_DECL: _Destination (Line: 488, Col: 59)
|———CursorKind.PARM_DECL: _Source (Line: 489, Col: 59)
|———CursorKind.PARM_DECL: _MaxCount (Line: 490, Col: 59)
|————CursorKind.TYPE_REF: size_t (Line: 490, Col: 47)
|———CursorKind.PARM_DECL: _Locale (Line: 491, Col: 59)
|————CursorKind.TYPE_REF: _locale_t (Line: 491, Col: 47)
|——CursorKind.LINKAGE_SPEC:  (Line: 497, Col: 8)
|———CursorKind.FUNCTION_DECL: strchr(char *const, const int) (Line: 500, Col: 28)
|————CursorKind.PARM_DECL: _String (Line: 500, Col: 54)
|————CursorKind.PARM_DECL: _Ch (Line: 500, Col: 78)
|————CursorKind.COMPOUND_STMT:  (Line: 501, Col: 5)
|—————CursorKind.RETURN_STMT:  (Line: 502, Col: 9)
|——————CursorKind.CXX_CONST_CAST_EXPR:  (Line: 502, Col: 16)
|———————CursorKind.CALL_EXPR: strchr (Line: 502, Col: 34)
|————————CursorKind.UNEXPOSED_EXPR: strchr (Line: 502, Col: 34)
|—————————CursorKind.DECL_REF_EXPR: strchr (Line: 502, Col: 34)
|————————CursorKind.CXX_STATIC_CAST_EXPR:  (Line: 502, Col: 41)
|—————————CursorKind.UNEXPOSED_EXPR: _String (Line: 502, Col: 66)
|——————————CursorKind.UNEXPOSED_EXPR: _String (Line: 502, Col: 66)
|———————————CursorKind.DECL_REF_EXPR: _String (Line: 502, Col: 66)
|————————CursorKind.UNEXPOSED_EXPR: _Ch (Line: 502, Col: 76)
|—————————CursorKind.DECL_REF_EXPR: _Ch (Line: 502, Col: 76)
|———CursorKind.FUNCTION_DECL: strpbrk(char *const, const char *const) (Line: 506, Col: 28)
|————CursorKind.PARM_DECL: _String (Line: 506, Col: 55)
|————CursorKind.PARM_DECL: _Control (Line: 506, Col: 89)
|————CursorKind.COMPOUND_STMT:  (Line: 507, Col: 5)
|—————CursorKind.RETURN_STMT:  (Line: 508, Col: 9)
|——————CursorKind.CXX_CONST_CAST_EXPR:  (Line: 508, Col: 16)
|———————CursorKind.CALL_EXPR: strpbrk (Line: 508, Col: 34)
|————————CursorKind.UNEXPOSED_EXPR: strpbrk (Line: 508, Col: 34)
|—————————CursorKind.DECL_REF_EXPR: strpbrk (Line: 508, Col: 34)
|————————CursorKind.CXX_STATIC_CAST_EXPR:  (Line: 508, Col: 42)
|—————————CursorKind.UNEXPOSED_EXPR: _String (Line: 508, Col: 67)
|——————————CursorKind.UNEXPOSED_EXPR: _String (Line: 508, Col: 67)
|———————————CursorKind.DECL_REF_EXPR: _String (Line: 508, Col: 67)
|————————CursorKind.UNEXPOSED_EXPR: _Control (Line: 508, Col: 77)
|—————————CursorKind.DECL_REF_EXPR: _Control (Line: 508, Col: 77)
|———CursorKind.FUNCTION_DECL: strrchr(char *const, const int) (Line: 512, Col: 28)
|————CursorKind.PARM_DECL: _String (Line: 512, Col: 55)
|————CursorKind.PARM_DECL: _Ch (Line: 512, Col: 79)
|————CursorKind.COMPOUND_STMT:  (Line: 513, Col: 5)
|—————CursorKind.RETURN_STMT:  (Line: 514, Col: 9)
|——————CursorKind.CXX_CONST_CAST_EXPR:  (Line: 514, Col: 16)
|———————CursorKind.CALL_EXPR: strrchr (Line: 514, Col: 34)
|————————CursorKind.UNEXPOSED_EXPR: strrchr (Line: 514, Col: 34)
|—————————CursorKind.DECL_REF_EXPR: strrchr (Line: 514, Col: 34)
|————————CursorKind.CXX_STATIC_CAST_EXPR:  (Line: 514, Col: 42)
|—————————CursorKind.UNEXPOSED_EXPR: _String (Line: 514, Col: 67)
|——————————CursorKind.UNEXPOSED_EXPR: _String (Line: 514, Col: 67)
|———————————CursorKind.DECL_REF_EXPR: _String (Line: 514, Col: 67)
|————————CursorKind.UNEXPOSED_EXPR: _Ch (Line: 514, Col: 77)
|—————————CursorKind.DECL_REF_EXPR: _Ch (Line: 514, Col: 77)
|———CursorKind.FUNCTION_DECL: strstr(char *const, const char *const) (Line: 518, Col: 28)
|————CursorKind.PARM_DECL: _String (Line: 518, Col: 54)
|————CursorKind.PARM_DECL: _SubString (Line: 518, Col: 88)
|————CursorKind.COMPOUND_STMT:  (Line: 519, Col: 5)
|—————CursorKind.RETURN_STMT:  (Line: 520, Col: 9)
|——————CursorKind.CXX_CONST_CAST_EXPR:  (Line: 520, Col: 16)
|———————CursorKind.CALL_EXPR: strstr (Line: 520, Col: 34)
|————————CursorKind.UNEXPOSED_EXPR: strstr (Line: 520, Col: 34)
|—————————CursorKind.DECL_REF_EXPR: strstr (Line: 520, Col: 34)
|————————CursorKind.CXX_STATIC_CAST_EXPR:  (Line: 520, Col: 41)
|—————————CursorKind.UNEXPOSED_EXPR: _String (Line: 520, Col: 66)
|——————————CursorKind.UNEXPOSED_EXPR: _String (Line: 520, Col: 66)
|———————————CursorKind.DECL_REF_EXPR: _String (Line: 520, Col: 66)
|————————CursorKind.UNEXPOSED_EXPR: _SubString (Line: 520, Col: 76)
|—————————CursorKind.DECL_REF_EXPR: _SubString (Line: 520, Col: 76)
|——CursorKind.FUNCTION_DECL: strdup(const char *) (Line: 532, Col: 28)
|———CursorKind.UNEXPOSED_ATTR:  (Line: 531, Col: 20)
|———CursorKind.PARM_DECL: _String (Line: 533, Col: 32)
|——CursorKind.FUNCTION_DECL: strcmpi(const char *, const char *) (Line: 539, Col: 26)
|———CursorKind.UNEXPOSED_ATTR:  (Line: 538, Col: 20)
|———CursorKind.PARM_DECL: _String1 (Line: 540, Col: 28)
|———CursorKind.PARM_DECL: _String2 (Line: 541, Col: 28)
|——CursorKind.FUNCTION_DECL: stricmp(const char *, const char *) (Line: 545, Col: 26)
|———CursorKind.UNEXPOSED_ATTR:  (Line: 544, Col: 20)
|———CursorKind.PARM_DECL: _String1 (Line: 546, Col: 28)
|———CursorKind.PARM_DECL: _String2 (Line: 547, Col: 28)
|——CursorKind.FUNCTION_DECL: strlwr(char *) (Line: 551, Col: 28)
|———CursorKind.UNEXPOSED_ATTR:  (Line: 550, Col: 5)
|———CursorKind.PARM_DECL: _String (Line: 552, Col: 25)
|——CursorKind.FUNCTION_DECL: strnicmp(const char *, const char *, size_t) (Line: 556, Col: 26)
|———CursorKind.UNEXPOSED_ATTR:  (Line: 555, Col: 20)
|———CursorKind.PARM_DECL: _String1 (Line: 557, Col: 48)
|———CursorKind.PARM_DECL: _String2 (Line: 558, Col: 48)
|———CursorKind.PARM_DECL: _MaxCount (Line: 559, Col: 48)
|————CursorKind.TYPE_REF: size_t (Line: 559, Col: 36)
|——CursorKind.FUNCTION_DECL: strnset(char *, int, size_t) (Line: 563, Col: 28)
|———CursorKind.UNEXPOSED_ATTR:  (Line: 562, Col: 5)
|———CursorKind.PARM_DECL: _String (Line: 564, Col: 45)
|———CursorKind.PARM_DECL: _Value (Line: 565, Col: 45)
|———CursorKind.PARM_DECL: _MaxCount (Line: 566, Col: 45)
|————CursorKind.TYPE_REF: size_t (Line: 566, Col: 38)
|——CursorKind.FUNCTION_DECL: strrev(char *) (Line: 570, Col: 28)
|———CursorKind.UNEXPOSED_ATTR:  (Line: 569, Col: 5)
|———CursorKind.PARM_DECL: _String (Line: 571, Col: 25)
|——CursorKind.FUNCTION_DECL: strset(char *, int) (Line: 575, Col: 19)
|———CursorKind.UNEXPOSED_ATTR:  (Line: 574, Col: 5)
|———CursorKind.PARM_DECL: _String (Line: 576, Col: 25)
|———CursorKind.PARM_DECL: _Value (Line: 577, Col: 25)
|——CursorKind.FUNCTION_DECL: strupr(char *) (Line: 580, Col: 28)
|———CursorKind.UNEXPOSED_ATTR:  (Line: 579, Col: 5)
|———CursorKind.PARM_DECL: _String (Line: 581, Col: 25)
|—CursorKind.NAMESPACE: std (Line: 20, Col: 1)
|——CursorKind.USING_DECLARATION: size_t (Line: 24, Col: 25)
|———CursorKind.OVERLOADED_DECL_REF: size_t (Line: 24, Col: 25)
|——CursorKind.USING_DECLARATION: memchr (Line: 25, Col: 25)
|———CursorKind.OVERLOADED_DECL_REF: memchr (Line: 25, Col: 25)
|——CursorKind.USING_DECLARATION: memcmp (Line: 26, Col: 25)
|———CursorKind.OVERLOADED_DECL_REF: memcmp (Line: 26, Col: 25)
|——CursorKind.USING_DECLARATION: memcpy (Line: 27, Col: 25)
|———CursorKind.OVERLOADED_DECL_REF: memcpy (Line: 27, Col: 25)
|——CursorKind.USING_DECLARATION: memmove (Line: 28, Col: 25)
|———CursorKind.OVERLOADED_DECL_REF: memmove (Line: 28, Col: 25)
|——CursorKind.USING_DECLARATION: memset (Line: 29, Col: 25)
|———CursorKind.OVERLOADED_DECL_REF: memset (Line: 29, Col: 25)
|——CursorKind.USING_DECLARATION: strcat (Line: 30, Col: 25)
|———CursorKind.OVERLOADED_DECL_REF: strcat (Line: 30, Col: 25)
|——CursorKind.USING_DECLARATION: strchr (Line: 31, Col: 25)
|———CursorKind.OVERLOADED_DECL_REF: strchr (Line: 31, Col: 25)
|——CursorKind.USING_DECLARATION: strcmp (Line: 32, Col: 25)
|———CursorKind.OVERLOADED_DECL_REF: strcmp (Line: 32, Col: 25)
|——CursorKind.USING_DECLARATION: strcoll (Line: 33, Col: 25)
|———CursorKind.OVERLOADED_DECL_REF: strcoll (Line: 33, Col: 25)
|——CursorKind.USING_DECLARATION: strcpy (Line: 34, Col: 25)
|———CursorKind.OVERLOADED_DECL_REF: strcpy (Line: 34, Col: 25)
|——CursorKind.USING_DECLARATION: strcspn (Line: 35, Col: 25)
|———CursorKind.OVERLOADED_DECL_REF: strcspn (Line: 35, Col: 25)
|——CursorKind.USING_DECLARATION: strerror (Line: 36, Col: 25)
|———CursorKind.OVERLOADED_DECL_REF: strerror (Line: 36, Col: 25)
|——CursorKind.USING_DECLARATION: strlen (Line: 37, Col: 25)
|———CursorKind.OVERLOADED_DECL_REF: strlen (Line: 37, Col: 25)
|——CursorKind.USING_DECLARATION: strncat (Line: 38, Col: 25)
|———CursorKind.OVERLOADED_DECL_REF: strncat (Line: 38, Col: 25)
|——CursorKind.USING_DECLARATION: strncmp (Line: 39, Col: 25)
|———CursorKind.OVERLOADED_DECL_REF: strncmp (Line: 39, Col: 25)
|——CursorKind.USING_DECLARATION: strncpy (Line: 40, Col: 25)
|———CursorKind.OVERLOADED_DECL_REF: strncpy (Line: 40, Col: 25)
|——CursorKind.USING_DECLARATION: strpbrk (Line: 41, Col: 25)
|———CursorKind.OVERLOADED_DECL_REF: strpbrk (Line: 41, Col: 25)
|——CursorKind.USING_DECLARATION: strrchr (Line: 42, Col: 25)
|———CursorKind.OVERLOADED_DECL_REF: strrchr (Line: 42, Col: 25)
|——CursorKind.USING_DECLARATION: strspn (Line: 43, Col: 25)
|———CursorKind.OVERLOADED_DECL_REF: strspn (Line: 43, Col: 25)
|——CursorKind.USING_DECLARATION: strstr (Line: 44, Col: 25)
|———CursorKind.OVERLOADED_DECL_REF: strstr (Line: 44, Col: 25)
|——CursorKind.USING_DECLARATION: strtok (Line: 45, Col: 25)
|———CursorKind.OVERLOADED_DECL_REF: strtok (Line: 45, Col: 25)
|——CursorKind.USING_DECLARATION: strxfrm (Line: 46, Col: 25)
|———CursorKind.OVERLOADED_DECL_REF: strxfrm (Line: 46, Col: 25)
|—CursorKind.VAR_DECL: CANTEST_ID (Line: 20, Col: 22)
|—CursorKind.VAR_DECL: rxTask (Line: 22, Col: 21)
|—CursorKind.VAR_DECL: CAN (Line: 24, Col: 9)
|—CursorKind.VAR_DECL: terminate_receiver (Line: 25, Col: 13)
|——CursorKind.CXX_BOOL_LITERAL_EXPR:  (Line: 25, Col: 34)
|—CursorKind.VAR_DECL: do_recover (Line: 26, Col: 13)
|——CursorKind.CXX_BOOL_LITERAL_EXPR:  (Line: 26, Col: 26)
|—CursorKind.FUNCTION_DECL: CANReceiveTask(void *) (Line: 29, Col: 6)
|——CursorKind.PARM_DECL: arg (Line: 29, Col: 27)
|——CursorKind.COMPOUND_STMT:  (Line: 30, Col: 1)
|———CursorKind.DECL_STMT:  (Line: 31, Col: 5)
|————CursorKind.VAR_DECL: can (Line: 31, Col: 13)
|———CursorKind.DECL_STMT:  (Line: 32, Col: 5)
|————CursorKind.VAR_DECL: tick (Line: 32, Col: 18)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 32, Col: 25)
|——————CursorKind.INTEGER_LITERAL:  (Line: 32, Col: 25)
|———CursorKind.IF_STMT:  (Line: 34, Col: 5)
|————CursorKind.UNARY_OPERATOR:  (Line: 34, Col: 10)
|—————CursorKind.CALL_EXPR:  (Line: 34, Col: 12)
|——————CursorKind.MEMBER_REF_EXPR:  (Line: 34, Col: 12)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 34, Col: 12)
|————CursorKind.COMPOUND_STMT:  (Line: 35, Col: 5)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 37, Col: 9)
|——————CursorKind.DECL_REF_EXPR:  (Line: 37, Col: 9)
|———————CursorKind.OVERLOADED_DECL_REF: vTaskDelete (Line: 37, Col: 9)
|——————CursorKind.INTEGER_LITERAL:  (Line: 37, Col: 21)
|———CursorKind.DECL_STMT:  (Line: 41, Col: 5)
|————CursorKind.VAR_DECL: msg (Line: 41, Col: 17)
|———CursorKind.CALL_EXPR:  (Line: 42, Col: 5)
|————CursorKind.MEMBER_REF_EXPR:  (Line: 42, Col: 5)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 42, Col: 5)
|——————CursorKind.DECL_REF_EXPR: msg (Line: 42, Col: 5)
|————CursorKind.INTEGER_LITERAL:  (Line: 42, Col: 16)
|———CursorKind.DO_STMT:  (Line: 43, Col: 5)
|————CursorKind.COMPOUND_STMT:  (Line: 43, Col: 8)
|—————CursorKind.DECL_STMT:  (Line: 45, Col: 9)
|——————CursorKind.VAR_DECL: rx (Line: 45, Col: 24)
|—————CursorKind.IF_STMT:  (Line: 46, Col: 9)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 46, Col: 13)
|——————CursorKind.COMPOUND_STMT:  (Line: 47, Col: 9)
|———————CursorKind.CALL_EXPR:  (Line: 48, Col: 13)
|————————CursorKind.MEMBER_REF_EXPR:  (Line: 48, Col: 13)
|—————————CursorKind.UNEXPOSED_EXPR:  (Line: 48, Col: 13)
|——————————CursorKind.DECL_REF_EXPR: msg (Line: 48, Col: 13)
|————————CursorKind.CSTYLE_CAST_EXPR:  (Line: 48, Col: 24)
|—————————CursorKind.MEMBER_REF_EXPR:  (Line: 48, Col: 32)
|——————————CursorKind.UNEXPOSED_EXPR:  (Line: 48, Col: 32)
|————————CursorKind.MEMBER_REF_EXPR:  (Line: 48, Col: 41)
|—————————CursorKind.UNEXPOSED_EXPR:  (Line: 48, Col: 41)
|———————CursorKind.DECL_STMT:  (Line: 50, Col: 13)
|————————CursorKind.VAR_DECL: dl (Line: 50, Col: 18)
|—————————CursorKind.CALL_EXPR:  (Line: 50, Col: 23)
|——————————CursorKind.MEMBER_REF_EXPR:  (Line: 50, Col: 23)
|———————————CursorKind.MEMBER_REF_EXPR:  (Line: 50, Col: 23)
|————————————CursorKind.UNEXPOSED_EXPR:  (Line: 50, Col: 23)
|——————————CursorKind.MEMBER_REF_EXPR:  (Line: 50, Col: 40)
|———————————CursorKind.UNEXPOSED_EXPR:  (Line: 50, Col: 40)
|———————CursorKind.IF_STMT:  (Line: 51, Col: 13)
|————————CursorKind.BINARY_OPERATOR:  (Line: 51, Col: 18)
|—————————CursorKind.UNEXPOSED_EXPR:  (Line: 51, Col: 18)
|——————————CursorKind.DECL_REF_EXPR: dl (Line: 51, Col: 18)
|—————————CursorKind.CALL_EXPR:  (Line: 51, Col: 24)
|——————————CursorKind.MEMBER_REF_EXPR:  (Line: 51, Col: 24)
|———————————CursorKind.MEMBER_REF_EXPR:  (Line: 51, Col: 24)
|————————————CursorKind.UNEXPOSED_EXPR:  (Line: 51, Col: 24)
|————————CursorKind.COMPOUND_STMT:  (Line: 51, Col: 44)
|—————————CursorKind.CALL_EXPR:  (Line: 52, Col: 17)
|——————————CursorKind.MEMBER_REF_EXPR:  (Line: 52, Col: 17)
|———————————CursorKind.MEMBER_REF_EXPR:  (Line: 52, Col: 17)
|————————————CursorKind.UNEXPOSED_EXPR:  (Line: 52, Col: 17)
|—————————————CursorKind.DECL_REF_EXPR: dl (Line: 52, Col: 17)
|——————————CursorKind.CALL_EXPR:  (Line: 52, Col: 37)
|———————————CursorKind.MEMBER_REF_EXPR:  (Line: 52, Col: 37)
|————————————CursorKind.UNEXPOSED_EXPR:  (Line: 52, Col: 37)
|——————————CursorKind.CALL_EXPR:  (Line: 52, Col: 49)
|———————————CursorKind.MEMBER_REF_EXPR:  (Line: 52, Col: 49)
|————————————CursorKind.UNEXPOSED_EXPR:  (Line: 52, Col: 49)
|——————CursorKind.COMPOUND_STMT:  (Line: 56, Col: 9)
|—————CursorKind.IF_STMT:  (Line: 63, Col: 9)
|——————CursorKind.UNEXPOSED_EXPR: terminate_receiver (Line: 63, Col: 14)
|———————CursorKind.DECL_REF_EXPR: terminate_receiver (Line: 63, Col: 14)
|——————CursorKind.COMPOUND_STMT:  (Line: 63, Col: 35)
|———————CursorKind.BREAK_STMT:  (Line: 63, Col: 37)
|—————CursorKind.IF_STMT:  (Line: 64, Col: 9)
|——————CursorKind.UNEXPOSED_EXPR: do_recover (Line: 64, Col: 14)
|———————CursorKind.DECL_REF_EXPR: do_recover (Line: 64, Col: 14)
|——————CursorKind.COMPOUND_STMT:  (Line: 64, Col: 27)
|———————CursorKind.CALL_EXPR:  (Line: 65, Col: 13)
|————————CursorKind.MEMBER_REF_EXPR:  (Line: 65, Col: 13)
|—————————CursorKind.UNEXPOSED_EXPR:  (Line: 65, Col: 13)
|——————————CursorKind.DECL_REF_EXPR: can (Line: 65, Col: 13)
|———————CursorKind.BINARY_OPERATOR:  (Line: 66, Col: 13)
|————————CursorKind.DECL_REF_EXPR: do_recover (Line: 66, Col: 13)
|————————CursorKind.CXX_BOOL_LITERAL_EXPR:  (Line: 66, Col: 26)
|—————CursorKind.IF_STMT:  (Line: 69, Col: 9)
|——————CursorKind.BINARY_OPERATOR:  (Line: 69, Col: 13)
|———————CursorKind.PAREN_EXPR:  (Line: 69, Col: 13)
|————————CursorKind.BINARY_OPERATOR:  (Line: 69, Col: 14)
|—————————CursorKind.UNARY_OPERATOR:  (Line: 69, Col: 14)
|——————————CursorKind.DECL_REF_EXPR: tick (Line: 69, Col: 14)
|—————————CursorKind.UNEXPOSED_EXPR:  (Line: 69, Col: 23)
|——————————CursorKind.INTEGER_LITERAL:  (Line: 69, Col: 23)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 69, Col: 31)
|————————CursorKind.INTEGER_LITERAL:  (Line: 69, Col: 31)
|——————CursorKind.COMPOUND_STMT:  (Line: 70, Col: 9)
|———————CursorKind.IF_STMT:  (Line: 71, Col: 13)
|————————CursorKind.BINARY_OPERATOR:  (Line: 71, Col: 17)
|—————————CursorKind.CALL_EXPR:  (Line: 71, Col: 17)
|——————————CursorKind.DECL_REF_EXPR:  (Line: 71, Col: 17)
|———————————CursorKind.OVERLOADED_DECL_REF: uxTaskGetStackHighWaterMark (Line: 71, Col: 17)
|——————————CursorKind.UNEXPOSED_EXPR:  (Line: 71, Col: 45)
|—————————CursorKind.INTEGER_LITERAL:  (Line: 71, Col: 55)
|————————CursorKind.COMPOUND_STMT:  (Line: 71, Col: 60)
|————CursorKind.CXX_BOOL_LITERAL_EXPR:  (Line: 75, Col: 15)
|———CursorKind.CALL_EXPR:  (Line: 78, Col: 5)
|————CursorKind.MEMBER_REF_EXPR:  (Line: 78, Col: 5)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 78, Col: 5)
|——————CursorKind.DECL_REF_EXPR: can (Line: 78, Col: 5)
|———CursorKind.BINARY_OPERATOR:  (Line: 80, Col: 5)
|————CursorKind.DECL_REF_EXPR: terminate_receiver (Line: 80, Col: 5)
|————CursorKind.CXX_BOOL_LITERAL_EXPR:  (Line: 80, Col: 26)
|———CursorKind.BINARY_OPERATOR:  (Line: 81, Col: 5)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 81, Col: 5)
|—————CursorKind.DECL_REF_EXPR: rxTask (Line: 81, Col: 5)
|————CursorKind.CXX_NULL_PTR_LITERAL_EXPR:  (Line: 81, Col: 14)
|———CursorKind.UNEXPOSED_EXPR:  (Line: 82, Col: 5)
|————CursorKind.DECL_REF_EXPR:  (Line: 82, Col: 5)
|—————CursorKind.OVERLOADED_DECL_REF: vTaskDelete (Line: 82, Col: 5)
|————CursorKind.INTEGER_LITERAL:  (Line: 82, Col: 17)
