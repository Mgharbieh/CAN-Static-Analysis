an-usb-to-can-adaptor-mcxn947-source\can_interface.c

|CursorKind.TRANSLATION_UNIT: source\can_interface.c (Line: 0, Col: 0)
|—CursorKind.VAR_DECL: flexcanHandle (Line: 58, Col: 18)
|—CursorKind.VAR_DECL: txComplete (Line: 59, Col: 15)
|—CursorKind.VAR_DECL: rxComplete (Line: 60, Col: 15)
|—CursorKind.VAR_DECL: txXfer (Line: 61, Col: 23)
|—CursorKind.VAR_DECL: rxXfer (Line: 62, Col: 23)
|—CursorKind.VAR_DECL: txFrame (Line: 66, Col: 17)
|—CursorKind.VAR_DECL: flag (Line: 72, Col: 14)
|—CursorKind.VAR_DECL: swapRxData (Line: 74, Col: 9)
|——CursorKind.INTEGER_LITERAL:  (Line: 74, Col: 20)
|—CursorKind.VAR_DECL: fdBitrate (Line: 76, Col: 10)
|—CursorKind.VAR_DECL: bitrate (Line: 77, Col: 10)
|—CursorKind.FUNCTION_DECL: CANFD_DLC_TO_BYTE(int) (Line: 84, Col: 9)
|——CursorKind.PARM_DECL: dlc (Line: 84, Col: 35)
|——CursorKind.COMPOUND_STMT:  (Line: 85, Col: 1)
|———CursorKind.SWITCH_STMT:  (Line: 88, Col: 3)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 88, Col: 10)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 88, Col: 10)
|————CursorKind.COMPOUND_STMT:  (Line: 89, Col: 3)
|—————CursorKind.CASE_STMT:  (Line: 90, Col: 5)
|——————CursorKind.INTEGER_LITERAL:  (Line: 90, Col: 10)
|——————CursorKind.CASE_STMT:  (Line: 91, Col: 5)
|———————CursorKind.INTEGER_LITERAL:  (Line: 91, Col: 10)
|———————CursorKind.CASE_STMT:  (Line: 92, Col: 5)
|————————CursorKind.INTEGER_LITERAL:  (Line: 92, Col: 10)
|————————CursorKind.CASE_STMT:  (Line: 93, Col: 5)
|—————————CursorKind.INTEGER_LITERAL:  (Line: 93, Col: 10)
|—————————CursorKind.CASE_STMT:  (Line: 94, Col: 5)
|——————————CursorKind.INTEGER_LITERAL:  (Line: 94, Col: 10)
|——————————CursorKind.CASE_STMT:  (Line: 95, Col: 5)
|———————————CursorKind.INTEGER_LITERAL:  (Line: 95, Col: 10)
|———————————CursorKind.CASE_STMT:  (Line: 96, Col: 5)
|————————————CursorKind.INTEGER_LITERAL:  (Line: 96, Col: 10)
|————————————CursorKind.CASE_STMT:  (Line: 97, Col: 5)
|—————————————CursorKind.INTEGER_LITERAL:  (Line: 97, Col: 10)
|—————————————CursorKind.NULL_STMT:  (Line: 0, Col: 0)
|—————CursorKind.BREAK_STMT:  (Line: 99, Col: 7)
|—————CursorKind.CASE_STMT:  (Line: 100, Col: 5)
|——————CursorKind.INTEGER_LITERAL:  (Line: 100, Col: 10)
|——————CursorKind.CASE_STMT:  (Line: 101, Col: 5)
|———————CursorKind.INTEGER_LITERAL:  (Line: 101, Col: 10)
|———————CursorKind.CASE_STMT:  (Line: 102, Col: 5)
|————————CursorKind.INTEGER_LITERAL:  (Line: 102, Col: 10)
|————————CursorKind.CASE_STMT:  (Line: 103, Col: 5)
|—————————CursorKind.INTEGER_LITERAL:  (Line: 103, Col: 10)
|—————————CursorKind.NULL_STMT:  (Line: 0, Col: 0)
|—————CursorKind.BREAK_STMT:  (Line: 105, Col: 7)
|—————CursorKind.CASE_STMT:  (Line: 106, Col: 5)
|——————CursorKind.INTEGER_LITERAL:  (Line: 106, Col: 10)
|——————CursorKind.NULL_STMT:  (Line: 0, Col: 0)
|—————CursorKind.BREAK_STMT:  (Line: 108, Col: 7)
|—————CursorKind.CASE_STMT:  (Line: 109, Col: 5)
|——————CursorKind.INTEGER_LITERAL:  (Line: 109, Col: 10)
|——————CursorKind.NULL_STMT:  (Line: 0, Col: 0)
|—————CursorKind.BREAK_STMT:  (Line: 111, Col: 7)
|—————CursorKind.CASE_STMT:  (Line: 112, Col: 5)
|——————CursorKind.INTEGER_LITERAL:  (Line: 112, Col: 10)
|——————CursorKind.NULL_STMT:  (Line: 0, Col: 0)
|—————CursorKind.BREAK_STMT:  (Line: 114, Col: 7)
|—CursorKind.FUNCTION_DECL: FLEXCAN_CALLBACK(int) (Line: 128, Col: 8)
|——CursorKind.PARM_DECL: flexcan_callback (Line: 128, Col: 25)
|——CursorKind.COMPOUND_STMT:  (Line: 129, Col: 1)
|———CursorKind.SWITCH_STMT:  (Line: 130, Col: 5)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 130, Col: 13)
|————CursorKind.COMPOUND_STMT:  (Line: 131, Col: 5)
|—————CursorKind.IF_STMT:  (Line: 133, Col: 13)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 133, Col: 17)
|——————CursorKind.COMPOUND_STMT:  (Line: 134, Col: 13)
|—————CursorKind.BREAK_STMT:  (Line: 138, Col: 13)
|—————CursorKind.IF_STMT:  (Line: 141, Col: 13)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 141, Col: 17)
|——————CursorKind.COMPOUND_STMT:  (Line: 142, Col: 13)
|—————CursorKind.BREAK_STMT:  (Line: 146, Col: 13)
|—————CursorKind.DEFAULT_STMT:  (Line: 148, Col: 9)
|——————CursorKind.BREAK_STMT:  (Line: 149, Col: 13)
|—CursorKind.FUNCTION_DECL: APPCanStart(int *) (Line: 160, Col: 6)
|——CursorKind.PARM_DECL: param (Line: 160, Col: 27)
|——CursorKind.COMPOUND_STMT:  (Line: 161, Col: 1)
|———CursorKind.DECL_STMT:  (Line: 165, Col: 2)
|————CursorKind.VAR_DECL: fdBitFrame (Line: 165, Col: 7)
|———CursorKind.IF_STMT:  (Line: 167, Col: 2)
|————CursorKind.BINARY_OPERATOR:  (Line: 167, Col: 5)
|—————CursorKind.ARRAY_SUBSCRIPT_EXPR:  (Line: 167, Col: 5)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 167, Col: 5)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 167, Col: 5)
|——————CursorKind.INTEGER_LITERAL:  (Line: 167, Col: 11)
|—————CursorKind.CHARACTER_LITERAL:  (Line: 167, Col: 17)
|————CursorKind.COMPOUND_STMT:  (Line: 168, Col: 2)
|—————CursorKind.BINARY_OPERATOR:  (Line: 169, Col: 3)
|——————CursorKind.DECL_REF_EXPR: fdBitFrame (Line: 169, Col: 3)
|——————CursorKind.ARRAY_SUBSCRIPT_EXPR:  (Line: 169, Col: 16)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 169, Col: 16)
|————————CursorKind.UNEXPOSED_EXPR:  (Line: 169, Col: 16)
|———————CursorKind.INTEGER_LITERAL:  (Line: 169, Col: 22)
|————CursorKind.COMPOUND_STMT:  (Line: 172, Col: 2)
|—————CursorKind.BINARY_OPERATOR:  (Line: 173, Col: 3)
|——————CursorKind.DECL_REF_EXPR: fdBitFrame (Line: 173, Col: 3)
|——————CursorKind.ARRAY_SUBSCRIPT_EXPR:  (Line: 173, Col: 16)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 173, Col: 16)
|————————CursorKind.UNEXPOSED_EXPR:  (Line: 173, Col: 16)
|———————CursorKind.INTEGER_LITERAL:  (Line: 173, Col: 22)
|———CursorKind.SWITCH_STMT:  (Line: 176, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 176, Col: 9)
|—————CursorKind.ARRAY_SUBSCRIPT_EXPR:  (Line: 176, Col: 9)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 176, Col: 9)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 176, Col: 9)
|——————CursorKind.INTEGER_LITERAL:  (Line: 176, Col: 15)
|————CursorKind.COMPOUND_STMT:  (Line: 177, Col: 2)
|—————CursorKind.CASE_STMT:  (Line: 178, Col: 3)
|——————CursorKind.CHARACTER_LITERAL:  (Line: 178, Col: 8)
|——————CursorKind.IF_STMT:  (Line: 179, Col: 4)
|———————CursorKind.BINARY_OPERATOR:  (Line: 179, Col: 7)
|————————CursorKind.ARRAY_SUBSCRIPT_EXPR:  (Line: 179, Col: 7)
|—————————CursorKind.UNEXPOSED_EXPR:  (Line: 179, Col: 7)
|——————————CursorKind.UNEXPOSED_EXPR:  (Line: 179, Col: 7)
|—————————CursorKind.INTEGER_LITERAL:  (Line: 179, Col: 13)
|————————CursorKind.CHARACTER_LITERAL:  (Line: 179, Col: 19)
|———————CursorKind.COMPOUND_STMT:  (Line: 180, Col: 4)
|————————CursorKind.BINARY_OPERATOR:  (Line: 181, Col: 5)
|—————————CursorKind.UNEXPOSED_EXPR:  (Line: 181, Col: 5)
|——————————CursorKind.DECL_REF_EXPR: bitrate (Line: 181, Col: 5)
|—————————CursorKind.INTEGER_LITERAL:  (Line: 181, Col: 15)
|———————CursorKind.COMPOUND_STMT:  (Line: 184, Col: 4)
|————————CursorKind.BINARY_OPERATOR:  (Line: 185, Col: 5)
|—————————CursorKind.UNEXPOSED_EXPR:  (Line: 185, Col: 5)
|——————————CursorKind.DECL_REF_EXPR: bitrate (Line: 185, Col: 5)
|—————————CursorKind.INTEGER_LITERAL:  (Line: 185, Col: 15)
|—————CursorKind.BREAK_STMT:  (Line: 187, Col: 4)
|—————CursorKind.CASE_STMT:  (Line: 188, Col: 3)
|——————CursorKind.CHARACTER_LITERAL:  (Line: 188, Col: 8)
|——————CursorKind.BINARY_OPERATOR:  (Line: 189, Col: 4)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 189, Col: 4)
|————————CursorKind.DECL_REF_EXPR: bitrate (Line: 189, Col: 4)
|———————CursorKind.INTEGER_LITERAL:  (Line: 189, Col: 14)
|—————CursorKind.BREAK_STMT:  (Line: 190, Col: 4)
|—————CursorKind.CASE_STMT:  (Line: 191, Col: 3)
|——————CursorKind.CHARACTER_LITERAL:  (Line: 191, Col: 8)
|——————CursorKind.BINARY_OPERATOR:  (Line: 192, Col: 4)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 192, Col: 4)
|————————CursorKind.DECL_REF_EXPR: bitrate (Line: 192, Col: 4)
|———————CursorKind.INTEGER_LITERAL:  (Line: 192, Col: 14)
|—————CursorKind.BREAK_STMT:  (Line: 193, Col: 4)
|—————CursorKind.CASE_STMT:  (Line: 194, Col: 3)
|——————CursorKind.CHARACTER_LITERAL:  (Line: 194, Col: 8)
|——————CursorKind.BINARY_OPERATOR:  (Line: 195, Col: 4)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 195, Col: 4)
|————————CursorKind.DECL_REF_EXPR: bitrate (Line: 195, Col: 4)
|———————CursorKind.INTEGER_LITERAL:  (Line: 195, Col: 14)
|—————CursorKind.BREAK_STMT:  (Line: 196, Col: 4)
|—————CursorKind.DEFAULT_STMT:  (Line: 197, Col: 3)
|——————CursorKind.BINARY_OPERATOR:  (Line: 198, Col: 4)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 198, Col: 4)
|————————CursorKind.DECL_REF_EXPR: bitrate (Line: 198, Col: 4)
|———————CursorKind.INTEGER_LITERAL:  (Line: 198, Col: 14)
|—————CursorKind.BREAK_STMT:  (Line: 199, Col: 4)
|———CursorKind.SWITCH_STMT:  (Line: 202, Col: 2)
|————CursorKind.UNEXPOSED_EXPR: fdBitFrame (Line: 202, Col: 9)
|—————CursorKind.UNEXPOSED_EXPR: fdBitFrame (Line: 202, Col: 9)
|——————CursorKind.DECL_REF_EXPR: fdBitFrame (Line: 202, Col: 9)
|————CursorKind.COMPOUND_STMT:  (Line: 203, Col: 2)
|—————CursorKind.CASE_STMT:  (Line: 204, Col: 3)
|——————CursorKind.CHARACTER_LITERAL:  (Line: 204, Col: 8)
|——————CursorKind.BINARY_OPERATOR:  (Line: 205, Col: 4)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 205, Col: 4)
|————————CursorKind.DECL_REF_EXPR: fdBitrate (Line: 205, Col: 4)
|———————CursorKind.INTEGER_LITERAL:  (Line: 205, Col: 16)
|—————CursorKind.BREAK_STMT:  (Line: 206, Col: 4)
|—————CursorKind.CASE_STMT:  (Line: 207, Col: 3)
|——————CursorKind.CHARACTER_LITERAL:  (Line: 207, Col: 8)
|——————CursorKind.BINARY_OPERATOR:  (Line: 208, Col: 4)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 208, Col: 4)
|————————CursorKind.DECL_REF_EXPR: fdBitrate (Line: 208, Col: 4)
|———————CursorKind.INTEGER_LITERAL:  (Line: 208, Col: 16)
|—————CursorKind.BREAK_STMT:  (Line: 209, Col: 4)
|—————CursorKind.CASE_STMT:  (Line: 210, Col: 3)
|——————CursorKind.CHARACTER_LITERAL:  (Line: 210, Col: 8)
|——————CursorKind.BINARY_OPERATOR:  (Line: 211, Col: 4)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 211, Col: 4)
|————————CursorKind.DECL_REF_EXPR: fdBitrate (Line: 211, Col: 4)
|———————CursorKind.INTEGER_LITERAL:  (Line: 211, Col: 16)
|—————CursorKind.BREAK_STMT:  (Line: 212, Col: 4)
|—————CursorKind.CASE_STMT:  (Line: 213, Col: 3)
|——————CursorKind.CHARACTER_LITERAL:  (Line: 213, Col: 8)
|——————CursorKind.BINARY_OPERATOR:  (Line: 214, Col: 4)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 214, Col: 4)
|————————CursorKind.DECL_REF_EXPR: fdBitrate (Line: 214, Col: 4)
|———————CursorKind.INTEGER_LITERAL:  (Line: 214, Col: 16)
|—————CursorKind.BREAK_STMT:  (Line: 215, Col: 4)
|———CursorKind.CALL_EXPR: APPCanInit (Line: 219, Col: 2)
|————CursorKind.UNEXPOSED_EXPR: APPCanInit (Line: 219, Col: 2)
|—————CursorKind.DECL_REF_EXPR: APPCanInit (Line: 219, Col: 2)
|—CursorKind.FUNCTION_DECL: APPCanInit() (Line: 241, Col: 6)
|——CursorKind.COMPOUND_STMT:  (Line: 242, Col: 1)
|———CursorKind.CSTYLE_CAST_EXPR:  (Line: 251, Col: 5)
|————CursorKind.CALL_EXPR: PRINTF (Line: 251, Col: 5)
|—————CursorKind.UNEXPOSED_EXPR: PRINTF (Line: 251, Col: 5)
|——————CursorKind.DECL_REF_EXPR: PRINTF (Line: 251, Col: 5)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 251, Col: 14)
|——————CursorKind.STRING_LITERAL: "\r\n== USB Adapter Example -- Start.==\r\n\r\n" (Line: 251, Col: 14)
|———CursorKind.IF_STMT:  (Line: 302, Col: 5)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 302, Col: 9)
|————CursorKind.COMPOUND_STMT:  (Line: 303, Col: 5)
|————CursorKind.COMPOUND_STMT:  (Line: 308, Col: 5)
|—————CursorKind.CSTYLE_CAST_EXPR:  (Line: 309, Col: 9)
|——————CursorKind.CALL_EXPR: PRINTF (Line: 309, Col: 9)
|———————CursorKind.UNEXPOSED_EXPR: PRINTF (Line: 309, Col: 9)
|————————CursorKind.DECL_REF_EXPR: PRINTF (Line: 309, Col: 9)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 309, Col: 18)
|————————CursorKind.STRING_LITERAL: "No found Improved Timing Configuration. Just used default configuration\r\n\r\n" (Line: 309, Col: 18)
|—CursorKind.FUNCTION_DECL: APPCanSend(int, int *, int) (Line: 352, Col: 10)
|——CursorKind.PARM_DECL: id (Line: 352, Col: 30)
|——CursorKind.PARM_DECL: buff (Line: 352, Col: 43)
|——CursorKind.PARM_DECL: len (Line: 352, Col: 58)
|——CursorKind.COMPOUND_STMT:  (Line: 353, Col: 1)
|———CursorKind.BINARY_OPERATOR:  (Line: 360, Col: 5)
|————CursorKind.MEMBER_REF_EXPR:  (Line: 360, Col: 5)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 360, Col: 5)
|——————CursorKind.DECL_REF_EXPR: txFrame (Line: 360, Col: 5)
|————CursorKind.CALL_EXPR: FLEXCAN_ID_STD (Line: 360, Col: 22)
|—————CursorKind.DECL_REF_EXPR: FLEXCAN_ID_STD (Line: 360, Col: 22)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 360, Col: 37)
|———CursorKind.CSTYLE_CAST_EXPR:  (Line: 377, Col: 5)
|————CursorKind.CALL_EXPR: PRINTF (Line: 377, Col: 5)
|—————CursorKind.UNEXPOSED_EXPR: PRINTF (Line: 377, Col: 5)
|——————CursorKind.DECL_REF_EXPR: PRINTF (Line: 377, Col: 5)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 377, Col: 14)
|——————CursorKind.STRING_LITERAL: "Send message from MB%d to MB%d\r\n" (Line: 377, Col: 14)
|—————CursorKind.PAREN_EXPR:  (Line: 377, Col: 52)
|——————CursorKind.INTEGER_LITERAL:  (Line: 377, Col: 52)
|—————CursorKind.PAREN_EXPR:  (Line: 377, Col: 75)
|——————CursorKind.INTEGER_LITERAL:  (Line: 377, Col: 75)
|———CursorKind.CSTYLE_CAST_EXPR:  (Line: 386, Col: 5)
|————CursorKind.CALL_EXPR: PRINTF (Line: 386, Col: 5)
|—————CursorKind.DECL_REF_EXPR: PRINTF (Line: 386, Col: 5)
|—————CursorKind.STRING_LITERAL: "tx ID = 0x%x\r\n" (Line: 386, Col: 14)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 386, Col: 34)
|———CursorKind.CSTYLE_CAST_EXPR:  (Line: 387, Col: 5)
|————CursorKind.CALL_EXPR: PRINTF (Line: 387, Col: 5)
|—————CursorKind.DECL_REF_EXPR: PRINTF (Line: 387, Col: 5)
|—————CursorKind.STRING_LITERAL: "tx word0 = 0x%x\r\n" (Line: 387, Col: 14)
|—————CursorKind.MEMBER_REF_EXPR:  (Line: 387, Col: 37)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 387, Col: 37)
|———CursorKind.CSTYLE_CAST_EXPR:  (Line: 388, Col: 5)
|————CursorKind.CALL_EXPR: PRINTF (Line: 388, Col: 5)
|—————CursorKind.DECL_REF_EXPR: PRINTF (Line: 388, Col: 5)
|—————CursorKind.STRING_LITERAL: "tx word1 = 0x%x\r\n" (Line: 388, Col: 14)
|—————CursorKind.MEMBER_REF_EXPR:  (Line: 388, Col: 37)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 388, Col: 37)
|———CursorKind.BINARY_OPERATOR:  (Line: 396, Col: 5)
|————CursorKind.MEMBER_REF_EXPR:  (Line: 396, Col: 5)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 396, Col: 5)
|——————CursorKind.DECL_REF_EXPR: txXfer (Line: 396, Col: 5)
|————CursorKind.UNARY_OPERATOR:  (Line: 396, Col: 20)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 396, Col: 21)
|—CursorKind.FUNCTION_DECL: endianSwap4bytes(int) (Line: 410, Col: 17)
|——CursorKind.PARM_DECL: var (Line: 410, Col: 43)
|——CursorKind.COMPOUND_STMT:  (Line: 411, Col: 1)
|—CursorKind.FUNCTION_DECL: endianSwapBuffer(int *, int *, int) (Line: 429, Col: 13)
|——CursorKind.PARM_DECL: dBuff (Line: 429, Col: 40)
|——CursorKind.PARM_DECL: sBuff (Line: 429, Col: 57)
|——CursorKind.PARM_DECL: length (Line: 429, Col: 72)
|——CursorKind.COMPOUND_STMT:  (Line: 430, Col: 1)
|———CursorKind.BINARY_OPERATOR:  (Line: 433, Col: 3)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 433, Col: 3)
|—————CursorKind.DECL_REF_EXPR: length (Line: 433, Col: 3)
|————CursorKind.BINARY_OPERATOR:  (Line: 433, Col: 12)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 433, Col: 12)
|—————CursorKind.INTEGER_LITERAL:  (Line: 433, Col: 21)
|—CursorKind.FUNCTION_DECL: APPUSBTinCanRxCallback(int, int, int *, int, int) (Line: 453, Col: 6)
|——CursorKind.PARM_DECL: id (Line: 453, Col: 38)
|——CursorKind.PARM_DECL: extId (Line: 453, Col: 50)
|——CursorKind.PARM_DECL: buf (Line: 453, Col: 66)
|——CursorKind.PARM_DECL: dlc (Line: 454, Col: 37)
|——CursorKind.PARM_DECL: lenInBytes (Line: 454, Col: 51)
|——CursorKind.COMPOUND_STMT:  (Line: 455, Col: 1)
|———CursorKind.CALL_EXPR: usb_to_can_interfacez (Line: 459, Col: 3)
|————CursorKind.DECL_REF_EXPR: usb_to_can_interfacez (Line: 459, Col: 3)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 459, Col: 25)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 459, Col: 29)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 459, Col: 36)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 459, Col: 41)
|—CursorKind.FUNCTION_DECL: AppCANRequestRxTask() (Line: 465, Col: 6)
|——CursorKind.COMPOUND_STMT:  (Line: 466, Col: 1)
|———CursorKind.IF_STMT:  (Line: 468, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 468, Col: 5)
|————CursorKind.COMPOUND_STMT:  (Line: 469, Col: 2)
|—————CursorKind.IF_STMT:  (Line: 474, Col: 6)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 474, Col: 9)
|——————CursorKind.COMPOUND_STMT:  (Line: 475, Col: 6)
|———————CursorKind.CALL_EXPR: PRINTF (Line: 477, Col: 4)
|————————CursorKind.UNEXPOSED_EXPR: PRINTF (Line: 477, Col: 4)
|—————————CursorKind.DECL_REF_EXPR: PRINTF (Line: 477, Col: 4)
|————————CursorKind.UNEXPOSED_EXPR:  (Line: 477, Col: 11)
|—————————CursorKind.STRING_LITERAL: "Reception complete!\r\n\r\n" (Line: 477, Col: 11)
|—————CursorKind.BINARY_OPERATOR:  (Line: 500, Col: 3)
|——————CursorKind.MEMBER_REF_EXPR:  (Line: 500, Col: 3)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 500, Col: 3)
|————————CursorKind.DECL_REF_EXPR: txFrame (Line: 500, Col: 3)
|——————CursorKind.INTEGER_LITERAL:  (Line: 500, Col: 16)
