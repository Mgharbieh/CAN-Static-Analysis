can_bus-driver\ctu_can_fd_hw.c

|CursorKind.TRANSLATION_UNIT: driver\ctu_can_fd_hw.c (Line: 0, Col: 0)
|—CursorKind.FUNCTION_DECL: ctucan_hw_write32(struct ctucan_hw_priv *, enum ctu_can_fd_can_registers, int) (Line: 40, Col: 6)
|——CursorKind.PARM_DECL: priv (Line: 40, Col: 47)
|———CursorKind.TYPE_REF: struct ctucan_hw_priv (Line: 40, Col: 31)
|——CursorKind.PARM_DECL: reg (Line: 41, Col: 34)
|———CursorKind.TYPE_REF: enum ctu_can_fd_can_registers (Line: 41, Col: 9)
|——CursorKind.PARM_DECL: val (Line: 41, Col: 43)
|——CursorKind.COMPOUND_STMT:  (Line: 42, Col: 1)
|———CursorKind.CALL_EXPR: iowrite32 (Line: 43, Col: 2)
|————CursorKind.DECL_REF_EXPR: iowrite32 (Line: 43, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 43, Col: 12)
|————CursorKind.BINARY_OPERATOR:  (Line: 43, Col: 17)
|—————CursorKind.CSTYLE_CAST_EXPR:  (Line: 43, Col: 17)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 43, Col: 25)
|———————CursorKind.DECL_REF_EXPR: priv (Line: 43, Col: 25)
|—————CursorKind.UNEXPOSED_EXPR: reg (Line: 43, Col: 42)
|——————CursorKind.UNEXPOSED_EXPR: reg (Line: 43, Col: 42)
|———————CursorKind.DECL_REF_EXPR: reg (Line: 43, Col: 42)
|—CursorKind.FUNCTION_DECL: ctucan_hw_write32_be(struct ctucan_hw_priv *, enum ctu_can_fd_can_registers, int) (Line: 46, Col: 6)
|——CursorKind.PARM_DECL: priv (Line: 46, Col: 50)
|———CursorKind.TYPE_REF: struct ctucan_hw_priv (Line: 46, Col: 34)
|——CursorKind.PARM_DECL: reg (Line: 47, Col: 37)
|———CursorKind.TYPE_REF: enum ctu_can_fd_can_registers (Line: 47, Col: 12)
|——CursorKind.PARM_DECL: val (Line: 47, Col: 46)
|——CursorKind.COMPOUND_STMT:  (Line: 48, Col: 1)
|———CursorKind.CALL_EXPR: iowrite32 (Line: 49, Col: 2)
|————CursorKind.DECL_REF_EXPR: iowrite32 (Line: 49, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 49, Col: 12)
|————CursorKind.BINARY_OPERATOR:  (Line: 49, Col: 17)
|—————CursorKind.CSTYLE_CAST_EXPR:  (Line: 49, Col: 17)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 49, Col: 25)
|———————CursorKind.DECL_REF_EXPR: priv (Line: 49, Col: 25)
|—————CursorKind.UNEXPOSED_EXPR: reg (Line: 49, Col: 42)
|——————CursorKind.UNEXPOSED_EXPR: reg (Line: 49, Col: 42)
|———————CursorKind.DECL_REF_EXPR: reg (Line: 49, Col: 42)
|—CursorKind.FUNCTION_DECL: ctucan_hw_read32(struct ctucan_hw_priv *, enum ctu_can_fd_can_registers) (Line: 52, Col: 5)
|——CursorKind.PARM_DECL: priv (Line: 52, Col: 45)
|———CursorKind.TYPE_REF: struct ctucan_hw_priv (Line: 52, Col: 29)
|——CursorKind.PARM_DECL: reg (Line: 53, Col: 39)
|———CursorKind.TYPE_REF: enum ctu_can_fd_can_registers (Line: 53, Col: 14)
|——CursorKind.COMPOUND_STMT:  (Line: 54, Col: 1)
|———CursorKind.RETURN_STMT:  (Line: 55, Col: 2)
|————CursorKind.CALL_EXPR: ioread32 (Line: 55, Col: 9)
|—————CursorKind.UNEXPOSED_EXPR: ioread32 (Line: 55, Col: 9)
|——————CursorKind.DECL_REF_EXPR: ioread32 (Line: 55, Col: 9)
|—————CursorKind.BINARY_OPERATOR:  (Line: 55, Col: 18)
|——————CursorKind.CSTYLE_CAST_EXPR:  (Line: 55, Col: 18)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 55, Col: 26)
|————————CursorKind.DECL_REF_EXPR: priv (Line: 55, Col: 26)
|——————CursorKind.UNEXPOSED_EXPR: reg (Line: 55, Col: 43)
|———————CursorKind.UNEXPOSED_EXPR: reg (Line: 55, Col: 43)
|————————CursorKind.DECL_REF_EXPR: reg (Line: 55, Col: 43)
|—CursorKind.FUNCTION_DECL: ctucan_hw_read32_be(struct ctucan_hw_priv *, enum ctu_can_fd_can_registers) (Line: 58, Col: 5)
|——CursorKind.PARM_DECL: priv (Line: 58, Col: 48)
|———CursorKind.TYPE_REF: struct ctucan_hw_priv (Line: 58, Col: 32)
|——CursorKind.PARM_DECL: reg (Line: 59, Col: 35)
|———CursorKind.TYPE_REF: enum ctu_can_fd_can_registers (Line: 59, Col: 10)
|——CursorKind.COMPOUND_STMT:  (Line: 60, Col: 1)
|———CursorKind.RETURN_STMT:  (Line: 61, Col: 2)
|————CursorKind.CALL_EXPR: ioread32be (Line: 61, Col: 9)
|—————CursorKind.UNEXPOSED_EXPR: ioread32be (Line: 61, Col: 9)
|——————CursorKind.DECL_REF_EXPR: ioread32be (Line: 61, Col: 9)
|—————CursorKind.BINARY_OPERATOR:  (Line: 61, Col: 20)
|——————CursorKind.CSTYLE_CAST_EXPR:  (Line: 61, Col: 20)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 61, Col: 28)
|————————CursorKind.DECL_REF_EXPR: priv (Line: 61, Col: 28)
|——————CursorKind.UNEXPOSED_EXPR: reg (Line: 61, Col: 45)
|———————CursorKind.UNEXPOSED_EXPR: reg (Line: 61, Col: 45)
|————————CursorKind.DECL_REF_EXPR: reg (Line: 61, Col: 45)
|—CursorKind.FUNCTION_DECL: ctucan_hw_write_txt_buf(struct ctucan_hw_priv *, enum ctu_can_fd_can_registers, int, int) (Line: 64, Col: 13)
|——CursorKind.PARM_DECL: priv (Line: 64, Col: 60)
|———CursorKind.TYPE_REF: struct ctucan_hw_priv (Line: 64, Col: 44)
|——CursorKind.PARM_DECL: buf_base (Line: 65, Col: 40)
|———CursorKind.TYPE_REF: enum ctu_can_fd_can_registers (Line: 65, Col: 15)
|——CursorKind.PARM_DECL: offset (Line: 66, Col: 14)
|——CursorKind.PARM_DECL: val (Line: 66, Col: 26)
|——CursorKind.COMPOUND_STMT:  (Line: 67, Col: 1)
|———CursorKind.CALL_EXPR:  (Line: 68, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 68, Col: 2)
|—————CursorKind.DECL_REF_EXPR: priv (Line: 68, Col: 2)
|————CursorKind.DECL_REF_EXPR: priv (Line: 68, Col: 18)
|————CursorKind.BINARY_OPERATOR:  (Line: 68, Col: 24)
|—————CursorKind.DECL_REF_EXPR: buf_base (Line: 68, Col: 24)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 68, Col: 35)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 68, Col: 43)
|—CursorKind.UNION_DECL: ctu_can_fd_identifier_w (Line: 71, Col: 21)
|—CursorKind.FUNCTION_DECL: ctucan_hw_id_to_hwid(int) (Line: 71, Col: 45)
|——CursorKind.TYPE_REF: union ctu_can_fd_identifier_w (Line: 71, Col: 21)
|——CursorKind.PARM_DECL: id (Line: 71, Col: 74)
|——CursorKind.COMPOUND_STMT:  (Line: 72, Col: 1)
|———CursorKind.DECL_STMT:  (Line: 73, Col: 2)
|————CursorKind.VAR_DECL: hwid (Line: 73, Col: 32)
|—————CursorKind.TYPE_REF: union ctu_can_fd_identifier_w (Line: 73, Col: 8)
|———CursorKind.BINARY_OPERATOR:  (Line: 75, Col: 2)
|————CursorKind.MEMBER_REF_EXPR:  (Line: 75, Col: 2)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 75, Col: 2)
|——————CursorKind.DECL_REF_EXPR: hwid (Line: 75, Col: 2)
|————CursorKind.INTEGER_LITERAL:  (Line: 75, Col: 13)
|———CursorKind.IF_STMT:  (Line: 77, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 77, Col: 6)
|————CursorKind.COMPOUND_STMT:  (Line: 77, Col: 25)
|—————CursorKind.BINARY_OPERATOR:  (Line: 81, Col: 3)
|——————CursorKind.MEMBER_REF_EXPR:  (Line: 81, Col: 3)
|———————CursorKind.MEMBER_REF_EXPR:  (Line: 81, Col: 3)
|————————CursorKind.UNEXPOSED_EXPR:  (Line: 81, Col: 3)
|—————————CursorKind.DECL_REF_EXPR: hwid (Line: 81, Col: 3)
|——————CursorKind.PAREN_EXPR:  (Line: 81, Col: 27)
|———————CursorKind.BINARY_OPERATOR:  (Line: 81, Col: 28)
|————————CursorKind.UNEXPOSED_EXPR:  (Line: 81, Col: 28)
|————————CursorKind.INTEGER_LITERAL:  (Line: 81, Col: 33)
|————CursorKind.COMPOUND_STMT:  (Line: 82, Col: 9)
|———CursorKind.RETURN_STMT:  (Line: 85, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 85, Col: 9)
|—CursorKind.FUNCTION_DECL: ctucan_hw_hwid_to_id(union ctu_can_fd_identifier_w, int *, enum ctu_can_fd_frame_form_w_ide) (Line: 89, Col: 20)
|——CursorKind.PARM_DECL: hwid (Line: 89, Col: 71)
|———CursorKind.TYPE_REF: union ctu_can_fd_identifier_w (Line: 89, Col: 47)
|——CursorKind.PARM_DECL: id (Line: 90, Col: 16)
|——CursorKind.PARM_DECL: type (Line: 91, Col: 40)
|———CursorKind.TYPE_REF: enum ctu_can_fd_frame_form_w_ide (Line: 91, Col: 12)
|——CursorKind.COMPOUND_STMT:  (Line: 92, Col: 1)
|———CursorKind.IF_STMT:  (Line: 96, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 96, Col: 6)
|————CursorKind.COMPOUND_STMT:  (Line: 96, Col: 24)
|—————CursorKind.COMPOUND_ASSIGNMENT_OPERATOR:  (Line: 98, Col: 3)
|——————CursorKind.UNARY_OPERATOR:  (Line: 98, Col: 3)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 98, Col: 4)
|————————CursorKind.UNEXPOSED_EXPR:  (Line: 98, Col: 4)
|——————CursorKind.BINARY_OPERATOR:  (Line: 98, Col: 10)
|———————CursorKind.MEMBER_REF_EXPR:  (Line: 98, Col: 10)
|————————CursorKind.MEMBER_REF_EXPR:  (Line: 98, Col: 10)
|—————————CursorKind.UNEXPOSED_EXPR:  (Line: 98, Col: 10)
|———————CursorKind.INTEGER_LITERAL:  (Line: 98, Col: 36)
|—————CursorKind.COMPOUND_ASSIGNMENT_OPERATOR:  (Line: 99, Col: 3)
|——————CursorKind.UNARY_OPERATOR:  (Line: 99, Col: 3)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 99, Col: 4)
|————————CursorKind.UNEXPOSED_EXPR:  (Line: 99, Col: 4)
|——————CursorKind.MEMBER_REF_EXPR:  (Line: 99, Col: 10)
|———————CursorKind.MEMBER_REF_EXPR:  (Line: 99, Col: 10)
|————————CursorKind.UNEXPOSED_EXPR:  (Line: 99, Col: 10)
|————CursorKind.COMPOUND_STMT:  (Line: 100, Col: 9)
|—————CursorKind.BINARY_OPERATOR:  (Line: 101, Col: 3)
|——————CursorKind.UNARY_OPERATOR:  (Line: 101, Col: 3)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 101, Col: 4)
|————————CursorKind.UNEXPOSED_EXPR:  (Line: 101, Col: 4)
|——————CursorKind.MEMBER_REF_EXPR:  (Line: 101, Col: 9)
|———————CursorKind.MEMBER_REF_EXPR:  (Line: 101, Col: 9)
|————————CursorKind.UNEXPOSED_EXPR:  (Line: 101, Col: 9)
|—CursorKind.FUNCTION_DECL: ctucan_hw_len_to_dlc(int, int *) (Line: 105, Col: 13)
|——CursorKind.PARM_DECL: len (Line: 105, Col: 37)
|——CursorKind.PARM_DECL: dlc (Line: 105, Col: 46)
|——CursorKind.COMPOUND_STMT:  (Line: 106, Col: 1)
|———CursorKind.BINARY_OPERATOR:  (Line: 107, Col: 2)
|————CursorKind.UNARY_OPERATOR:  (Line: 107, Col: 2)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 107, Col: 3)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 107, Col: 3)
|————CursorKind.CALL_EXPR: can_len2dlc (Line: 107, Col: 9)
|—————CursorKind.DECL_REF_EXPR: can_len2dlc (Line: 107, Col: 9)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 107, Col: 21)
|—CursorKind.FUNCTION_DECL: ctucan_hw_check_access(struct ctucan_hw_priv *) (Line: 111, Col: 6)
|——CursorKind.PARM_DECL: priv (Line: 111, Col: 52)
|———CursorKind.TYPE_REF: struct ctucan_hw_priv (Line: 111, Col: 36)
|——CursorKind.COMPOUND_STMT:  (Line: 112, Col: 1)
|———CursorKind.DECL_STMT:  (Line: 113, Col: 2)
|————CursorKind.UNION_DECL: ctu_can_fd_device_id_version (Line: 113, Col: 8)
|————CursorKind.VAR_DECL: reg (Line: 113, Col: 37)
|—————CursorKind.TYPE_REF: union ctu_can_fd_device_id_version (Line: 113, Col: 8)
|—CursorKind.FUNCTION_DECL: ctucan_hw_get_version(struct ctucan_hw_priv *) (Line: 123, Col: 5)
|——CursorKind.PARM_DECL: priv (Line: 123, Col: 50)
|———CursorKind.TYPE_REF: struct ctucan_hw_priv (Line: 123, Col: 34)
|——CursorKind.COMPOUND_STMT:  (Line: 124, Col: 1)
|———CursorKind.DECL_STMT:  (Line: 125, Col: 2)
|————CursorKind.UNION_DECL: ctu_can_fd_device_id_version (Line: 125, Col: 8)
|————CursorKind.VAR_DECL: reg (Line: 125, Col: 37)
|—————CursorKind.TYPE_REF: union ctu_can_fd_device_id_version (Line: 125, Col: 8)
|———CursorKind.RETURN_STMT:  (Line: 128, Col: 2)
|————CursorKind.BINARY_OPERATOR:  (Line: 128, Col: 9)
|—————CursorKind.BINARY_OPERATOR:  (Line: 128, Col: 9)
|——————CursorKind.MEMBER_REF_EXPR:  (Line: 128, Col: 9)
|———————CursorKind.MEMBER_REF_EXPR:  (Line: 128, Col: 9)
|————————CursorKind.UNEXPOSED_EXPR:  (Line: 128, Col: 9)
|——————CursorKind.INTEGER_LITERAL:  (Line: 128, Col: 27)
|—————CursorKind.MEMBER_REF_EXPR:  (Line: 128, Col: 32)
|——————CursorKind.MEMBER_REF_EXPR:  (Line: 128, Col: 32)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 128, Col: 32)
|—CursorKind.FUNCTION_DECL: ctucan_hw_enable(struct ctucan_hw_priv *, int) (Line: 131, Col: 6)
|——CursorKind.PARM_DECL: priv (Line: 131, Col: 46)
|———CursorKind.TYPE_REF: struct ctucan_hw_priv (Line: 131, Col: 30)
|——CursorKind.PARM_DECL: enable (Line: 131, Col: 57)
|——CursorKind.COMPOUND_STMT:  (Line: 132, Col: 1)
|———CursorKind.DECL_STMT:  (Line: 133, Col: 2)
|————CursorKind.UNION_DECL: ctu_can_fd_mode_settings (Line: 133, Col: 8)
|————CursorKind.VAR_DECL: reg (Line: 133, Col: 33)
|—————CursorKind.TYPE_REF: union ctu_can_fd_mode_settings (Line: 133, Col: 8)
|—CursorKind.FUNCTION_DECL: ctucan_hw_reset(struct ctucan_hw_priv *) (Line: 140, Col: 6)
|——CursorKind.PARM_DECL: priv (Line: 140, Col: 45)
|———CursorKind.TYPE_REF: struct ctucan_hw_priv (Line: 140, Col: 29)
|——CursorKind.COMPOUND_STMT:  (Line: 141, Col: 1)
|———CursorKind.DECL_STMT:  (Line: 142, Col: 2)
|————CursorKind.UNION_DECL: ctu_can_fd_mode_settings (Line: 142, Col: 8)
|————CursorKind.VAR_DECL: mode (Line: 142, Col: 33)
|—————CursorKind.TYPE_REF: union ctu_can_fd_mode_settings (Line: 142, Col: 8)
|———CursorKind.BINARY_OPERATOR:  (Line: 144, Col: 2)
|————CursorKind.MEMBER_REF_EXPR:  (Line: 144, Col: 2)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 144, Col: 2)
|——————CursorKind.DECL_REF_EXPR: mode (Line: 144, Col: 2)
|————CursorKind.INTEGER_LITERAL:  (Line: 144, Col: 13)
|———CursorKind.BINARY_OPERATOR:  (Line: 145, Col: 2)
|————CursorKind.MEMBER_REF_EXPR:  (Line: 145, Col: 2)
|—————CursorKind.MEMBER_REF_EXPR:  (Line: 145, Col: 2)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 145, Col: 2)
|———————CursorKind.DECL_REF_EXPR: mode (Line: 145, Col: 2)
|————CursorKind.INTEGER_LITERAL:  (Line: 145, Col: 15)
|—CursorKind.FUNCTION_DECL: ctucan_hw_set_ret_limit(struct ctucan_hw_priv *, int, int) (Line: 152, Col: 6)
|——CursorKind.PARM_DECL: priv (Line: 152, Col: 53)
|———CursorKind.TYPE_REF: struct ctucan_hw_priv (Line: 152, Col: 37)
|——CursorKind.PARM_DECL: enable (Line: 152, Col: 64)
|——CursorKind.PARM_DECL: limit (Line: 152, Col: 75)
|——CursorKind.COMPOUND_STMT:  (Line: 153, Col: 1)
|———CursorKind.DECL_STMT:  (Line: 154, Col: 2)
|————CursorKind.UNION_DECL: ctu_can_fd_mode_settings (Line: 154, Col: 8)
|————CursorKind.VAR_DECL: reg (Line: 154, Col: 33)
|—————CursorKind.TYPE_REF: union ctu_can_fd_mode_settings (Line: 154, Col: 8)
|———CursorKind.BINARY_OPERATOR:  (Line: 161, Col: 2)
|————CursorKind.MEMBER_REF_EXPR:  (Line: 161, Col: 2)
|—————CursorKind.MEMBER_REF_EXPR:  (Line: 161, Col: 2)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 161, Col: 2)
|———————CursorKind.DECL_REF_EXPR: reg (Line: 161, Col: 2)
|————CursorKind.BINARY_OPERATOR:  (Line: 161, Col: 16)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 161, Col: 16)
|—————CursorKind.INTEGER_LITERAL:  (Line: 161, Col: 24)
|—CursorKind.FUNCTION_DECL: ctucan_hw_set_mode_reg(struct ctucan_hw_priv *, const struct can_ctrlmode *) (Line: 166, Col: 6)
|——CursorKind.PARM_DECL: priv (Line: 166, Col: 52)
|———CursorKind.TYPE_REF: struct ctucan_hw_priv (Line: 166, Col: 36)
|——CursorKind.PARM_DECL: mode (Line: 167, Col: 36)
|———CursorKind.TYPE_REF: struct can_ctrlmode (Line: 167, Col: 22)
|——CursorKind.COMPOUND_STMT:  (Line: 168, Col: 1)
|———CursorKind.DECL_STMT:  (Line: 170, Col: 2)
|————CursorKind.UNION_DECL: ctu_can_fd_mode_settings (Line: 170, Col: 8)
|————CursorKind.VAR_DECL: reg (Line: 170, Col: 33)
|—————CursorKind.TYPE_REF: union ctu_can_fd_mode_settings (Line: 170, Col: 8)
|—CursorKind.FUNCTION_DECL: ctucan_hw_rel_rx_buf(struct ctucan_hw_priv *) (Line: 197, Col: 6)
|——CursorKind.PARM_DECL: priv (Line: 197, Col: 50)
|———CursorKind.TYPE_REF: struct ctucan_hw_priv (Line: 197, Col: 34)
|——CursorKind.COMPOUND_STMT:  (Line: 198, Col: 1)
|———CursorKind.DECL_STMT:  (Line: 199, Col: 2)
|————CursorKind.UNION_DECL: ctu_can_fd_command (Line: 199, Col: 8)
|————CursorKind.VAR_DECL: reg (Line: 199, Col: 27)
|—————CursorKind.TYPE_REF: union ctu_can_fd_command (Line: 199, Col: 8)
|———CursorKind.BINARY_OPERATOR:  (Line: 201, Col: 2)
|————CursorKind.MEMBER_REF_EXPR:  (Line: 201, Col: 2)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 201, Col: 2)
|——————CursorKind.DECL_REF_EXPR: reg (Line: 201, Col: 2)
|————CursorKind.INTEGER_LITERAL:  (Line: 201, Col: 12)
|———CursorKind.BINARY_OPERATOR:  (Line: 202, Col: 2)
|————CursorKind.MEMBER_REF_EXPR:  (Line: 202, Col: 2)
|—————CursorKind.MEMBER_REF_EXPR:  (Line: 202, Col: 2)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 202, Col: 2)
|———————CursorKind.DECL_REF_EXPR: reg (Line: 202, Col: 2)
|————CursorKind.INTEGER_LITERAL:  (Line: 202, Col: 14)
|—CursorKind.FUNCTION_DECL: ctucan_hw_clr_overrun_flag(struct ctucan_hw_priv *) (Line: 206, Col: 6)
|——CursorKind.PARM_DECL: priv (Line: 206, Col: 56)
|———CursorKind.TYPE_REF: struct ctucan_hw_priv (Line: 206, Col: 40)
|——CursorKind.COMPOUND_STMT:  (Line: 207, Col: 1)
|———CursorKind.DECL_STMT:  (Line: 208, Col: 2)
|————CursorKind.UNION_DECL: ctu_can_fd_command (Line: 208, Col: 8)
|————CursorKind.VAR_DECL: reg (Line: 208, Col: 27)
|—————CursorKind.TYPE_REF: union ctu_can_fd_command (Line: 208, Col: 8)
|———CursorKind.BINARY_OPERATOR:  (Line: 210, Col: 2)
|————CursorKind.MEMBER_REF_EXPR:  (Line: 210, Col: 2)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 210, Col: 2)
|——————CursorKind.DECL_REF_EXPR: reg (Line: 210, Col: 2)
|————CursorKind.INTEGER_LITERAL:  (Line: 210, Col: 12)
|———CursorKind.BINARY_OPERATOR:  (Line: 211, Col: 2)
|————CursorKind.MEMBER_REF_EXPR:  (Line: 211, Col: 2)
|—————CursorKind.MEMBER_REF_EXPR:  (Line: 211, Col: 2)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 211, Col: 2)
|———————CursorKind.DECL_REF_EXPR: reg (Line: 211, Col: 2)
|————CursorKind.INTEGER_LITERAL:  (Line: 211, Col: 14)
|—CursorKind.FUNCTION_DECL: ctucan_hw_int_conf(struct ctucan_hw_priv *, enum ctu_can_fd_can_registers, enum ctu_can_fd_can_registers, union ctu_can_fd_int_stat, union ctu_can_fd_int_stat) (Line: 215, Col: 13)
|——CursorKind.PARM_DECL: priv (Line: 215, Col: 55)
|———CursorKind.TYPE_REF: struct ctucan_hw_priv (Line: 215, Col: 39)
|——CursorKind.PARM_DECL: sreg (Line: 216, Col: 35)
|———CursorKind.TYPE_REF: enum ctu_can_fd_can_registers (Line: 216, Col: 10)
|——CursorKind.PARM_DECL: creg (Line: 217, Col: 35)
|———CursorKind.TYPE_REF: enum ctu_can_fd_can_registers (Line: 217, Col: 10)
|——CursorKind.PARM_DECL: mask (Line: 218, Col: 31)
|———CursorKind.TYPE_REF: union ctu_can_fd_int_stat (Line: 218, Col: 11)
|——CursorKind.PARM_DECL: val (Line: 219, Col: 31)
|———CursorKind.TYPE_REF: union ctu_can_fd_int_stat (Line: 219, Col: 11)
|——CursorKind.COMPOUND_STMT:  (Line: 220, Col: 1)
|———CursorKind.CALL_EXPR:  (Line: 221, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 221, Col: 2)
|—————CursorKind.DECL_REF_EXPR: priv (Line: 221, Col: 2)
|————CursorKind.DECL_REF_EXPR: priv (Line: 221, Col: 18)
|————CursorKind.DECL_REF_EXPR: sreg (Line: 221, Col: 24)
|————CursorKind.BINARY_OPERATOR:  (Line: 221, Col: 30)
|—————CursorKind.MEMBER_REF_EXPR:  (Line: 221, Col: 30)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 221, Col: 30)
|—————CursorKind.MEMBER_REF_EXPR:  (Line: 221, Col: 41)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 221, Col: 41)
|———CursorKind.CALL_EXPR:  (Line: 222, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 222, Col: 2)
|—————CursorKind.DECL_REF_EXPR: priv (Line: 222, Col: 2)
|————CursorKind.DECL_REF_EXPR: priv (Line: 222, Col: 18)
|————CursorKind.DECL_REF_EXPR: creg (Line: 222, Col: 24)
|————CursorKind.BINARY_OPERATOR:  (Line: 222, Col: 30)
|—————CursorKind.MEMBER_REF_EXPR:  (Line: 222, Col: 30)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 222, Col: 30)
|—————CursorKind.PAREN_EXPR:  (Line: 222, Col: 41)
|——————CursorKind.UNARY_OPERATOR:  (Line: 222, Col: 42)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 222, Col: 43)
|————————CursorKind.MEMBER_REF_EXPR:  (Line: 222, Col: 43)
|—————————CursorKind.UNEXPOSED_EXPR:  (Line: 222, Col: 43)
|—CursorKind.FUNCTION_DECL: ctucan_hw_int_ena(struct ctucan_hw_priv *, union ctu_can_fd_int_stat, union ctu_can_fd_int_stat) (Line: 225, Col: 6)
|——CursorKind.PARM_DECL: priv (Line: 225, Col: 47)
|———CursorKind.TYPE_REF: struct ctucan_hw_priv (Line: 225, Col: 31)
|——CursorKind.PARM_DECL: mask (Line: 226, Col: 30)
|———CursorKind.TYPE_REF: union ctu_can_fd_int_stat (Line: 226, Col: 10)
|——CursorKind.PARM_DECL: val (Line: 227, Col: 30)
|———CursorKind.TYPE_REF: union ctu_can_fd_int_stat (Line: 227, Col: 10)
|——CursorKind.COMPOUND_STMT:  (Line: 228, Col: 1)
|—CursorKind.FUNCTION_DECL: ctucan_hw_int_mask(struct ctucan_hw_priv *, union ctu_can_fd_int_stat, union ctu_can_fd_int_stat) (Line: 233, Col: 6)
|——CursorKind.PARM_DECL: priv (Line: 233, Col: 48)
|———CursorKind.TYPE_REF: struct ctucan_hw_priv (Line: 233, Col: 32)
|——CursorKind.PARM_DECL: mask (Line: 234, Col: 31)
|———CursorKind.TYPE_REF: union ctu_can_fd_int_stat (Line: 234, Col: 11)
|——CursorKind.PARM_DECL: val (Line: 235, Col: 31)
|———CursorKind.TYPE_REF: union ctu_can_fd_int_stat (Line: 235, Col: 11)
|——CursorKind.COMPOUND_STMT:  (Line: 236, Col: 1)
|—CursorKind.FUNCTION_DECL: ctucan_hw_set_mode(struct ctucan_hw_priv *, const struct can_ctrlmode *) (Line: 241, Col: 6)
|——CursorKind.PARM_DECL: priv (Line: 241, Col: 48)
|———CursorKind.TYPE_REF: struct ctucan_hw_priv (Line: 241, Col: 32)
|——CursorKind.PARM_DECL: mode (Line: 242, Col: 32)
|———CursorKind.TYPE_REF: struct can_ctrlmode (Line: 242, Col: 18)
|——CursorKind.COMPOUND_STMT:  (Line: 243, Col: 1)
|———CursorKind.CALL_EXPR: ctucan_hw_set_mode_reg (Line: 244, Col: 2)
|————CursorKind.UNEXPOSED_EXPR: ctucan_hw_set_mode_reg (Line: 244, Col: 2)
|—————CursorKind.DECL_REF_EXPR: ctucan_hw_set_mode_reg (Line: 244, Col: 2)
|————CursorKind.UNEXPOSED_EXPR: priv (Line: 244, Col: 25)
|—————CursorKind.UNEXPOSED_EXPR: priv (Line: 244, Col: 25)
|——————CursorKind.DECL_REF_EXPR: priv (Line: 244, Col: 25)
|————CursorKind.UNEXPOSED_EXPR: mode (Line: 244, Col: 31)
|—————CursorKind.UNEXPOSED_EXPR: mode (Line: 244, Col: 31)
|——————CursorKind.DECL_REF_EXPR: mode (Line: 244, Col: 31)
|———CursorKind.IF_STMT:  (Line: 252, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 252, Col: 6)
|————CursorKind.COMPOUND_STMT:  (Line: 252, Col: 48)
|—————CursorKind.DECL_STMT:  (Line: 253, Col: 3)
|——————CursorKind.UNION_DECL: ctu_can_fd_int_stat (Line: 253, Col: 9)
|——————CursorKind.VAR_DECL: ena (Line: 253, Col: 29)
|———————CursorKind.TYPE_REF: union ctu_can_fd_int_stat (Line: 253, Col: 9)
|——————CursorKind.VAR_DECL: mask (Line: 253, Col: 34)
|———————CursorKind.TYPE_REF: union ctu_can_fd_int_stat (Line: 253, Col: 9)
|—————CursorKind.BINARY_OPERATOR:  (Line: 255, Col: 3)
|——————CursorKind.MEMBER_REF_EXPR:  (Line: 255, Col: 3)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 255, Col: 3)
|————————CursorKind.DECL_REF_EXPR: ena (Line: 255, Col: 3)
|——————CursorKind.INTEGER_LITERAL:  (Line: 255, Col: 13)
|—————CursorKind.BINARY_OPERATOR:  (Line: 256, Col: 3)
|——————CursorKind.MEMBER_REF_EXPR:  (Line: 256, Col: 3)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 256, Col: 3)
|————————CursorKind.DECL_REF_EXPR: mask (Line: 256, Col: 3)
|——————CursorKind.INTEGER_LITERAL:  (Line: 256, Col: 14)
|—————CursorKind.BINARY_OPERATOR:  (Line: 258, Col: 3)
|——————CursorKind.MEMBER_REF_EXPR:  (Line: 258, Col: 3)
|———————CursorKind.MEMBER_REF_EXPR:  (Line: 258, Col: 3)
|————————CursorKind.UNEXPOSED_EXPR:  (Line: 258, Col: 3)
|—————————CursorKind.DECL_REF_EXPR: mask (Line: 258, Col: 3)
|——————CursorKind.INTEGER_LITERAL:  (Line: 258, Col: 16)
|—————CursorKind.CALL_EXPR: ctucan_hw_int_ena (Line: 259, Col: 3)
|——————CursorKind.DECL_REF_EXPR: ctucan_hw_int_ena (Line: 259, Col: 3)
|——————CursorKind.DECL_REF_EXPR: priv (Line: 259, Col: 21)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 259, Col: 27)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 259, Col: 32)
|—CursorKind.STRUCT_DECL: can_bittiming_const (Line: 263, Col: 14)
|—CursorKind.VAR_DECL: ctu_can_fd_bit_timing_max (Line: 263, Col: 34)
|——CursorKind.TYPE_REF: struct can_bittiming_const (Line: 263, Col: 14)
|—CursorKind.VAR_DECL: ctu_can_fd_bit_timing_data_max (Line: 275, Col: 34)
|——CursorKind.TYPE_REF: struct can_bittiming_const (Line: 275, Col: 14)
|—CursorKind.FUNCTION_DECL: ctucan_hw_set_nom_bittiming(struct ctucan_hw_priv *, struct can_bittiming *) (Line: 287, Col: 6)
|——CursorKind.PARM_DECL: priv (Line: 287, Col: 57)
|———CursorKind.TYPE_REF: struct ctucan_hw_priv (Line: 287, Col: 41)
|——CursorKind.PARM_DECL: nbt (Line: 288, Col: 29)
|———CursorKind.TYPE_REF: struct can_bittiming (Line: 288, Col: 14)
|——CursorKind.COMPOUND_STMT:  (Line: 289, Col: 1)
|———CursorKind.DECL_STMT:  (Line: 290, Col: 2)
|————CursorKind.UNION_DECL: ctu_can_fd_btr (Line: 290, Col: 8)
|————CursorKind.VAR_DECL: btr (Line: 290, Col: 23)
|—————CursorKind.TYPE_REF: union ctu_can_fd_btr (Line: 290, Col: 8)
|———CursorKind.IF_STMT:  (Line: 300, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 300, Col: 6)
|————CursorKind.COMPOUND_STMT:  (Line: 300, Col: 23)
|———CursorKind.BINARY_OPERATOR:  (Line: 307, Col: 2)
|————CursorKind.MEMBER_REF_EXPR:  (Line: 307, Col: 2)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 307, Col: 2)
|——————CursorKind.DECL_REF_EXPR: btr (Line: 307, Col: 2)
|————CursorKind.INTEGER_LITERAL:  (Line: 307, Col: 12)
|———CursorKind.BINARY_OPERATOR:  (Line: 310, Col: 2)
|————CursorKind.MEMBER_REF_EXPR:  (Line: 310, Col: 2)
|—————CursorKind.MEMBER_REF_EXPR:  (Line: 310, Col: 2)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 310, Col: 2)
|———————CursorKind.DECL_REF_EXPR: btr (Line: 310, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 310, Col: 14)
|—————CursorKind.DECL_REF_EXPR: nbt (Line: 310, Col: 14)
|———CursorKind.BINARY_OPERATOR:  (Line: 311, Col: 2)
|————CursorKind.MEMBER_REF_EXPR:  (Line: 311, Col: 2)
|—————CursorKind.MEMBER_REF_EXPR:  (Line: 311, Col: 2)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 311, Col: 2)
|———————CursorKind.DECL_REF_EXPR: btr (Line: 311, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 311, Col: 14)
|—————CursorKind.DECL_REF_EXPR: nbt (Line: 311, Col: 14)
|———CursorKind.BINARY_OPERATOR:  (Line: 312, Col: 2)
|————CursorKind.MEMBER_REF_EXPR:  (Line: 312, Col: 2)
|—————CursorKind.MEMBER_REF_EXPR:  (Line: 312, Col: 2)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 312, Col: 2)
|———————CursorKind.DECL_REF_EXPR: btr (Line: 312, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 312, Col: 14)
|—————CursorKind.DECL_REF_EXPR: nbt (Line: 312, Col: 14)
|—CursorKind.FUNCTION_DECL: ctucan_hw_set_data_bittiming(struct ctucan_hw_priv *, struct can_bittiming *) (Line: 317, Col: 6)
|——CursorKind.PARM_DECL: priv (Line: 317, Col: 58)
|———CursorKind.TYPE_REF: struct ctucan_hw_priv (Line: 317, Col: 42)
|——CursorKind.PARM_DECL: dbt (Line: 318, Col: 30)
|———CursorKind.TYPE_REF: struct can_bittiming (Line: 318, Col: 15)
|——CursorKind.COMPOUND_STMT:  (Line: 319, Col: 1)
|———CursorKind.DECL_STMT:  (Line: 320, Col: 2)
|————CursorKind.UNION_DECL: ctu_can_fd_btr_fd (Line: 320, Col: 8)
|————CursorKind.VAR_DECL: btr_fd (Line: 320, Col: 26)
|—————CursorKind.TYPE_REF: union ctu_can_fd_btr_fd (Line: 320, Col: 8)
|———CursorKind.IF_STMT:  (Line: 331, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 331, Col: 6)
|————CursorKind.COMPOUND_STMT:  (Line: 331, Col: 23)
|———CursorKind.BINARY_OPERATOR:  (Line: 338, Col: 2)
|————CursorKind.MEMBER_REF_EXPR:  (Line: 338, Col: 2)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 338, Col: 2)
|——————CursorKind.DECL_REF_EXPR: btr_fd (Line: 338, Col: 2)
|————CursorKind.INTEGER_LITERAL:  (Line: 338, Col: 15)
|———CursorKind.BINARY_OPERATOR:  (Line: 341, Col: 2)
|————CursorKind.MEMBER_REF_EXPR:  (Line: 341, Col: 2)
|—————CursorKind.MEMBER_REF_EXPR:  (Line: 341, Col: 2)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 341, Col: 2)
|———————CursorKind.DECL_REF_EXPR: btr_fd (Line: 341, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 341, Col: 20)
|—————CursorKind.DECL_REF_EXPR: dbt (Line: 341, Col: 20)
|———CursorKind.BINARY_OPERATOR:  (Line: 342, Col: 2)
|————CursorKind.MEMBER_REF_EXPR:  (Line: 342, Col: 2)
|—————CursorKind.MEMBER_REF_EXPR:  (Line: 342, Col: 2)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 342, Col: 2)
|———————CursorKind.DECL_REF_EXPR: btr_fd (Line: 342, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 342, Col: 20)
|—————CursorKind.DECL_REF_EXPR: dbt (Line: 342, Col: 20)
|———CursorKind.BINARY_OPERATOR:  (Line: 343, Col: 2)
|————CursorKind.MEMBER_REF_EXPR:  (Line: 343, Col: 2)
|—————CursorKind.MEMBER_REF_EXPR:  (Line: 343, Col: 2)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 343, Col: 2)
|———————CursorKind.DECL_REF_EXPR: btr_fd (Line: 343, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 343, Col: 20)
|—————CursorKind.DECL_REF_EXPR: dbt (Line: 343, Col: 20)
|—CursorKind.FUNCTION_DECL: ctucan_hw_set_err_limits(struct ctucan_hw_priv *, int, int) (Line: 348, Col: 6)
|——CursorKind.PARM_DECL: priv (Line: 348, Col: 54)
|———CursorKind.TYPE_REF: struct ctucan_hw_priv (Line: 348, Col: 38)
|——CursorKind.PARM_DECL: ewl (Line: 348, Col: 63)
|——CursorKind.PARM_DECL: erp (Line: 348, Col: 71)
|——CursorKind.COMPOUND_STMT:  (Line: 349, Col: 1)
|———CursorKind.DECL_STMT:  (Line: 350, Col: 2)
|————CursorKind.UNION_DECL: ctu_can_fd_ewl_erp_fault_state (Line: 350, Col: 8)
|————CursorKind.VAR_DECL: reg (Line: 350, Col: 39)
|—————CursorKind.TYPE_REF: union ctu_can_fd_ewl_erp_fault_state (Line: 350, Col: 8)
|———CursorKind.BINARY_OPERATOR:  (Line: 352, Col: 2)
|————CursorKind.MEMBER_REF_EXPR:  (Line: 352, Col: 2)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 352, Col: 2)
|——————CursorKind.DECL_REF_EXPR: reg (Line: 352, Col: 2)
|————CursorKind.INTEGER_LITERAL:  (Line: 352, Col: 12)
|———CursorKind.BINARY_OPERATOR:  (Line: 353, Col: 2)
|————CursorKind.MEMBER_REF_EXPR:  (Line: 353, Col: 2)
|—————CursorKind.MEMBER_REF_EXPR:  (Line: 353, Col: 2)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 353, Col: 2)
|———————CursorKind.DECL_REF_EXPR: reg (Line: 353, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 353, Col: 19)
|———CursorKind.BINARY_OPERATOR:  (Line: 354, Col: 2)
|————CursorKind.MEMBER_REF_EXPR:  (Line: 354, Col: 2)
|—————CursorKind.MEMBER_REF_EXPR:  (Line: 354, Col: 2)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 354, Col: 2)
|———————CursorKind.DECL_REF_EXPR: reg (Line: 354, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 354, Col: 20)
|—CursorKind.FUNCTION_DECL: ctucan_hw_read_err_ctrs(struct ctucan_hw_priv *, struct can_berr_counter *) (Line: 360, Col: 6)
|——CursorKind.PARM_DECL: priv (Line: 360, Col: 53)
|———CursorKind.TYPE_REF: struct ctucan_hw_priv (Line: 360, Col: 37)
|——CursorKind.PARM_DECL: ctr (Line: 361, Col: 35)
|———CursorKind.TYPE_REF: struct can_berr_counter (Line: 361, Col: 17)
|——CursorKind.COMPOUND_STMT:  (Line: 362, Col: 1)
|———CursorKind.DECL_STMT:  (Line: 363, Col: 2)
|————CursorKind.UNION_DECL: ctu_can_fd_rec_tec (Line: 363, Col: 8)
|————CursorKind.VAR_DECL: reg (Line: 363, Col: 27)
|—————CursorKind.TYPE_REF: union ctu_can_fd_rec_tec (Line: 363, Col: 8)
|———CursorKind.BINARY_OPERATOR:  (Line: 366, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 366, Col: 2)
|—————CursorKind.DECL_REF_EXPR: ctr (Line: 366, Col: 2)
|————CursorKind.MEMBER_REF_EXPR:  (Line: 366, Col: 15)
|—————CursorKind.MEMBER_REF_EXPR:  (Line: 366, Col: 15)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 366, Col: 15)
|———CursorKind.BINARY_OPERATOR:  (Line: 367, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 367, Col: 2)
|—————CursorKind.DECL_REF_EXPR: ctr (Line: 367, Col: 2)
|————CursorKind.MEMBER_REF_EXPR:  (Line: 367, Col: 15)
|—————CursorKind.MEMBER_REF_EXPR:  (Line: 367, Col: 15)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 367, Col: 15)
|—CursorKind.ENUM_DECL: can_state (Line: 370, Col: 6)
|—CursorKind.FUNCTION_DECL: ctucan_hw_read_error_state(struct ctucan_hw_priv *) (Line: 370, Col: 16)
|——CursorKind.TYPE_REF: enum can_state (Line: 370, Col: 6)
|——CursorKind.PARM_DECL: priv (Line: 370, Col: 66)
|———CursorKind.TYPE_REF: struct ctucan_hw_priv (Line: 370, Col: 50)
|——CursorKind.COMPOUND_STMT:  (Line: 371, Col: 1)
|———CursorKind.DECL_STMT:  (Line: 372, Col: 2)
|————CursorKind.UNION_DECL: ctu_can_fd_ewl_erp_fault_state (Line: 372, Col: 8)
|————CursorKind.VAR_DECL: reg (Line: 372, Col: 39)
|—————CursorKind.TYPE_REF: union ctu_can_fd_ewl_erp_fault_state (Line: 372, Col: 8)
|———CursorKind.DECL_STMT:  (Line: 373, Col: 2)
|————CursorKind.UNION_DECL: ctu_can_fd_rec_tec (Line: 373, Col: 8)
|————CursorKind.VAR_DECL: err (Line: 373, Col: 27)
|—————CursorKind.TYPE_REF: union ctu_can_fd_rec_tec (Line: 373, Col: 8)
|———CursorKind.IF_STMT:  (Line: 378, Col: 2)
|————CursorKind.MEMBER_REF_EXPR:  (Line: 378, Col: 6)
|—————CursorKind.MEMBER_REF_EXPR:  (Line: 378, Col: 6)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 378, Col: 6)
|————CursorKind.COMPOUND_STMT:  (Line: 378, Col: 17)
|————CursorKind.IF_STMT:  (Line: 384, Col: 9)
|—————CursorKind.MEMBER_REF_EXPR:  (Line: 384, Col: 13)
|——————CursorKind.MEMBER_REF_EXPR:  (Line: 384, Col: 13)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 384, Col: 13)
|—————CursorKind.COMPOUND_STMT:  (Line: 384, Col: 24)
|—————CursorKind.IF_STMT:  (Line: 386, Col: 9)
|——————CursorKind.MEMBER_REF_EXPR:  (Line: 386, Col: 13)
|———————CursorKind.MEMBER_REF_EXPR:  (Line: 386, Col: 13)
|————————CursorKind.UNEXPOSED_EXPR:  (Line: 386, Col: 13)
|——————CursorKind.COMPOUND_STMT:  (Line: 386, Col: 24)
|—CursorKind.FUNCTION_DECL: ctucan_hw_set_err_ctrs(struct ctucan_hw_priv *, const struct can_berr_counter *) (Line: 393, Col: 6)
|——CursorKind.PARM_DECL: priv (Line: 393, Col: 52)
|———CursorKind.TYPE_REF: struct ctucan_hw_priv (Line: 393, Col: 36)
|——CursorKind.PARM_DECL: ctr (Line: 394, Col: 40)
|———CursorKind.TYPE_REF: struct can_berr_counter (Line: 394, Col: 22)
|——CursorKind.COMPOUND_STMT:  (Line: 395, Col: 1)
|———CursorKind.DECL_STMT:  (Line: 396, Col: 2)
|————CursorKind.UNION_DECL: ctu_can_fd_ctr_pres (Line: 396, Col: 8)
|————CursorKind.VAR_DECL: reg (Line: 396, Col: 28)
|—————CursorKind.TYPE_REF: union ctu_can_fd_ctr_pres (Line: 396, Col: 8)
|———CursorKind.BINARY_OPERATOR:  (Line: 398, Col: 2)
|————CursorKind.MEMBER_REF_EXPR:  (Line: 398, Col: 2)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 398, Col: 2)
|——————CursorKind.DECL_REF_EXPR: reg (Line: 398, Col: 2)
|————CursorKind.INTEGER_LITERAL:  (Line: 398, Col: 12)
|———CursorKind.BINARY_OPERATOR:  (Line: 400, Col: 2)
|————CursorKind.MEMBER_REF_EXPR:  (Line: 400, Col: 2)
|—————CursorKind.MEMBER_REF_EXPR:  (Line: 400, Col: 2)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 400, Col: 2)
|———————CursorKind.DECL_REF_EXPR: reg (Line: 400, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 400, Col: 15)
|—————CursorKind.DECL_REF_EXPR: ctr (Line: 400, Col: 15)
|———CursorKind.BINARY_OPERATOR:  (Line: 401, Col: 2)
|————CursorKind.MEMBER_REF_EXPR:  (Line: 401, Col: 2)
|—————CursorKind.MEMBER_REF_EXPR:  (Line: 401, Col: 2)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 401, Col: 2)
|———————CursorKind.DECL_REF_EXPR: reg (Line: 401, Col: 2)
|————CursorKind.INTEGER_LITERAL:  (Line: 401, Col: 14)
|———CursorKind.BINARY_OPERATOR:  (Line: 404, Col: 2)
|————CursorKind.MEMBER_REF_EXPR:  (Line: 404, Col: 2)
|—————CursorKind.MEMBER_REF_EXPR:  (Line: 404, Col: 2)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 404, Col: 2)
|———————CursorKind.DECL_REF_EXPR: reg (Line: 404, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 404, Col: 15)
|—————CursorKind.DECL_REF_EXPR: ctr (Line: 404, Col: 15)
|———CursorKind.BINARY_OPERATOR:  (Line: 405, Col: 2)
|————CursorKind.MEMBER_REF_EXPR:  (Line: 405, Col: 2)
|—————CursorKind.MEMBER_REF_EXPR:  (Line: 405, Col: 2)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 405, Col: 2)
|———————CursorKind.DECL_REF_EXPR: reg (Line: 405, Col: 2)
|————CursorKind.INTEGER_LITERAL:  (Line: 405, Col: 14)
|———CursorKind.BINARY_OPERATOR:  (Line: 406, Col: 2)
|————CursorKind.MEMBER_REF_EXPR:  (Line: 406, Col: 2)
|—————CursorKind.MEMBER_REF_EXPR:  (Line: 406, Col: 2)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 406, Col: 2)
|———————CursorKind.DECL_REF_EXPR: reg (Line: 406, Col: 2)
|————CursorKind.INTEGER_LITERAL:  (Line: 406, Col: 14)
|—CursorKind.FUNCTION_DECL: ctucan_hw_get_mask_filter_support(struct ctucan_hw_priv *, int) (Line: 410, Col: 6)
|——CursorKind.PARM_DECL: priv (Line: 410, Col: 63)
|———CursorKind.TYPE_REF: struct ctucan_hw_priv (Line: 410, Col: 47)
|——CursorKind.PARM_DECL: fnum (Line: 410, Col: 72)
|——CursorKind.COMPOUND_STMT:  (Line: 411, Col: 1)
|———CursorKind.DECL_STMT:  (Line: 412, Col: 2)
|————CursorKind.UNION_DECL: ctu_can_fd_filter_control_filter_status (Line: 412, Col: 8)
|————CursorKind.VAR_DECL: reg (Line: 412, Col: 48)
|—————CursorKind.TYPE_REF: union ctu_can_fd_filter_control_filter_status (Line: 412, Col: 8)
|———CursorKind.SWITCH_STMT:  (Line: 416, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 416, Col: 10)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 416, Col: 10)
|————CursorKind.COMPOUND_STMT:  (Line: 416, Col: 16)
|—————CursorKind.BREAK_STMT:  (Line: 420, Col: 2)
|—————CursorKind.BREAK_STMT:  (Line: 424, Col: 2)
|—————CursorKind.BREAK_STMT:  (Line: 428, Col: 2)
|—CursorKind.FUNCTION_DECL: ctucan_hw_get_range_filter_support(struct ctucan_hw_priv *) (Line: 434, Col: 6)
|——CursorKind.PARM_DECL: priv (Line: 434, Col: 64)
|———CursorKind.TYPE_REF: struct ctucan_hw_priv (Line: 434, Col: 48)
|——CursorKind.COMPOUND_STMT:  (Line: 435, Col: 1)
|———CursorKind.DECL_STMT:  (Line: 436, Col: 2)
|————CursorKind.UNION_DECL: ctu_can_fd_filter_control_filter_status (Line: 436, Col: 8)
|————CursorKind.VAR_DECL: reg (Line: 436, Col: 48)
|—————CursorKind.TYPE_REF: union ctu_can_fd_filter_control_filter_status (Line: 436, Col: 8)
|—CursorKind.FUNCTION_DECL: ctucan_hw_set_mask_filter(struct ctucan_hw_priv *, int, int, const struct can_filter *) (Line: 446, Col: 6)
|——CursorKind.PARM_DECL: priv (Line: 446, Col: 55)
|———CursorKind.TYPE_REF: struct ctucan_hw_priv (Line: 446, Col: 39)
|——CursorKind.PARM_DECL: fnum (Line: 446, Col: 64)
|——CursorKind.PARM_DECL: enable (Line: 447, Col: 10)
|——CursorKind.PARM_DECL: filter (Line: 447, Col: 43)
|———CursorKind.TYPE_REF: struct can_filter (Line: 447, Col: 31)
|——CursorKind.COMPOUND_STMT:  (Line: 448, Col: 1)
|———CursorKind.DECL_STMT:  (Line: 449, Col: 2)
|————CursorKind.UNION_DECL: ctu_can_fd_filter_control_filter_status (Line: 449, Col: 8)
|————CursorKind.VAR_DECL: creg (Line: 449, Col: 48)
|—————CursorKind.TYPE_REF: union ctu_can_fd_filter_control_filter_status (Line: 449, Col: 8)
|———CursorKind.DECL_STMT:  (Line: 450, Col: 2)
|————CursorKind.ENUM_DECL: ctu_can_fd_can_registers (Line: 450, Col: 7)
|————CursorKind.VAR_DECL: maddr (Line: 450, Col: 32)
|—————CursorKind.TYPE_REF: enum ctu_can_fd_can_registers (Line: 450, Col: 7)
|————CursorKind.VAR_DECL: vaddr (Line: 450, Col: 39)
|—————CursorKind.TYPE_REF: enum ctu_can_fd_can_registers (Line: 450, Col: 7)
|———CursorKind.DECL_STMT:  (Line: 451, Col: 2)
|————CursorKind.VAR_DECL: hwid_mask (Line: 451, Col: 32)
|—————CursorKind.TYPE_REF: union ctu_can_fd_identifier_w (Line: 451, Col: 8)
|———CursorKind.DECL_STMT:  (Line: 452, Col: 2)
|————CursorKind.VAR_DECL: hwid_val (Line: 452, Col: 32)
|—————CursorKind.TYPE_REF: union ctu_can_fd_identifier_w (Line: 452, Col: 8)
|———CursorKind.SWITCH_STMT:  (Line: 463, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 463, Col: 10)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 463, Col: 10)
|————CursorKind.COMPOUND_STMT:  (Line: 463, Col: 16)
|—————CursorKind.BREAK_STMT:  (Line: 471, Col: 2)
|—————CursorKind.BREAK_STMT:  (Line: 479, Col: 2)
|—————CursorKind.BREAK_STMT:  (Line: 487, Col: 2)
|—————CursorKind.DEFAULT_STMT:  (Line: 488, Col: 2)
|——————CursorKind.NULL_STMT:  (Line: 488, Col: 9)
|———CursorKind.BINARY_OPERATOR:  (Line: 492, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 492, Col: 2)
|—————CursorKind.DECL_REF_EXPR: hwid_mask (Line: 492, Col: 2)
|————CursorKind.CALL_EXPR:  (Line: 492, Col: 14)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 492, Col: 14)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 492, Col: 35)
|——————CursorKind.DECL_REF_EXPR: filter (Line: 492, Col: 35)
|———CursorKind.BINARY_OPERATOR:  (Line: 493, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 493, Col: 2)
|—————CursorKind.DECL_REF_EXPR: hwid_val (Line: 493, Col: 2)
|————CursorKind.CALL_EXPR:  (Line: 493, Col: 13)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 493, Col: 13)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 493, Col: 34)
|——————CursorKind.DECL_REF_EXPR: filter (Line: 493, Col: 34)
|———CursorKind.CALL_EXPR:  (Line: 495, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 495, Col: 2)
|—————CursorKind.DECL_REF_EXPR: priv (Line: 495, Col: 2)
|————CursorKind.DECL_REF_EXPR: priv (Line: 495, Col: 18)
|————CursorKind.DECL_REF_EXPR: maddr (Line: 495, Col: 24)
|————CursorKind.MEMBER_REF_EXPR:  (Line: 495, Col: 31)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 495, Col: 31)
|———CursorKind.CALL_EXPR:  (Line: 496, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 496, Col: 2)
|—————CursorKind.DECL_REF_EXPR: priv (Line: 496, Col: 2)
|————CursorKind.DECL_REF_EXPR: priv (Line: 496, Col: 18)
|————CursorKind.DECL_REF_EXPR: vaddr (Line: 496, Col: 24)
|————CursorKind.MEMBER_REF_EXPR:  (Line: 496, Col: 31)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 496, Col: 31)
|—CursorKind.FUNCTION_DECL: ctucan_hw_set_range_filter(struct ctucan_hw_priv *, int, int, int) (Line: 500, Col: 6)
|——CursorKind.PARM_DECL: priv (Line: 500, Col: 56)
|———CursorKind.TYPE_REF: struct ctucan_hw_priv (Line: 500, Col: 40)
|——CursorKind.PARM_DECL: low_th (Line: 500, Col: 70)
|——CursorKind.PARM_DECL: high_th (Line: 501, Col: 14)
|——CursorKind.PARM_DECL: enable (Line: 501, Col: 28)
|——CursorKind.COMPOUND_STMT:  (Line: 502, Col: 1)
|———CursorKind.DECL_STMT:  (Line: 503, Col: 2)
|————CursorKind.VAR_DECL: hwid_low (Line: 503, Col: 32)
|—————CursorKind.TYPE_REF: union ctu_can_fd_identifier_w (Line: 503, Col: 8)
|———CursorKind.DECL_STMT:  (Line: 504, Col: 2)
|————CursorKind.VAR_DECL: hwid_high (Line: 504, Col: 32)
|—————CursorKind.TYPE_REF: union ctu_can_fd_identifier_w (Line: 504, Col: 8)
|———CursorKind.DECL_STMT:  (Line: 505, Col: 2)
|————CursorKind.UNION_DECL: ctu_can_fd_filter_control_filter_status (Line: 505, Col: 8)
|————CursorKind.VAR_DECL: creg (Line: 505, Col: 48)
|—————CursorKind.TYPE_REF: union ctu_can_fd_filter_control_filter_status (Line: 505, Col: 8)
|———CursorKind.BINARY_OPERATOR:  (Line: 507, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 507, Col: 2)
|—————CursorKind.DECL_REF_EXPR: hwid_low (Line: 507, Col: 2)
|————CursorKind.CALL_EXPR:  (Line: 507, Col: 13)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 507, Col: 13)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 507, Col: 34)
|———CursorKind.BINARY_OPERATOR:  (Line: 508, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 508, Col: 2)
|—————CursorKind.DECL_REF_EXPR: hwid_high (Line: 508, Col: 2)
|————CursorKind.CALL_EXPR:  (Line: 508, Col: 14)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 508, Col: 14)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 508, Col: 35)
|———CursorKind.BINARY_OPERATOR:  (Line: 512, Col: 2)
|————CursorKind.MEMBER_REF_EXPR:  (Line: 512, Col: 2)
|—————CursorKind.MEMBER_REF_EXPR:  (Line: 512, Col: 2)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 512, Col: 2)
|———————CursorKind.DECL_REF_EXPR: creg (Line: 512, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 512, Col: 16)
|———CursorKind.BINARY_OPERATOR:  (Line: 513, Col: 2)
|————CursorKind.MEMBER_REF_EXPR:  (Line: 513, Col: 2)
|—————CursorKind.MEMBER_REF_EXPR:  (Line: 513, Col: 2)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 513, Col: 2)
|———————CursorKind.DECL_REF_EXPR: creg (Line: 513, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 513, Col: 16)
|———CursorKind.BINARY_OPERATOR:  (Line: 514, Col: 2)
|————CursorKind.MEMBER_REF_EXPR:  (Line: 514, Col: 2)
|—————CursorKind.MEMBER_REF_EXPR:  (Line: 514, Col: 2)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 514, Col: 2)
|———————CursorKind.DECL_REF_EXPR: creg (Line: 514, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 514, Col: 16)
|———CursorKind.BINARY_OPERATOR:  (Line: 515, Col: 2)
|————CursorKind.MEMBER_REF_EXPR:  (Line: 515, Col: 2)
|—————CursorKind.MEMBER_REF_EXPR:  (Line: 515, Col: 2)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 515, Col: 2)
|———————CursorKind.DECL_REF_EXPR: creg (Line: 515, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 515, Col: 16)
|—CursorKind.FUNCTION_DECL: ctucan_hw_set_rx_tsop(struct ctucan_hw_priv *, enum ctu_can_fd_rx_settings_rtsop) (Line: 522, Col: 6)
|——CursorKind.PARM_DECL: priv (Line: 522, Col: 51)
|———CursorKind.TYPE_REF: struct ctucan_hw_priv (Line: 522, Col: 35)
|——CursorKind.PARM_DECL: val (Line: 523, Col: 42)
|———CursorKind.TYPE_REF: enum ctu_can_fd_rx_settings_rtsop (Line: 523, Col: 13)
|——CursorKind.COMPOUND_STMT:  (Line: 524, Col: 1)
|———CursorKind.DECL_STMT:  (Line: 525, Col: 2)
|————CursorKind.UNION_DECL: ctu_can_fd_rx_status_rx_settings (Line: 525, Col: 8)
|————CursorKind.VAR_DECL: reg (Line: 525, Col: 41)
|—————CursorKind.TYPE_REF: union ctu_can_fd_rx_status_rx_settings (Line: 525, Col: 8)
|———CursorKind.BINARY_OPERATOR:  (Line: 527, Col: 2)
|————CursorKind.MEMBER_REF_EXPR:  (Line: 527, Col: 2)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 527, Col: 2)
|——————CursorKind.DECL_REF_EXPR: reg (Line: 527, Col: 2)
|————CursorKind.INTEGER_LITERAL:  (Line: 527, Col: 12)
|———CursorKind.BINARY_OPERATOR:  (Line: 528, Col: 2)
|————CursorKind.MEMBER_REF_EXPR:  (Line: 528, Col: 2)
|—————CursorKind.MEMBER_REF_EXPR:  (Line: 528, Col: 2)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 528, Col: 2)
|———————CursorKind.DECL_REF_EXPR: reg (Line: 528, Col: 2)
|————CursorKind.DECL_REF_EXPR: val (Line: 528, Col: 16)
|—CursorKind.FUNCTION_DECL: ctucan_hw_read_rx_frame(struct ctucan_hw_priv *, struct canfd_frame *, int *) (Line: 532, Col: 6)
|——CursorKind.PARM_DECL: priv (Line: 532, Col: 53)
|———CursorKind.TYPE_REF: struct ctucan_hw_priv (Line: 532, Col: 37)
|——CursorKind.PARM_DECL: cf (Line: 533, Col: 30)
|———CursorKind.TYPE_REF: struct canfd_frame (Line: 533, Col: 17)
|——CursorKind.PARM_DECL: ts (Line: 533, Col: 39)
|——CursorKind.COMPOUND_STMT:  (Line: 534, Col: 1)
|———CursorKind.DECL_STMT:  (Line: 535, Col: 2)
|————CursorKind.UNION_DECL: ctu_can_fd_frame_form_w (Line: 535, Col: 8)
|————CursorKind.VAR_DECL: ffw (Line: 535, Col: 32)
|—————CursorKind.TYPE_REF: union ctu_can_fd_frame_form_w (Line: 535, Col: 8)
|———CursorKind.CALL_EXPR: ctucan_hw_read_rx_frame_ffw (Line: 538, Col: 2)
|————CursorKind.DECL_REF_EXPR: ctucan_hw_read_rx_frame_ffw (Line: 538, Col: 2)
|————CursorKind.DECL_REF_EXPR: priv (Line: 538, Col: 30)
|————CursorKind.DECL_REF_EXPR: cf (Line: 538, Col: 36)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 538, Col: 40)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 538, Col: 44)
|—CursorKind.FUNCTION_DECL: ctucan_hw_read_rx_frame_ffw(struct ctucan_hw_priv *, struct canfd_frame *, int *, union ctu_can_fd_frame_form_w) (Line: 541, Col: 6)
|——CursorKind.PARM_DECL: priv (Line: 541, Col: 57)
|———CursorKind.TYPE_REF: struct ctucan_hw_priv (Line: 541, Col: 41)
|——CursorKind.PARM_DECL: cf (Line: 542, Col: 27)
|———CursorKind.TYPE_REF: struct canfd_frame (Line: 542, Col: 14)
|——CursorKind.PARM_DECL: ts (Line: 542, Col: 36)
|——CursorKind.PARM_DECL: ffw (Line: 543, Col: 37)
|———CursorKind.TYPE_REF: union ctu_can_fd_frame_form_w (Line: 543, Col: 13)
|——CursorKind.COMPOUND_STMT:  (Line: 544, Col: 1)
|———CursorKind.DECL_STMT:  (Line: 545, Col: 2)
|————CursorKind.VAR_DECL: idw (Line: 545, Col: 32)
|—————CursorKind.TYPE_REF: union ctu_can_fd_identifier_w (Line: 545, Col: 8)
|———CursorKind.DECL_STMT:  (Line: 546, Col: 2)
|————CursorKind.VAR_DECL: i (Line: 546, Col: 15)
|———CursorKind.DECL_STMT:  (Line: 547, Col: 2)
|————CursorKind.ENUM_DECL: ctu_can_fd_frame_form_w_ide (Line: 547, Col: 7)
|————CursorKind.VAR_DECL: ide (Line: 547, Col: 35)
|—————CursorKind.TYPE_REF: enum ctu_can_fd_frame_form_w_ide (Line: 547, Col: 7)
|———CursorKind.BINARY_OPERATOR:  (Line: 550, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 550, Col: 2)
|—————CursorKind.DECL_REF_EXPR: cf (Line: 550, Col: 2)
|————CursorKind.INTEGER_LITERAL:  (Line: 550, Col: 15)
|———CursorKind.BINARY_OPERATOR:  (Line: 551, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 551, Col: 2)
|—————CursorKind.DECL_REF_EXPR: cf (Line: 551, Col: 2)
|————CursorKind.INTEGER_LITERAL:  (Line: 551, Col: 14)
|———CursorKind.IF_STMT:  (Line: 554, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 554, Col: 6)
|————CursorKind.COMPOUND_STMT:  (Line: 554, Col: 27)
|————CursorKind.IF_STMT:  (Line: 559, Col: 9)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 559, Col: 13)
|—————CursorKind.COMPOUND_STMT:  (Line: 559, Col: 37)
|———CursorKind.IF_STMT:  (Line: 564, Col: 2)
|————CursorKind.BINARY_OPERATOR:  (Line: 564, Col: 6)
|—————CursorKind.MEMBER_REF_EXPR:  (Line: 564, Col: 6)
|——————CursorKind.MEMBER_REF_EXPR:  (Line: 564, Col: 6)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 564, Col: 6)
|—————CursorKind.INTEGER_LITERAL:  (Line: 564, Col: 19)
|————CursorKind.COMPOUND_STMT:  (Line: 564, Col: 22)
|—————CursorKind.BINARY_OPERATOR:  (Line: 565, Col: 3)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 565, Col: 3)
|———————CursorKind.DECL_REF_EXPR: cf (Line: 565, Col: 3)
|——————CursorKind.MEMBER_REF_EXPR:  (Line: 565, Col: 13)
|———————CursorKind.MEMBER_REF_EXPR:  (Line: 565, Col: 13)
|————————CursorKind.UNEXPOSED_EXPR:  (Line: 565, Col: 13)
|————CursorKind.COMPOUND_STMT:  (Line: 566, Col: 9)
|—————CursorKind.IF_STMT:  (Line: 567, Col: 3)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 567, Col: 7)
|——————CursorKind.BINARY_OPERATOR:  (Line: 568, Col: 4)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 568, Col: 4)
|————————CursorKind.DECL_REF_EXPR: cf (Line: 568, Col: 4)
|———————CursorKind.BINARY_OPERATOR:  (Line: 568, Col: 14)
|————————CursorKind.PAREN_EXPR:  (Line: 568, Col: 14)
|—————————CursorKind.BINARY_OPERATOR:  (Line: 568, Col: 15)
|——————————CursorKind.MEMBER_REF_EXPR:  (Line: 568, Col: 15)
|———————————CursorKind.MEMBER_REF_EXPR:  (Line: 568, Col: 15)
|————————————CursorKind.UNEXPOSED_EXPR:  (Line: 568, Col: 15)
|——————————CursorKind.INTEGER_LITERAL:  (Line: 568, Col: 29)
|————————CursorKind.INTEGER_LITERAL:  (Line: 568, Col: 35)
|——————CursorKind.BINARY_OPERATOR:  (Line: 570, Col: 4)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 570, Col: 4)
|————————CursorKind.DECL_REF_EXPR: cf (Line: 570, Col: 4)
|———————CursorKind.INTEGER_LITERAL:  (Line: 570, Col: 14)
|———CursorKind.BINARY_OPERATOR:  (Line: 573, Col: 2)
|————CursorKind.DECL_REF_EXPR: ide (Line: 573, Col: 2)
|————CursorKind.CSTYLE_CAST_EXPR:  (Line: 573, Col: 8)
|—————CursorKind.TYPE_REF: enum ctu_can_fd_frame_form_w_ide (Line: 573, Col: 14)
|—————CursorKind.MEMBER_REF_EXPR:  (Line: 573, Col: 42)
|——————CursorKind.MEMBER_REF_EXPR:  (Line: 573, Col: 42)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 573, Col: 42)
|———CursorKind.CALL_EXPR:  (Line: 574, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 574, Col: 2)
|—————CursorKind.DECL_REF_EXPR: ctucan_hw_hwid_to_id (Line: 574, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 574, Col: 23)
|————CursorKind.UNARY_OPERATOR:  (Line: 574, Col: 28)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 574, Col: 29)
|——————CursorKind.DECL_REF_EXPR: cf (Line: 574, Col: 29)
|————CursorKind.DECL_REF_EXPR: ide (Line: 574, Col: 41)
|———CursorKind.FOR_STMT:  (Line: 581, Col: 2)
|————CursorKind.BINARY_OPERATOR:  (Line: 581, Col: 7)
|—————CursorKind.DECL_REF_EXPR: i (Line: 581, Col: 7)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 581, Col: 11)
|——————CursorKind.INTEGER_LITERAL:  (Line: 581, Col: 11)
|————CursorKind.BINARY_OPERATOR:  (Line: 581, Col: 14)
|—————CursorKind.DECL_REF_EXPR: i (Line: 581, Col: 14)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 581, Col: 18)
|——————CursorKind.DECL_REF_EXPR: cf (Line: 581, Col: 18)
|————CursorKind.COMPOUND_ASSIGNMENT_OPERATOR:  (Line: 581, Col: 27)
|—————CursorKind.DECL_REF_EXPR: i (Line: 581, Col: 27)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 581, Col: 32)
|——————CursorKind.INTEGER_LITERAL:  (Line: 581, Col: 32)
|————CursorKind.COMPOUND_STMT:  (Line: 581, Col: 35)
|—CursorKind.ENUM_DECL: ctu_can_fd_tx_status_tx1s (Line: 587, Col: 6)
|—CursorKind.FUNCTION_DECL: ctucan_hw_get_tx_status(struct ctucan_hw_priv *, int) (Line: 587, Col: 32)
|——CursorKind.TYPE_REF: enum ctu_can_fd_tx_status_tx1s (Line: 587, Col: 6)
|——CursorKind.PARM_DECL: priv (Line: 588, Col: 9)
|———CursorKind.TYPE_REF: struct ctucan_hw_priv (Line: 587, Col: 63)
|——CursorKind.PARM_DECL: buf (Line: 588, Col: 18)
|——CursorKind.COMPOUND_STMT:  (Line: 589, Col: 1)
|———CursorKind.DECL_STMT:  (Line: 590, Col: 2)
|————CursorKind.UNION_DECL: ctu_can_fd_tx_status (Line: 590, Col: 8)
|————CursorKind.VAR_DECL: reg (Line: 590, Col: 29)
|—————CursorKind.TYPE_REF: union ctu_can_fd_tx_status (Line: 590, Col: 8)
|———CursorKind.SWITCH_STMT:  (Line: 595, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 595, Col: 10)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 595, Col: 10)
|————CursorKind.COMPOUND_STMT:  (Line: 595, Col: 15)
|—————CursorKind.BREAK_STMT:  (Line: 598, Col: 3)
|—————CursorKind.BREAK_STMT:  (Line: 601, Col: 3)
|—————CursorKind.BREAK_STMT:  (Line: 604, Col: 3)
|—————CursorKind.BREAK_STMT:  (Line: 607, Col: 3)
|—————CursorKind.DEFAULT_STMT:  (Line: 608, Col: 2)
|——————CursorKind.NULL_STMT:  (Line: 608, Col: 9)
|—CursorKind.FUNCTION_DECL: ctucan_hw_is_txt_buf_accessible(struct ctucan_hw_priv *, int) (Line: 614, Col: 6)
|——CursorKind.PARM_DECL: priv (Line: 614, Col: 61)
|———CursorKind.TYPE_REF: struct ctucan_hw_priv (Line: 614, Col: 45)
|——CursorKind.PARM_DECL: buf (Line: 614, Col: 70)
|——CursorKind.COMPOUND_STMT:  (Line: 615, Col: 1)
|———CursorKind.DECL_STMT:  (Line: 616, Col: 2)
|————CursorKind.VAR_DECL: buf_status (Line: 616, Col: 33)
|—————CursorKind.TYPE_REF: enum ctu_can_fd_tx_status_tx1s (Line: 616, Col: 7)
|———CursorKind.BINARY_OPERATOR:  (Line: 618, Col: 2)
|————CursorKind.DECL_REF_EXPR: buf_status (Line: 618, Col: 2)
|————CursorKind.CALL_EXPR:  (Line: 618, Col: 15)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 618, Col: 15)
|—————CursorKind.DECL_REF_EXPR: priv (Line: 618, Col: 39)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 618, Col: 45)
|—CursorKind.FUNCTION_DECL: ctucan_hw_txt_buf_give_command(struct ctucan_hw_priv *, int, int) (Line: 626, Col: 6)
|——CursorKind.PARM_DECL: priv (Line: 626, Col: 60)
|———CursorKind.TYPE_REF: struct ctucan_hw_priv (Line: 626, Col: 44)
|——CursorKind.PARM_DECL: cmd (Line: 626, Col: 69)
|——CursorKind.PARM_DECL: buf (Line: 626, Col: 77)
|——CursorKind.COMPOUND_STMT:  (Line: 627, Col: 1)
|———CursorKind.DECL_STMT:  (Line: 628, Col: 2)
|————CursorKind.UNION_DECL: ctu_can_fd_tx_command (Line: 628, Col: 8)
|————CursorKind.VAR_DECL: reg (Line: 628, Col: 30)
|—————CursorKind.TYPE_REF: union ctu_can_fd_tx_command (Line: 628, Col: 8)
|———CursorKind.BINARY_OPERATOR:  (Line: 630, Col: 2)
|————CursorKind.MEMBER_REF_EXPR:  (Line: 630, Col: 2)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 630, Col: 2)
|——————CursorKind.DECL_REF_EXPR: reg (Line: 630, Col: 2)
|————CursorKind.INTEGER_LITERAL:  (Line: 630, Col: 12)
|———CursorKind.SWITCH_STMT:  (Line: 632, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 632, Col: 10)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 632, Col: 10)
|————CursorKind.COMPOUND_STMT:  (Line: 632, Col: 15)
|—————CursorKind.BINARY_OPERATOR:  (Line: 634, Col: 3)
|——————CursorKind.MEMBER_REF_EXPR:  (Line: 634, Col: 3)
|———————CursorKind.MEMBER_REF_EXPR:  (Line: 634, Col: 3)
|————————CursorKind.UNEXPOSED_EXPR:  (Line: 634, Col: 3)
|—————————CursorKind.DECL_REF_EXPR: reg (Line: 634, Col: 3)
|——————CursorKind.INTEGER_LITERAL:  (Line: 634, Col: 16)
|—————CursorKind.BREAK_STMT:  (Line: 635, Col: 3)
|—————CursorKind.BINARY_OPERATOR:  (Line: 637, Col: 3)
|——————CursorKind.MEMBER_REF_EXPR:  (Line: 637, Col: 3)
|———————CursorKind.MEMBER_REF_EXPR:  (Line: 637, Col: 3)
|————————CursorKind.UNEXPOSED_EXPR:  (Line: 637, Col: 3)
|—————————CursorKind.DECL_REF_EXPR: reg (Line: 637, Col: 3)
|——————CursorKind.INTEGER_LITERAL:  (Line: 637, Col: 16)
|—————CursorKind.BREAK_STMT:  (Line: 638, Col: 3)
|—————CursorKind.BINARY_OPERATOR:  (Line: 640, Col: 3)
|——————CursorKind.MEMBER_REF_EXPR:  (Line: 640, Col: 3)
|———————CursorKind.MEMBER_REF_EXPR:  (Line: 640, Col: 3)
|————————CursorKind.UNEXPOSED_EXPR:  (Line: 640, Col: 3)
|—————————CursorKind.DECL_REF_EXPR: reg (Line: 640, Col: 3)
|——————CursorKind.INTEGER_LITERAL:  (Line: 640, Col: 16)
|—————CursorKind.BREAK_STMT:  (Line: 641, Col: 3)
|—————CursorKind.BINARY_OPERATOR:  (Line: 643, Col: 3)
|——————CursorKind.MEMBER_REF_EXPR:  (Line: 643, Col: 3)
|———————CursorKind.MEMBER_REF_EXPR:  (Line: 643, Col: 3)
|————————CursorKind.UNEXPOSED_EXPR:  (Line: 643, Col: 3)
|—————————CursorKind.DECL_REF_EXPR: reg (Line: 643, Col: 3)
|——————CursorKind.INTEGER_LITERAL:  (Line: 643, Col: 16)
|—————CursorKind.BREAK_STMT:  (Line: 644, Col: 3)
|—————CursorKind.DEFAULT_STMT:  (Line: 645, Col: 2)
|——————CursorKind.NULL_STMT:  (Line: 645, Col: 9)
|———CursorKind.IF_STMT:  (Line: 650, Col: 2)
|————CursorKind.BINARY_OPERATOR:  (Line: 650, Col: 6)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 650, Col: 6)
|—————CursorKind.INTEGER_LITERAL:  (Line: 650, Col: 12)
|————CursorKind.BINARY_OPERATOR:  (Line: 651, Col: 3)
|—————CursorKind.MEMBER_REF_EXPR:  (Line: 651, Col: 3)
|——————CursorKind.MEMBER_REF_EXPR:  (Line: 651, Col: 3)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 651, Col: 3)
|————————CursorKind.DECL_REF_EXPR: reg (Line: 651, Col: 3)
|—————CursorKind.INTEGER_LITERAL:  (Line: 651, Col: 16)
|————CursorKind.IF_STMT:  (Line: 652, Col: 7)
|—————CursorKind.BINARY_OPERATOR:  (Line: 652, Col: 11)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 652, Col: 11)
|——————CursorKind.INTEGER_LITERAL:  (Line: 652, Col: 17)
|—————CursorKind.BINARY_OPERATOR:  (Line: 653, Col: 3)
|——————CursorKind.MEMBER_REF_EXPR:  (Line: 653, Col: 3)
|———————CursorKind.MEMBER_REF_EXPR:  (Line: 653, Col: 3)
|————————CursorKind.UNEXPOSED_EXPR:  (Line: 653, Col: 3)
|—————————CursorKind.DECL_REF_EXPR: reg (Line: 653, Col: 3)
|——————CursorKind.INTEGER_LITERAL:  (Line: 653, Col: 16)
|—————CursorKind.IF_STMT:  (Line: 654, Col: 7)
|——————CursorKind.BINARY_OPERATOR:  (Line: 654, Col: 11)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 654, Col: 11)
|———————CursorKind.INTEGER_LITERAL:  (Line: 654, Col: 17)
|——————CursorKind.BINARY_OPERATOR:  (Line: 655, Col: 3)
|———————CursorKind.MEMBER_REF_EXPR:  (Line: 655, Col: 3)
|————————CursorKind.MEMBER_REF_EXPR:  (Line: 655, Col: 3)
|—————————CursorKind.UNEXPOSED_EXPR:  (Line: 655, Col: 3)
|——————————CursorKind.DECL_REF_EXPR: reg (Line: 655, Col: 3)
|———————CursorKind.INTEGER_LITERAL:  (Line: 655, Col: 16)
|——————CursorKind.NULL_STMT:  (Line: 657, Col: 3)
|—CursorKind.FUNCTION_DECL: ctucan_hw_set_txt_priority(struct ctucan_hw_priv *, const int *) (Line: 663, Col: 6)
|——CursorKind.PARM_DECL: priv (Line: 663, Col: 56)
|———CursorKind.TYPE_REF: struct ctucan_hw_priv (Line: 663, Col: 40)
|——CursorKind.PARM_DECL: prio (Line: 663, Col: 72)
|——CursorKind.COMPOUND_STMT:  (Line: 664, Col: 1)
|———CursorKind.DECL_STMT:  (Line: 665, Col: 2)
|————CursorKind.UNION_DECL: ctu_can_fd_tx_priority (Line: 665, Col: 8)
|————CursorKind.VAR_DECL: reg (Line: 665, Col: 31)
|—————CursorKind.TYPE_REF: union ctu_can_fd_tx_priority (Line: 665, Col: 8)
|———CursorKind.BINARY_OPERATOR:  (Line: 667, Col: 2)
|————CursorKind.MEMBER_REF_EXPR:  (Line: 667, Col: 2)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 667, Col: 2)
|——————CursorKind.DECL_REF_EXPR: reg (Line: 667, Col: 2)
|————CursorKind.INTEGER_LITERAL:  (Line: 667, Col: 12)
|———CursorKind.BINARY_OPERATOR:  (Line: 668, Col: 2)
|————CursorKind.MEMBER_REF_EXPR:  (Line: 668, Col: 2)
|—————CursorKind.MEMBER_REF_EXPR:  (Line: 668, Col: 2)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 668, Col: 2)
|———————CursorKind.DECL_REF_EXPR: reg (Line: 668, Col: 2)
|————CursorKind.ARRAY_SUBSCRIPT_EXPR:  (Line: 668, Col: 16)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 668, Col: 16)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 668, Col: 16)
|—————CursorKind.INTEGER_LITERAL:  (Line: 668, Col: 21)
|———CursorKind.BINARY_OPERATOR:  (Line: 669, Col: 2)
|————CursorKind.MEMBER_REF_EXPR:  (Line: 669, Col: 2)
|—————CursorKind.MEMBER_REF_EXPR:  (Line: 669, Col: 2)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 669, Col: 2)
|———————CursorKind.DECL_REF_EXPR: reg (Line: 669, Col: 2)
|————CursorKind.ARRAY_SUBSCRIPT_EXPR:  (Line: 669, Col: 16)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 669, Col: 16)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 669, Col: 16)
|—————CursorKind.INTEGER_LITERAL:  (Line: 669, Col: 21)
|———CursorKind.BINARY_OPERATOR:  (Line: 670, Col: 2)
|————CursorKind.MEMBER_REF_EXPR:  (Line: 670, Col: 2)
|—————CursorKind.MEMBER_REF_EXPR:  (Line: 670, Col: 2)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 670, Col: 2)
|———————CursorKind.DECL_REF_EXPR: reg (Line: 670, Col: 2)
|————CursorKind.ARRAY_SUBSCRIPT_EXPR:  (Line: 670, Col: 16)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 670, Col: 16)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 670, Col: 16)
|—————CursorKind.INTEGER_LITERAL:  (Line: 670, Col: 21)
|———CursorKind.BINARY_OPERATOR:  (Line: 671, Col: 2)
|————CursorKind.MEMBER_REF_EXPR:  (Line: 671, Col: 2)
|—————CursorKind.MEMBER_REF_EXPR:  (Line: 671, Col: 2)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 671, Col: 2)
|———————CursorKind.DECL_REF_EXPR: reg (Line: 671, Col: 2)
|————CursorKind.ARRAY_SUBSCRIPT_EXPR:  (Line: 671, Col: 16)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 671, Col: 16)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 671, Col: 16)
|—————CursorKind.INTEGER_LITERAL:  (Line: 671, Col: 21)
|—CursorKind.ENUM_DECL: ctu_can_fd_can_registers (Line: 676, Col: 19)
|—CursorKind.VAR_DECL: tx_buf_bases (Line: 677, Col: 2)
|——CursorKind.TYPE_REF: enum ctu_can_fd_can_registers (Line: 676, Col: 19)
|—CursorKind.FUNCTION_DECL: ctucan_hw_insert_frame(struct ctucan_hw_priv *, const struct canfd_frame *, int, int, int) (Line: 682, Col: 6)
|——CursorKind.PARM_DECL: priv (Line: 682, Col: 52)
|———CursorKind.TYPE_REF: struct ctucan_hw_priv (Line: 682, Col: 36)
|——CursorKind.PARM_DECL: cf (Line: 683, Col: 35)
|———CursorKind.TYPE_REF: struct canfd_frame (Line: 683, Col: 22)
|——CursorKind.PARM_DECL: ts (Line: 683, Col: 43)
|——CursorKind.PARM_DECL: buf (Line: 683, Col: 50)
|——CursorKind.PARM_DECL: isfdf (Line: 684, Col: 14)
|——CursorKind.COMPOUND_STMT:  (Line: 685, Col: 1)
|———CursorKind.DECL_STMT:  (Line: 686, Col: 2)
|————CursorKind.VAR_DECL: buf_base (Line: 686, Col: 32)
|—————CursorKind.TYPE_REF: enum ctu_can_fd_can_registers (Line: 686, Col: 7)
|———CursorKind.DECL_STMT:  (Line: 687, Col: 2)
|————CursorKind.UNION_DECL: ctu_can_fd_frame_form_w (Line: 687, Col: 8)
|————CursorKind.VAR_DECL: ffw (Line: 687, Col: 32)
|—————CursorKind.TYPE_REF: union ctu_can_fd_frame_form_w (Line: 687, Col: 8)
|———CursorKind.DECL_STMT:  (Line: 688, Col: 2)
|————CursorKind.VAR_DECL: idw (Line: 688, Col: 32)
|—————CursorKind.TYPE_REF: union ctu_can_fd_identifier_w (Line: 688, Col: 8)
|———CursorKind.DECL_STMT:  (Line: 690, Col: 2)
|————CursorKind.VAR_DECL: i (Line: 690, Col: 15)
|———CursorKind.BINARY_OPERATOR:  (Line: 692, Col: 2)
|————CursorKind.MEMBER_REF_EXPR:  (Line: 692, Col: 2)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 692, Col: 2)
|——————CursorKind.DECL_REF_EXPR: ffw (Line: 692, Col: 2)
|————CursorKind.INTEGER_LITERAL:  (Line: 692, Col: 12)
|———CursorKind.BINARY_OPERATOR:  (Line: 693, Col: 2)
|————CursorKind.MEMBER_REF_EXPR:  (Line: 693, Col: 2)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 693, Col: 2)
|——————CursorKind.DECL_REF_EXPR: idw (Line: 693, Col: 2)
|————CursorKind.INTEGER_LITERAL:  (Line: 693, Col: 12)
|———CursorKind.BINARY_OPERATOR:  (Line: 697, Col: 2)
|————CursorKind.DECL_REF_EXPR: buf_base (Line: 697, Col: 2)
|————CursorKind.ARRAY_SUBSCRIPT_EXPR:  (Line: 697, Col: 13)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 697, Col: 13)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 697, Col: 13)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 697, Col: 26)
|——————CursorKind.UNEXPOSED_EXPR:  (Line: 697, Col: 26)
|———CursorKind.BINARY_OPERATOR:  (Line: 710, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 710, Col: 2)
|—————CursorKind.DECL_REF_EXPR: idw (Line: 710, Col: 2)
|————CursorKind.CALL_EXPR:  (Line: 710, Col: 8)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 710, Col: 8)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 710, Col: 29)
|——————CursorKind.DECL_REF_EXPR: cf (Line: 710, Col: 29)
|———CursorKind.IF_STMT:  (Line: 716, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 716, Col: 6)
|————CursorKind.COMPOUND_STMT:  (Line: 716, Col: 13)
|———CursorKind.IF_STMT:  (Line: 734, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 734, Col: 6)
|————CursorKind.COMPOUND_STMT:  (Line: 734, Col: 36)
|—————CursorKind.FOR_STMT:  (Line: 735, Col: 3)
|——————CursorKind.BINARY_OPERATOR:  (Line: 735, Col: 8)
|———————CursorKind.DECL_REF_EXPR: i (Line: 735, Col: 8)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 735, Col: 12)
|————————CursorKind.INTEGER_LITERAL:  (Line: 735, Col: 12)
|——————CursorKind.BINARY_OPERATOR:  (Line: 735, Col: 15)
|———————CursorKind.DECL_REF_EXPR: i (Line: 735, Col: 15)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 735, Col: 19)
|————————CursorKind.DECL_REF_EXPR: cf (Line: 735, Col: 19)
|——————CursorKind.COMPOUND_ASSIGNMENT_OPERATOR:  (Line: 735, Col: 28)
|———————CursorKind.DECL_REF_EXPR: i (Line: 735, Col: 28)
|———————CursorKind.UNEXPOSED_EXPR:  (Line: 735, Col: 33)
|————————CursorKind.INTEGER_LITERAL:  (Line: 735, Col: 33)
|——————CursorKind.COMPOUND_STMT:  (Line: 735, Col: 36)
|—CursorKind.FUNCTION_DECL: ctucan_hw_read_timestamp(struct ctucan_hw_priv *) (Line: 746, Col: 5)
|——CursorKind.PARM_DECL: priv (Line: 746, Col: 53)
|———CursorKind.TYPE_REF: struct ctucan_hw_priv (Line: 746, Col: 37)
|——CursorKind.COMPOUND_STMT:  (Line: 747, Col: 1)
|———CursorKind.DECL_STMT:  (Line: 748, Col: 2)
|————CursorKind.UNION_DECL: ctu_can_fd_timestamp_low (Line: 748, Col: 8)
|————CursorKind.VAR_DECL: ts_low (Line: 748, Col: 33)
|—————CursorKind.TYPE_REF: union ctu_can_fd_timestamp_low (Line: 748, Col: 8)
|———CursorKind.DECL_STMT:  (Line: 749, Col: 2)
|————CursorKind.UNION_DECL: ctu_can_fd_timestamp_high (Line: 749, Col: 8)
|————CursorKind.VAR_DECL: ts_high (Line: 749, Col: 34)
|—————CursorKind.TYPE_REF: union ctu_can_fd_timestamp_high (Line: 749, Col: 8)
|———CursorKind.DECL_STMT:  (Line: 750, Col: 2)
|————CursorKind.VAR_DECL: ts_high_2 (Line: 750, Col: 34)
|—————CursorKind.TYPE_REF: union ctu_can_fd_timestamp_high (Line: 750, Col: 8)
|—CursorKind.FUNCTION_DECL: ctucan_hw_configure_ssp(struct ctucan_hw_priv *, int, int, int) (Line: 762, Col: 6)
|——CursorKind.PARM_DECL: priv (Line: 762, Col: 53)
|———CursorKind.TYPE_REF: struct ctucan_hw_priv (Line: 762, Col: 37)
|——CursorKind.PARM_DECL: enable_ssp (Line: 762, Col: 64)
|——CursorKind.PARM_DECL: use_trv_delay (Line: 763, Col: 14)
|——CursorKind.PARM_DECL: ssp_offset (Line: 763, Col: 33)
|——CursorKind.COMPOUND_STMT:  (Line: 764, Col: 1)
|———CursorKind.DECL_STMT:  (Line: 765, Col: 2)
|————CursorKind.UNION_DECL: ctu_can_fd_trv_delay_ssp_cfg (Line: 765, Col: 8)
|————CursorKind.VAR_DECL: ssp_cfg (Line: 765, Col: 37)
|—————CursorKind.TYPE_REF: union ctu_can_fd_trv_delay_ssp_cfg (Line: 765, Col: 8)
|———CursorKind.BINARY_OPERATOR:  (Line: 767, Col: 2)
|————CursorKind.MEMBER_REF_EXPR:  (Line: 767, Col: 2)
|—————CursorKind.UNEXPOSED_EXPR:  (Line: 767, Col: 2)
|——————CursorKind.DECL_REF_EXPR: ssp_cfg (Line: 767, Col: 2)
|————CursorKind.INTEGER_LITERAL:  (Line: 767, Col: 16)
|———CursorKind.IF_STMT:  (Line: 768, Col: 2)
|————CursorKind.UNEXPOSED_EXPR:  (Line: 768, Col: 6)
|————CursorKind.COMPOUND_STMT:  (Line: 768, Col: 18)
|————CursorKind.COMPOUND_STMT:  (Line: 773, Col: 9)
