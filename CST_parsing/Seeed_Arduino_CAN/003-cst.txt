Seeed_Arduino_CAN-mcp_can_dfs.h

|Node:translation_unit
|—Node:comment
|—Node:preproc_ifdef Text: #ifndef _MCP2515DFS_H_
#define _MCP2515DFS_H_

#include <Arduino.h>
#include <SPI.h>
#include <inttypes.h>

#ifndef INT32U
#define INT32U unsigned long
#endif

#ifndef INT8U
#define INT8U byte
#endif

// if print debug information
#define DEBUG_MODE 0

/*
 *   Begin mt
 */
#define TIMEOUTVALUE    50
#define MCP_SIDH        0
#define MCP_SIDL        1
#define MCP_EID8        2
#define MCP_EID0        3

#define MCP_TXB_EXIDE_M     0x08                                        /* In TXBnSIDL                  */
#define MCP_DLC_MASK        0x0F                                        /* 4 LSBits                     */
#define MCP_RTR_MASK        0x40                                        /* (1<<6) Bit 6                 */

#define MCP_RXB_RX_ANY      0x60
#define MCP_RXB_RX_EXT      0x40
#define MCP_RXB_RX_STD      0x20
#define MCP_RXB_RX_STDEXT   0x00
#define MCP_RXB_RX_MASK     0x60
#define MCP_RXB_BUKT_MASK   (1<<2)

/*
** Bits in the TXBnCTRL registers.
*/
#define MCP_TXB_TXBUFE_M    0x80
#define MCP_TXB_ABTF_M      0x40
#define MCP_TXB_MLOA_M      0x20
#define MCP_TXB_TXERR_M     0x10
#define MCP_TXB_TXREQ_M     0x08
#define MCP_TXB_TXIE_M      0x04
#define MCP_TXB_TXP10_M     0x03

#define MCP_TXB_RTR_M       0x40                                        /* In TXBnDLC                   */
#define MCP_RXB_IDE_M       0x08                                        /* In RXBnSIDL                  */
#define MCP_RXB_RTR_M       0x40                                        /* In RXBnDLC                   */

#define MCP_STAT_RXIF_MASK   (0x03)
#define MCP_STAT_RX0IF (1<<0)
#define MCP_STAT_RX1IF (1<<1)

#define MCP_EFLG_RX1OVR (1<<7)
#define MCP_EFLG_RX0OVR (1<<6)
#define MCP_EFLG_TXBO   (1<<5)
#define MCP_EFLG_TXEP   (1<<4)
#define MCP_EFLG_RXEP   (1<<3)
#define MCP_EFLG_TXWAR  (1<<2)
#define MCP_EFLG_RXWAR  (1<<1)
#define MCP_EFLG_EWARN  (1<<0)
#define MCP_EFLG_ERRORMASK  (0xF8)                                      /* 5 MS-Bits                    */


/*
 *   Define MCP2515 register addresses
 */

#define MCP_RXF0SIDH    0x00
#define MCP_RXF0SIDL    0x01
#define MCP_RXF0EID8    0x02
#define MCP_RXF0EID0    0x03
#define MCP_RXF1SIDH    0x04
#define MCP_RXF1SIDL    0x05
#define MCP_RXF1EID8    0x06
#define MCP_RXF1EID0    0x07
#define MCP_RXF2SIDH    0x08
#define MCP_RXF2SIDL    0x09
#define MCP_RXF2EID8    0x0A
#define MCP_RXF2EID0    0x0B
#define MCP_CANSTAT     0x0E
#define MCP_CANCTRL     0x0F
#define MCP_RXF3SIDH    0x10
#define MCP_RXF3SIDL    0x11
#define MCP_RXF3EID8    0x12
#define MCP_RXF3EID0    0x13
#define MCP_RXF4SIDH    0x14
#define MCP_RXF4SIDL    0x15
#define MCP_RXF4EID8    0x16
#define MCP_RXF4EID0    0x17
#define MCP_RXF5SIDH    0x18
#define MCP_RXF5SIDL    0x19
#define MCP_RXF5EID8    0x1A
#define MCP_RXF5EID0    0x1B
#define MCP_TEC         0x1C
#define MCP_REC         0x1D
#define MCP_RXM0SIDH    0x20
#define MCP_RXM0SIDL    0x21
#define MCP_RXM0EID8    0x22
#define MCP_RXM0EID0    0x23
#define MCP_RXM1SIDH    0x24
#define MCP_RXM1SIDL    0x25
#define MCP_RXM1EID8    0x26
#define MCP_RXM1EID0    0x27
#define MCP_CNF3        0x28
#define MCP_CNF2        0x29
#define MCP_CNF1        0x2A
#define MCP_CANINTE     0x2B
#define MCP_CANINTF     0x2C
#define MCP_EFLG        0x2D
#define MCP_TXB0CTRL    0x30
#define MCP_TXB1CTRL    0x40
#define MCP_TXB2CTRL    0x50
#define MCP_RXB0CTRL    0x60
#define MCP_RXB0SIDH    0x61
#define MCP_RXB1CTRL    0x70
#define MCP_RXB1SIDH    0x71


#define MCP_TX_INT          0x1C                                    // Enable all transmit interrup ts
#define MCP_TX01_INT        0x0C                                    // Enable TXB0 and TXB1 interru pts
#define MCP_RX_INT          0x03                                    // Enable receive interrupts
#define MCP_NO_INT          0x00                                    // Disable all interrupts

#define MCP_TX01_MASK       0x14
#define MCP_TX_MASK         0x54

/*
 *   Define SPI Instruction Set
 */

#define MCP_WRITE           0x02

#define MCP_READ            0x03

#define MCP_BITMOD          0x05

#define MCP_LOAD_TX0        0x40
#define MCP_LOAD_TX1        0x42
#define MCP_LOAD_TX2        0x44

#define MCP_RTS_TX0         0x81
#define MCP_RTS_TX1         0x82
#define MCP_RTS_TX2         0x84
#define MCP_RTS_ALL         0x87

#define MCP_READ_RX0        0x90
#define MCP_READ_RX1        0x94

#define MCP_READ_STATUS     0xA0

#define MCP_RX_STATUS       0xB0

#define MCP_RESET           0xC0


/*
 *   CANCTRL Register Values
 */

#define MODE_NORMAL     0x00
#define MODE_SLEEP      0x20
#define MODE_LOOPBACK   0x40
#define MODE_LISTENONLY 0x60
#define MODE_CONFIG     0x80
#define MODE_POWERUP    0xE0
#define MODE_MASK       0xE0
#define ABORT_TX        0x10
#define MODE_ONESHOT    0x08
#define CLKOUT_ENABLE   0x04
#define CLKOUT_DISABLE  0x00
#define CLKOUT_PS1      0x00
#define CLKOUT_PS2      0x01
#define CLKOUT_PS4      0x02
#define CLKOUT_PS8      0x03


/*
 *   CNF1 Register Values
 */

#define SJW1            0x00
#define SJW2            0x40
#define SJW3            0x80
#define SJW4            0xC0


/*
 *   CNF2 Register Values
 */

#define BTLMODE         0x80
#define SAMPLE_1X       0x00
#define SAMPLE_3X       0x40


/*
 *   CNF3 Register Values
 */

#define SOF_ENABLE      0x80
#define SOF_DISABLE     0x00
#define WAKFIL_ENABLE   0x40
#define WAKFIL_DISABLE  0x00


/*
 *   CANINTF Register Bits
 */

#define MCP_RX0IF       0x01
#define MCP_RX1IF       0x02
#define MCP_TX0IF       0x04
#define MCP_TX1IF       0x08
#define MCP_TX2IF       0x10
#define MCP_ERRIF       0x20
#define MCP_WAKIF       0x40
#define MCP_MERRF       0x80

/*
 *  speed 16M
 */
#define MCP_16MHz_1000kBPS_CFG1 (0x00)
#define MCP_16MHz_1000kBPS_CFG2 (0xD0)
#define MCP_16MHz_1000kBPS_CFG3 (0x82)

#define MCP_16MHz_500kBPS_CFG1 (0x00)
#define MCP_16MHz_500kBPS_CFG2 (0xF0)
#define MCP_16MHz_500kBPS_CFG3 (0x86)

#define MCP_16MHz_250kBPS_CFG1 (0x41)
#define MCP_16MHz_250kBPS_CFG2 (0xF1)
#define MCP_16MHz_250kBPS_CFG3 (0x85)

#define MCP_16MHz_200kBPS_CFG1 (0x01)
#define MCP_16MHz_200kBPS_CFG2 (0xFA)
#define MCP_16MHz_200kBPS_CFG3 (0x87)

#define MCP_16MHz_125kBPS_CFG1 (0x03)
#define MCP_16MHz_125kBPS_CFG2 (0xF0)
#define MCP_16MHz_125kBPS_CFG3 (0x86)

#define MCP_16MHz_100kBPS_CFG1 (0x03)
#define MCP_16MHz_100kBPS_CFG2 (0xFA)
#define MCP_16MHz_100kBPS_CFG3 (0x87)

/*
#define MCP_16MHz_100kBPS_CFG1 (0x03)
#define MCP_16MHz_100kBPS_CFG2 (0xBA)
#define MCP_16MHz_100kBPS_CFG3 (0x07)
*/

#define MCP_16MHz_80kBPS_CFG1 (0x03)
#define MCP_16MHz_80kBPS_CFG2 (0xFF)
#define MCP_16MHz_80kBPS_CFG3 (0x87)

#define MCP_16MHz_50kBPS_CFG1 (0x07)
#define MCP_16MHz_50kBPS_CFG2 (0xFA)
#define MCP_16MHz_50kBPS_CFG3 (0x87)

#define MCP_16MHz_40kBPS_CFG1 (0x07)
#define MCP_16MHz_40kBPS_CFG2 (0xFF)
#define MCP_16MHz_40kBPS_CFG3 (0x87)

#define MCP_16MHz_31k25BPS_CFG1 (0x0F)
#define MCP_16MHz_31k25BPS_CFG2 (0xF1)
#define MCP_16MHz_31k25BPS_CFG3 (0x85)

#define MCP_16MHz_20kBPS_CFG1 (0x0F)
#define MCP_16MHz_20kBPS_CFG2 (0xFF)
#define MCP_16MHz_20kBPS_CFG3 (0x87)

#define MCP_16MHz_10kBPS_CFG1 (0x1F)
#define MCP_16MHz_10kBPS_CFG2 (0xFF)
#define MCP_16MHz_10kBPS_CFG3 (0x87)

#define MCP_16MHz_5kBPS_CFG1 (0x3F)
#define MCP_16MHz_5kBPS_CFG2 (0xFF)
#define MCP_16MHz_5kBPS_CFG3 (0x87)



#define MCPDEBUG        (0)
#define MCPDEBUG_TXBUF  (0)
#define MCP_N_TXBUFFERS (3)

#define MCP_RXBUF_0 (MCP_RXB0SIDH)
#define MCP_RXBUF_1 (MCP_RXB1SIDH)

//#define SPICS 10
#define MCP2515_SELECT()   digitalWrite(SPICS, LOW)
#define MCP2515_UNSELECT() digitalWrite(SPICS, HIGH)

#define MCP2515_OK         (0)
#define MCP2515_FAIL       (1)
#define MCP_ALLTXBUSY      (2)

#define CANDEBUG   1

#define CANUSELOOP 0

#define CANSENDTIMEOUT (200)                                            /* milliseconds                 */

/*
 *   initial value of gCANAutoProcess
 */
#define CANAUTOPROCESS (1)
#define CANAUTOON  (1)
#define CANAUTOOFF (0)

#define CAN_STDID (0)
#define CAN_EXTID (1)

#define CANDEFAULTIDENT    (0x55CC)
#define CANDEFAULTIDENTEXT (CAN_EXTID)

#define CAN_5KBPS    1
#define CAN_10KBPS   2
#define CAN_20KBPS   3
#define CAN_31K25BPS 4
#define CAN_40KBPS   5
#define CAN_50KBPS   6
#define CAN_80KBPS   7
#define CAN_100KBPS  8
#define CAN_125KBPS  9
#define CAN_200KBPS  10
#define CAN_250KBPS  11
#define CAN_500KBPS  12
#define CAN_1000KBPS 13

#define CAN_OK                  (0)
#define CAN_FAILINIT            (1)
#define CAN_FAILTX              (2)
#define CAN_MSGAVAIL            (3)
#define CAN_NOMSG               (4)
#define CAN_CTRLERROR           (5)
#define CAN_GETTXBFTIMEOUT      (6)
#define CAN_SENDMSGTIMEOUT      (7)
#define CAN_FAIL                (0xff)

#define CAN_MAX_CHAR_IN_MESSAGE (8)

#endif
|——Node:#ifndef Text: #ifndef
|——Node:identifier Text: _MCP2515DFS_H_
|——Node:preproc_def Text: #define _MCP2515DFS_H_

|———Node:#define Text: #define
|———Node:identifier Text: _MCP2515DFS_H_
|——Node:preproc_include Text: #include <Arduino.h>

|———Node:#include Text: #include
|———Node:system_lib_string Text: <Arduino.h>
|——Node:preproc_include Text: #include <SPI.h>

|———Node:#include Text: #include
|———Node:system_lib_string Text: <SPI.h>
|——Node:preproc_include Text: #include <inttypes.h>

|———Node:#include Text: #include
|———Node:system_lib_string Text: <inttypes.h>
|——Node:preproc_ifdef Text: #ifndef INT32U
#define INT32U unsigned long
#endif
|———Node:#ifndef Text: #ifndef
|———Node:identifier Text: INT32U
|———Node:preproc_def Text: #define INT32U unsigned long

|————Node:#define Text: #define
|————Node:identifier Text: INT32U
|————Node:preproc_arg Text: unsigned long
|———Node:#endif Text: #endif
|——Node:preproc_ifdef Text: #ifndef INT8U
#define INT8U byte
#endif
|———Node:#ifndef Text: #ifndef
|———Node:identifier Text: INT8U
|———Node:preproc_def Text: #define INT8U byte

|————Node:#define Text: #define
|————Node:identifier Text: INT8U
|————Node:preproc_arg Text: byte
|———Node:#endif Text: #endif
|——Node:comment
|——Node:preproc_def Text: #define DEBUG_MODE 0

|———Node:#define Text: #define
|———Node:identifier Text: DEBUG_MODE
|———Node:preproc_arg Text: 0
|——Node:comment
|——Node:preproc_def Text: #define TIMEOUTVALUE    50

|———Node:#define Text: #define
|———Node:identifier Text: TIMEOUTVALUE
|———Node:preproc_arg Text: 50
|——Node:preproc_def Text: #define MCP_SIDH        0

|———Node:#define Text: #define
|———Node:identifier Text: MCP_SIDH
|———Node:preproc_arg Text: 0
|——Node:preproc_def Text: #define MCP_SIDL        1

|———Node:#define Text: #define
|———Node:identifier Text: MCP_SIDL
|———Node:preproc_arg Text: 1
|——Node:preproc_def Text: #define MCP_EID8        2

|———Node:#define Text: #define
|———Node:identifier Text: MCP_EID8
|———Node:preproc_arg Text: 2
|——Node:preproc_def Text: #define MCP_EID0        3

|———Node:#define Text: #define
|———Node:identifier Text: MCP_EID0
|———Node:preproc_arg Text: 3
|——Node:preproc_def Text: #define MCP_TXB_EXIDE_M     0x08                                        /* In TXBnSIDL                  */

|———Node:#define Text: #define
|———Node:identifier Text: MCP_TXB_EXIDE_M
|———Node:preproc_arg Text: 0x08                                        
|———Node:comment
|——Node:preproc_def Text: #define MCP_DLC_MASK        0x0F                                        /* 4 LSBits                     */

|———Node:#define Text: #define
|———Node:identifier Text: MCP_DLC_MASK
|———Node:preproc_arg Text: 0x0F                                        
|———Node:comment
|——Node:preproc_def Text: #define MCP_RTR_MASK        0x40                                        /* (1<<6) Bit 6                 */

|———Node:#define Text: #define
|———Node:identifier Text: MCP_RTR_MASK
|———Node:preproc_arg Text: 0x40                                        
|———Node:comment
|——Node:preproc_def Text: #define MCP_RXB_RX_ANY      0x60

|———Node:#define Text: #define
|———Node:identifier Text: MCP_RXB_RX_ANY
|———Node:preproc_arg Text: 0x60
|——Node:preproc_def Text: #define MCP_RXB_RX_EXT      0x40

|———Node:#define Text: #define
|———Node:identifier Text: MCP_RXB_RX_EXT
|———Node:preproc_arg Text: 0x40
|——Node:preproc_def Text: #define MCP_RXB_RX_STD      0x20

|———Node:#define Text: #define
|———Node:identifier Text: MCP_RXB_RX_STD
|———Node:preproc_arg Text: 0x20
|——Node:preproc_def Text: #define MCP_RXB_RX_STDEXT   0x00

|———Node:#define Text: #define
|———Node:identifier Text: MCP_RXB_RX_STDEXT
|———Node:preproc_arg Text: 0x00
|——Node:preproc_def Text: #define MCP_RXB_RX_MASK     0x60

|———Node:#define Text: #define
|———Node:identifier Text: MCP_RXB_RX_MASK
|———Node:preproc_arg Text: 0x60
|——Node:preproc_def Text: #define MCP_RXB_BUKT_MASK   (1<<2)

|———Node:#define Text: #define
|———Node:identifier Text: MCP_RXB_BUKT_MASK
|———Node:preproc_arg Text: (1<<2)
|——Node:comment
|——Node:preproc_def Text: #define MCP_TXB_TXBUFE_M    0x80

|———Node:#define Text: #define
|———Node:identifier Text: MCP_TXB_TXBUFE_M
|———Node:preproc_arg Text: 0x80
|——Node:preproc_def Text: #define MCP_TXB_ABTF_M      0x40

|———Node:#define Text: #define
|———Node:identifier Text: MCP_TXB_ABTF_M
|———Node:preproc_arg Text: 0x40
|——Node:preproc_def Text: #define MCP_TXB_MLOA_M      0x20

|———Node:#define Text: #define
|———Node:identifier Text: MCP_TXB_MLOA_M
|———Node:preproc_arg Text: 0x20
|——Node:preproc_def Text: #define MCP_TXB_TXERR_M     0x10

|———Node:#define Text: #define
|———Node:identifier Text: MCP_TXB_TXERR_M
|———Node:preproc_arg Text: 0x10
|——Node:preproc_def Text: #define MCP_TXB_TXREQ_M     0x08

|———Node:#define Text: #define
|———Node:identifier Text: MCP_TXB_TXREQ_M
|———Node:preproc_arg Text: 0x08
|——Node:preproc_def Text: #define MCP_TXB_TXIE_M      0x04

|———Node:#define Text: #define
|———Node:identifier Text: MCP_TXB_TXIE_M
|———Node:preproc_arg Text: 0x04
|——Node:preproc_def Text: #define MCP_TXB_TXP10_M     0x03

|———Node:#define Text: #define
|———Node:identifier Text: MCP_TXB_TXP10_M
|———Node:preproc_arg Text: 0x03
|——Node:preproc_def Text: #define MCP_TXB_RTR_M       0x40                                        /* In TXBnDLC                   */

|———Node:#define Text: #define
|———Node:identifier Text: MCP_TXB_RTR_M
|———Node:preproc_arg Text: 0x40                                        
|———Node:comment
|——Node:preproc_def Text: #define MCP_RXB_IDE_M       0x08                                        /* In RXBnSIDL                  */

|———Node:#define Text: #define
|———Node:identifier Text: MCP_RXB_IDE_M
|———Node:preproc_arg Text: 0x08                                        
|———Node:comment
|——Node:preproc_def Text: #define MCP_RXB_RTR_M       0x40                                        /* In RXBnDLC                   */

|———Node:#define Text: #define
|———Node:identifier Text: MCP_RXB_RTR_M
|———Node:preproc_arg Text: 0x40                                        
|———Node:comment
|——Node:preproc_def Text: #define MCP_STAT_RXIF_MASK   (0x03)

|———Node:#define Text: #define
|———Node:identifier Text: MCP_STAT_RXIF_MASK
|———Node:preproc_arg Text: (0x03)
|——Node:preproc_def Text: #define MCP_STAT_RX0IF (1<<0)

|———Node:#define Text: #define
|———Node:identifier Text: MCP_STAT_RX0IF
|———Node:preproc_arg Text: (1<<0)
|——Node:preproc_def Text: #define MCP_STAT_RX1IF (1<<1)

|———Node:#define Text: #define
|———Node:identifier Text: MCP_STAT_RX1IF
|———Node:preproc_arg Text: (1<<1)
|——Node:preproc_def Text: #define MCP_EFLG_RX1OVR (1<<7)

|———Node:#define Text: #define
|———Node:identifier Text: MCP_EFLG_RX1OVR
|———Node:preproc_arg Text: (1<<7)
|——Node:preproc_def Text: #define MCP_EFLG_RX0OVR (1<<6)

|———Node:#define Text: #define
|———Node:identifier Text: MCP_EFLG_RX0OVR
|———Node:preproc_arg Text: (1<<6)
|——Node:preproc_def Text: #define MCP_EFLG_TXBO   (1<<5)

|———Node:#define Text: #define
|———Node:identifier Text: MCP_EFLG_TXBO
|———Node:preproc_arg Text: (1<<5)
|——Node:preproc_def Text: #define MCP_EFLG_TXEP   (1<<4)

|———Node:#define Text: #define
|———Node:identifier Text: MCP_EFLG_TXEP
|———Node:preproc_arg Text: (1<<4)
|——Node:preproc_def Text: #define MCP_EFLG_RXEP   (1<<3)

|———Node:#define Text: #define
|———Node:identifier Text: MCP_EFLG_RXEP
|———Node:preproc_arg Text: (1<<3)
|——Node:preproc_def Text: #define MCP_EFLG_TXWAR  (1<<2)

|———Node:#define Text: #define
|———Node:identifier Text: MCP_EFLG_TXWAR
|———Node:preproc_arg Text: (1<<2)
|——Node:preproc_def Text: #define MCP_EFLG_RXWAR  (1<<1)

|———Node:#define Text: #define
|———Node:identifier Text: MCP_EFLG_RXWAR
|———Node:preproc_arg Text: (1<<1)
|——Node:preproc_def Text: #define MCP_EFLG_EWARN  (1<<0)

|———Node:#define Text: #define
|———Node:identifier Text: MCP_EFLG_EWARN
|———Node:preproc_arg Text: (1<<0)
|——Node:preproc_def Text: #define MCP_EFLG_ERRORMASK  (0xF8)                                      /* 5 MS-Bits                    */

|———Node:#define Text: #define
|———Node:identifier Text: MCP_EFLG_ERRORMASK
|———Node:preproc_arg Text: (0xF8)                                      
|———Node:comment
|——Node:comment
|——Node:preproc_def Text: #define MCP_RXF0SIDH    0x00

|———Node:#define Text: #define
|———Node:identifier Text: MCP_RXF0SIDH
|———Node:preproc_arg Text: 0x00
|——Node:preproc_def Text: #define MCP_RXF0SIDL    0x01

|———Node:#define Text: #define
|———Node:identifier Text: MCP_RXF0SIDL
|———Node:preproc_arg Text: 0x01
|——Node:preproc_def Text: #define MCP_RXF0EID8    0x02

|———Node:#define Text: #define
|———Node:identifier Text: MCP_RXF0EID8
|———Node:preproc_arg Text: 0x02
|——Node:preproc_def Text: #define MCP_RXF0EID0    0x03

|———Node:#define Text: #define
|———Node:identifier Text: MCP_RXF0EID0
|———Node:preproc_arg Text: 0x03
|——Node:preproc_def Text: #define MCP_RXF1SIDH    0x04

|———Node:#define Text: #define
|———Node:identifier Text: MCP_RXF1SIDH
|———Node:preproc_arg Text: 0x04
|——Node:preproc_def Text: #define MCP_RXF1SIDL    0x05

|———Node:#define Text: #define
|———Node:identifier Text: MCP_RXF1SIDL
|———Node:preproc_arg Text: 0x05
|——Node:preproc_def Text: #define MCP_RXF1EID8    0x06

|———Node:#define Text: #define
|———Node:identifier Text: MCP_RXF1EID8
|———Node:preproc_arg Text: 0x06
|——Node:preproc_def Text: #define MCP_RXF1EID0    0x07

|———Node:#define Text: #define
|———Node:identifier Text: MCP_RXF1EID0
|———Node:preproc_arg Text: 0x07
|——Node:preproc_def Text: #define MCP_RXF2SIDH    0x08

|———Node:#define Text: #define
|———Node:identifier Text: MCP_RXF2SIDH
|———Node:preproc_arg Text: 0x08
|——Node:preproc_def Text: #define MCP_RXF2SIDL    0x09

|———Node:#define Text: #define
|———Node:identifier Text: MCP_RXF2SIDL
|———Node:preproc_arg Text: 0x09
|——Node:preproc_def Text: #define MCP_RXF2EID8    0x0A

|———Node:#define Text: #define
|———Node:identifier Text: MCP_RXF2EID8
|———Node:preproc_arg Text: 0x0A
|——Node:preproc_def Text: #define MCP_RXF2EID0    0x0B

|———Node:#define Text: #define
|———Node:identifier Text: MCP_RXF2EID0
|———Node:preproc_arg Text: 0x0B
|——Node:preproc_def Text: #define MCP_CANSTAT     0x0E

|———Node:#define Text: #define
|———Node:identifier Text: MCP_CANSTAT
|———Node:preproc_arg Text: 0x0E
|——Node:preproc_def Text: #define MCP_CANCTRL     0x0F

|———Node:#define Text: #define
|———Node:identifier Text: MCP_CANCTRL
|———Node:preproc_arg Text: 0x0F
|——Node:preproc_def Text: #define MCP_RXF3SIDH    0x10

|———Node:#define Text: #define
|———Node:identifier Text: MCP_RXF3SIDH
|———Node:preproc_arg Text: 0x10
|——Node:preproc_def Text: #define MCP_RXF3SIDL    0x11

|———Node:#define Text: #define
|———Node:identifier Text: MCP_RXF3SIDL
|———Node:preproc_arg Text: 0x11
|——Node:preproc_def Text: #define MCP_RXF3EID8    0x12

|———Node:#define Text: #define
|———Node:identifier Text: MCP_RXF3EID8
|———Node:preproc_arg Text: 0x12
|——Node:preproc_def Text: #define MCP_RXF3EID0    0x13

|———Node:#define Text: #define
|———Node:identifier Text: MCP_RXF3EID0
|———Node:preproc_arg Text: 0x13
|——Node:preproc_def Text: #define MCP_RXF4SIDH    0x14

|———Node:#define Text: #define
|———Node:identifier Text: MCP_RXF4SIDH
|———Node:preproc_arg Text: 0x14
|——Node:preproc_def Text: #define MCP_RXF4SIDL    0x15

|———Node:#define Text: #define
|———Node:identifier Text: MCP_RXF4SIDL
|———Node:preproc_arg Text: 0x15
|——Node:preproc_def Text: #define MCP_RXF4EID8    0x16

|———Node:#define Text: #define
|———Node:identifier Text: MCP_RXF4EID8
|———Node:preproc_arg Text: 0x16
|——Node:preproc_def Text: #define MCP_RXF4EID0    0x17

|———Node:#define Text: #define
|———Node:identifier Text: MCP_RXF4EID0
|———Node:preproc_arg Text: 0x17
|——Node:preproc_def Text: #define MCP_RXF5SIDH    0x18

|———Node:#define Text: #define
|———Node:identifier Text: MCP_RXF5SIDH
|———Node:preproc_arg Text: 0x18
|——Node:preproc_def Text: #define MCP_RXF5SIDL    0x19

|———Node:#define Text: #define
|———Node:identifier Text: MCP_RXF5SIDL
|———Node:preproc_arg Text: 0x19
|——Node:preproc_def Text: #define MCP_RXF5EID8    0x1A

|———Node:#define Text: #define
|———Node:identifier Text: MCP_RXF5EID8
|———Node:preproc_arg Text: 0x1A
|——Node:preproc_def Text: #define MCP_RXF5EID0    0x1B

|———Node:#define Text: #define
|———Node:identifier Text: MCP_RXF5EID0
|———Node:preproc_arg Text: 0x1B
|——Node:preproc_def Text: #define MCP_TEC         0x1C

|———Node:#define Text: #define
|———Node:identifier Text: MCP_TEC
|———Node:preproc_arg Text: 0x1C
|——Node:preproc_def Text: #define MCP_REC         0x1D

|———Node:#define Text: #define
|———Node:identifier Text: MCP_REC
|———Node:preproc_arg Text: 0x1D
|——Node:preproc_def Text: #define MCP_RXM0SIDH    0x20

|———Node:#define Text: #define
|———Node:identifier Text: MCP_RXM0SIDH
|———Node:preproc_arg Text: 0x20
|——Node:preproc_def Text: #define MCP_RXM0SIDL    0x21

|———Node:#define Text: #define
|———Node:identifier Text: MCP_RXM0SIDL
|———Node:preproc_arg Text: 0x21
|——Node:preproc_def Text: #define MCP_RXM0EID8    0x22

|———Node:#define Text: #define
|———Node:identifier Text: MCP_RXM0EID8
|———Node:preproc_arg Text: 0x22
|——Node:preproc_def Text: #define MCP_RXM0EID0    0x23

|———Node:#define Text: #define
|———Node:identifier Text: MCP_RXM0EID0
|———Node:preproc_arg Text: 0x23
|——Node:preproc_def Text: #define MCP_RXM1SIDH    0x24

|———Node:#define Text: #define
|———Node:identifier Text: MCP_RXM1SIDH
|———Node:preproc_arg Text: 0x24
|——Node:preproc_def Text: #define MCP_RXM1SIDL    0x25

|———Node:#define Text: #define
|———Node:identifier Text: MCP_RXM1SIDL
|———Node:preproc_arg Text: 0x25
|——Node:preproc_def Text: #define MCP_RXM1EID8    0x26

|———Node:#define Text: #define
|———Node:identifier Text: MCP_RXM1EID8
|———Node:preproc_arg Text: 0x26
|——Node:preproc_def Text: #define MCP_RXM1EID0    0x27

|———Node:#define Text: #define
|———Node:identifier Text: MCP_RXM1EID0
|———Node:preproc_arg Text: 0x27
|——Node:preproc_def Text: #define MCP_CNF3        0x28

|———Node:#define Text: #define
|———Node:identifier Text: MCP_CNF3
|———Node:preproc_arg Text: 0x28
|——Node:preproc_def Text: #define MCP_CNF2        0x29

|———Node:#define Text: #define
|———Node:identifier Text: MCP_CNF2
|———Node:preproc_arg Text: 0x29
|——Node:preproc_def Text: #define MCP_CNF1        0x2A

|———Node:#define Text: #define
|———Node:identifier Text: MCP_CNF1
|———Node:preproc_arg Text: 0x2A
|——Node:preproc_def Text: #define MCP_CANINTE     0x2B

|———Node:#define Text: #define
|———Node:identifier Text: MCP_CANINTE
|———Node:preproc_arg Text: 0x2B
|——Node:preproc_def Text: #define MCP_CANINTF     0x2C

|———Node:#define Text: #define
|———Node:identifier Text: MCP_CANINTF
|———Node:preproc_arg Text: 0x2C
|——Node:preproc_def Text: #define MCP_EFLG        0x2D

|———Node:#define Text: #define
|———Node:identifier Text: MCP_EFLG
|———Node:preproc_arg Text: 0x2D
|——Node:preproc_def Text: #define MCP_TXB0CTRL    0x30

|———Node:#define Text: #define
|———Node:identifier Text: MCP_TXB0CTRL
|———Node:preproc_arg Text: 0x30
|——Node:preproc_def Text: #define MCP_TXB1CTRL    0x40

|———Node:#define Text: #define
|———Node:identifier Text: MCP_TXB1CTRL
|———Node:preproc_arg Text: 0x40
|——Node:preproc_def Text: #define MCP_TXB2CTRL    0x50

|———Node:#define Text: #define
|———Node:identifier Text: MCP_TXB2CTRL
|———Node:preproc_arg Text: 0x50
|——Node:preproc_def Text: #define MCP_RXB0CTRL    0x60

|———Node:#define Text: #define
|———Node:identifier Text: MCP_RXB0CTRL
|———Node:preproc_arg Text: 0x60
|——Node:preproc_def Text: #define MCP_RXB0SIDH    0x61

|———Node:#define Text: #define
|———Node:identifier Text: MCP_RXB0SIDH
|———Node:preproc_arg Text: 0x61
|——Node:preproc_def Text: #define MCP_RXB1CTRL    0x70

|———Node:#define Text: #define
|———Node:identifier Text: MCP_RXB1CTRL
|———Node:preproc_arg Text: 0x70
|——Node:preproc_def Text: #define MCP_RXB1SIDH    0x71

|———Node:#define Text: #define
|———Node:identifier Text: MCP_RXB1SIDH
|———Node:preproc_arg Text: 0x71
|——Node:preproc_def Text: #define MCP_TX_INT          0x1C                                    // Enable all transmit interrup ts

|———Node:#define Text: #define
|———Node:identifier Text: MCP_TX_INT
|———Node:preproc_arg Text: 0x1C                                    // Enable all transmit interrup ts
|——Node:preproc_def Text: #define MCP_TX01_INT        0x0C                                    // Enable TXB0 and TXB1 interru pts

|———Node:#define Text: #define
|———Node:identifier Text: MCP_TX01_INT
|———Node:preproc_arg Text: 0x0C                                    // Enable TXB0 and TXB1 interru pts
|——Node:preproc_def Text: #define MCP_RX_INT          0x03                                    // Enable receive interrupts

|———Node:#define Text: #define
|———Node:identifier Text: MCP_RX_INT
|———Node:preproc_arg Text: 0x03                                    // Enable receive interrupts
|——Node:preproc_def Text: #define MCP_NO_INT          0x00                                    // Disable all interrupts

|———Node:#define Text: #define
|———Node:identifier Text: MCP_NO_INT
|———Node:preproc_arg Text: 0x00                                    // Disable all interrupts
|——Node:preproc_def Text: #define MCP_TX01_MASK       0x14

|———Node:#define Text: #define
|———Node:identifier Text: MCP_TX01_MASK
|———Node:preproc_arg Text: 0x14
|——Node:preproc_def Text: #define MCP_TX_MASK         0x54

|———Node:#define Text: #define
|———Node:identifier Text: MCP_TX_MASK
|———Node:preproc_arg Text: 0x54
|——Node:comment
|——Node:preproc_def Text: #define MCP_WRITE           0x02

|———Node:#define Text: #define
|———Node:identifier Text: MCP_WRITE
|———Node:preproc_arg Text: 0x02
|——Node:preproc_def Text: #define MCP_READ            0x03

|———Node:#define Text: #define
|———Node:identifier Text: MCP_READ
|———Node:preproc_arg Text: 0x03
|——Node:preproc_def Text: #define MCP_BITMOD          0x05

|———Node:#define Text: #define
|———Node:identifier Text: MCP_BITMOD
|———Node:preproc_arg Text: 0x05
|——Node:preproc_def Text: #define MCP_LOAD_TX0        0x40

|———Node:#define Text: #define
|———Node:identifier Text: MCP_LOAD_TX0
|———Node:preproc_arg Text: 0x40
|——Node:preproc_def Text: #define MCP_LOAD_TX1        0x42

|———Node:#define Text: #define
|———Node:identifier Text: MCP_LOAD_TX1
|———Node:preproc_arg Text: 0x42
|——Node:preproc_def Text: #define MCP_LOAD_TX2        0x44

|———Node:#define Text: #define
|———Node:identifier Text: MCP_LOAD_TX2
|———Node:preproc_arg Text: 0x44
|——Node:preproc_def Text: #define MCP_RTS_TX0         0x81

|———Node:#define Text: #define
|———Node:identifier Text: MCP_RTS_TX0
|———Node:preproc_arg Text: 0x81
|——Node:preproc_def Text: #define MCP_RTS_TX1         0x82

|———Node:#define Text: #define
|———Node:identifier Text: MCP_RTS_TX1
|———Node:preproc_arg Text: 0x82
|——Node:preproc_def Text: #define MCP_RTS_TX2         0x84

|———Node:#define Text: #define
|———Node:identifier Text: MCP_RTS_TX2
|———Node:preproc_arg Text: 0x84
|——Node:preproc_def Text: #define MCP_RTS_ALL         0x87

|———Node:#define Text: #define
|———Node:identifier Text: MCP_RTS_ALL
|———Node:preproc_arg Text: 0x87
|——Node:preproc_def Text: #define MCP_READ_RX0        0x90

|———Node:#define Text: #define
|———Node:identifier Text: MCP_READ_RX0
|———Node:preproc_arg Text: 0x90
|——Node:preproc_def Text: #define MCP_READ_RX1        0x94

|———Node:#define Text: #define
|———Node:identifier Text: MCP_READ_RX1
|———Node:preproc_arg Text: 0x94
|——Node:preproc_def Text: #define MCP_READ_STATUS     0xA0

|———Node:#define Text: #define
|———Node:identifier Text: MCP_READ_STATUS
|———Node:preproc_arg Text: 0xA0
|——Node:preproc_def Text: #define MCP_RX_STATUS       0xB0

|———Node:#define Text: #define
|———Node:identifier Text: MCP_RX_STATUS
|———Node:preproc_arg Text: 0xB0
|——Node:preproc_def Text: #define MCP_RESET           0xC0

|———Node:#define Text: #define
|———Node:identifier Text: MCP_RESET
|———Node:preproc_arg Text: 0xC0
|——Node:comment
|——Node:preproc_def Text: #define MODE_NORMAL     0x00

|———Node:#define Text: #define
|———Node:identifier Text: MODE_NORMAL
|———Node:preproc_arg Text: 0x00
|——Node:preproc_def Text: #define MODE_SLEEP      0x20

|———Node:#define Text: #define
|———Node:identifier Text: MODE_SLEEP
|———Node:preproc_arg Text: 0x20
|——Node:preproc_def Text: #define MODE_LOOPBACK   0x40

|———Node:#define Text: #define
|———Node:identifier Text: MODE_LOOPBACK
|———Node:preproc_arg Text: 0x40
|——Node:preproc_def Text: #define MODE_LISTENONLY 0x60

|———Node:#define Text: #define
|———Node:identifier Text: MODE_LISTENONLY
|———Node:preproc_arg Text: 0x60
|——Node:preproc_def Text: #define MODE_CONFIG     0x80

|———Node:#define Text: #define
|———Node:identifier Text: MODE_CONFIG
|———Node:preproc_arg Text: 0x80
|——Node:preproc_def Text: #define MODE_POWERUP    0xE0

|———Node:#define Text: #define
|———Node:identifier Text: MODE_POWERUP
|———Node:preproc_arg Text: 0xE0
|——Node:preproc_def Text: #define MODE_MASK       0xE0

|———Node:#define Text: #define
|———Node:identifier Text: MODE_MASK
|———Node:preproc_arg Text: 0xE0
|——Node:preproc_def Text: #define ABORT_TX        0x10

|———Node:#define Text: #define
|———Node:identifier Text: ABORT_TX
|———Node:preproc_arg Text: 0x10
|——Node:preproc_def Text: #define MODE_ONESHOT    0x08

|———Node:#define Text: #define
|———Node:identifier Text: MODE_ONESHOT
|———Node:preproc_arg Text: 0x08
|——Node:preproc_def Text: #define CLKOUT_ENABLE   0x04

|———Node:#define Text: #define
|———Node:identifier Text: CLKOUT_ENABLE
|———Node:preproc_arg Text: 0x04
|——Node:preproc_def Text: #define CLKOUT_DISABLE  0x00

|———Node:#define Text: #define
|———Node:identifier Text: CLKOUT_DISABLE
|———Node:preproc_arg Text: 0x00
|——Node:preproc_def Text: #define CLKOUT_PS1      0x00

|———Node:#define Text: #define
|———Node:identifier Text: CLKOUT_PS1
|———Node:preproc_arg Text: 0x00
|——Node:preproc_def Text: #define CLKOUT_PS2      0x01

|———Node:#define Text: #define
|———Node:identifier Text: CLKOUT_PS2
|———Node:preproc_arg Text: 0x01
|——Node:preproc_def Text: #define CLKOUT_PS4      0x02

|———Node:#define Text: #define
|———Node:identifier Text: CLKOUT_PS4
|———Node:preproc_arg Text: 0x02
|——Node:preproc_def Text: #define CLKOUT_PS8      0x03

|———Node:#define Text: #define
|———Node:identifier Text: CLKOUT_PS8
|———Node:preproc_arg Text: 0x03
|——Node:comment
|——Node:preproc_def Text: #define SJW1            0x00

|———Node:#define Text: #define
|———Node:identifier Text: SJW1
|———Node:preproc_arg Text: 0x00
|——Node:preproc_def Text: #define SJW2            0x40

|———Node:#define Text: #define
|———Node:identifier Text: SJW2
|———Node:preproc_arg Text: 0x40
|——Node:preproc_def Text: #define SJW3            0x80

|———Node:#define Text: #define
|———Node:identifier Text: SJW3
|———Node:preproc_arg Text: 0x80
|——Node:preproc_def Text: #define SJW4            0xC0

|———Node:#define Text: #define
|———Node:identifier Text: SJW4
|———Node:preproc_arg Text: 0xC0
|——Node:comment
|——Node:preproc_def Text: #define BTLMODE         0x80

|———Node:#define Text: #define
|———Node:identifier Text: BTLMODE
|———Node:preproc_arg Text: 0x80
|——Node:preproc_def Text: #define SAMPLE_1X       0x00

|———Node:#define Text: #define
|———Node:identifier Text: SAMPLE_1X
|———Node:preproc_arg Text: 0x00
|——Node:preproc_def Text: #define SAMPLE_3X       0x40

|———Node:#define Text: #define
|———Node:identifier Text: SAMPLE_3X
|———Node:preproc_arg Text: 0x40
|——Node:comment
|——Node:preproc_def Text: #define SOF_ENABLE      0x80

|———Node:#define Text: #define
|———Node:identifier Text: SOF_ENABLE
|———Node:preproc_arg Text: 0x80
|——Node:preproc_def Text: #define SOF_DISABLE     0x00

|———Node:#define Text: #define
|———Node:identifier Text: SOF_DISABLE
|———Node:preproc_arg Text: 0x00
|——Node:preproc_def Text: #define WAKFIL_ENABLE   0x40

|———Node:#define Text: #define
|———Node:identifier Text: WAKFIL_ENABLE
|———Node:preproc_arg Text: 0x40
|——Node:preproc_def Text: #define WAKFIL_DISABLE  0x00

|———Node:#define Text: #define
|———Node:identifier Text: WAKFIL_DISABLE
|———Node:preproc_arg Text: 0x00
|——Node:comment
|——Node:preproc_def Text: #define MCP_RX0IF       0x01

|———Node:#define Text: #define
|———Node:identifier Text: MCP_RX0IF
|———Node:preproc_arg Text: 0x01
|——Node:preproc_def Text: #define MCP_RX1IF       0x02

|———Node:#define Text: #define
|———Node:identifier Text: MCP_RX1IF
|———Node:preproc_arg Text: 0x02
|——Node:preproc_def Text: #define MCP_TX0IF       0x04

|———Node:#define Text: #define
|———Node:identifier Text: MCP_TX0IF
|———Node:preproc_arg Text: 0x04
|——Node:preproc_def Text: #define MCP_TX1IF       0x08

|———Node:#define Text: #define
|———Node:identifier Text: MCP_TX1IF
|———Node:preproc_arg Text: 0x08
|——Node:preproc_def Text: #define MCP_TX2IF       0x10

|———Node:#define Text: #define
|———Node:identifier Text: MCP_TX2IF
|———Node:preproc_arg Text: 0x10
|——Node:preproc_def Text: #define MCP_ERRIF       0x20

|———Node:#define Text: #define
|———Node:identifier Text: MCP_ERRIF
|———Node:preproc_arg Text: 0x20
|——Node:preproc_def Text: #define MCP_WAKIF       0x40

|———Node:#define Text: #define
|———Node:identifier Text: MCP_WAKIF
|———Node:preproc_arg Text: 0x40
|——Node:preproc_def Text: #define MCP_MERRF       0x80

|———Node:#define Text: #define
|———Node:identifier Text: MCP_MERRF
|———Node:preproc_arg Text: 0x80
|——Node:comment
|——Node:preproc_def Text: #define MCP_16MHz_1000kBPS_CFG1 (0x00)

|———Node:#define Text: #define
|———Node:identifier Text: MCP_16MHz_1000kBPS_CFG1
|———Node:preproc_arg Text: (0x00)
|——Node:preproc_def Text: #define MCP_16MHz_1000kBPS_CFG2 (0xD0)

|———Node:#define Text: #define
|———Node:identifier Text: MCP_16MHz_1000kBPS_CFG2
|———Node:preproc_arg Text: (0xD0)
|——Node:preproc_def Text: #define MCP_16MHz_1000kBPS_CFG3 (0x82)

|———Node:#define Text: #define
|———Node:identifier Text: MCP_16MHz_1000kBPS_CFG3
|———Node:preproc_arg Text: (0x82)
|——Node:preproc_def Text: #define MCP_16MHz_500kBPS_CFG1 (0x00)

|———Node:#define Text: #define
|———Node:identifier Text: MCP_16MHz_500kBPS_CFG1
|———Node:preproc_arg Text: (0x00)
|——Node:preproc_def Text: #define MCP_16MHz_500kBPS_CFG2 (0xF0)

|———Node:#define Text: #define
|———Node:identifier Text: MCP_16MHz_500kBPS_CFG2
|———Node:preproc_arg Text: (0xF0)
|——Node:preproc_def Text: #define MCP_16MHz_500kBPS_CFG3 (0x86)

|———Node:#define Text: #define
|———Node:identifier Text: MCP_16MHz_500kBPS_CFG3
|———Node:preproc_arg Text: (0x86)
|——Node:preproc_def Text: #define MCP_16MHz_250kBPS_CFG1 (0x41)

|———Node:#define Text: #define
|———Node:identifier Text: MCP_16MHz_250kBPS_CFG1
|———Node:preproc_arg Text: (0x41)
|——Node:preproc_def Text: #define MCP_16MHz_250kBPS_CFG2 (0xF1)

|———Node:#define Text: #define
|———Node:identifier Text: MCP_16MHz_250kBPS_CFG2
|———Node:preproc_arg Text: (0xF1)
|——Node:preproc_def Text: #define MCP_16MHz_250kBPS_CFG3 (0x85)

|———Node:#define Text: #define
|———Node:identifier Text: MCP_16MHz_250kBPS_CFG3
|———Node:preproc_arg Text: (0x85)
|——Node:preproc_def Text: #define MCP_16MHz_200kBPS_CFG1 (0x01)

|———Node:#define Text: #define
|———Node:identifier Text: MCP_16MHz_200kBPS_CFG1
|———Node:preproc_arg Text: (0x01)
|——Node:preproc_def Text: #define MCP_16MHz_200kBPS_CFG2 (0xFA)

|———Node:#define Text: #define
|———Node:identifier Text: MCP_16MHz_200kBPS_CFG2
|———Node:preproc_arg Text: (0xFA)
|——Node:preproc_def Text: #define MCP_16MHz_200kBPS_CFG3 (0x87)

|———Node:#define Text: #define
|———Node:identifier Text: MCP_16MHz_200kBPS_CFG3
|———Node:preproc_arg Text: (0x87)
|——Node:preproc_def Text: #define MCP_16MHz_125kBPS_CFG1 (0x03)

|———Node:#define Text: #define
|———Node:identifier Text: MCP_16MHz_125kBPS_CFG1
|———Node:preproc_arg Text: (0x03)
|——Node:preproc_def Text: #define MCP_16MHz_125kBPS_CFG2 (0xF0)

|———Node:#define Text: #define
|———Node:identifier Text: MCP_16MHz_125kBPS_CFG2
|———Node:preproc_arg Text: (0xF0)
|——Node:preproc_def Text: #define MCP_16MHz_125kBPS_CFG3 (0x86)

|———Node:#define Text: #define
|———Node:identifier Text: MCP_16MHz_125kBPS_CFG3
|———Node:preproc_arg Text: (0x86)
|——Node:preproc_def Text: #define MCP_16MHz_100kBPS_CFG1 (0x03)

|———Node:#define Text: #define
|———Node:identifier Text: MCP_16MHz_100kBPS_CFG1
|———Node:preproc_arg Text: (0x03)
|——Node:preproc_def Text: #define MCP_16MHz_100kBPS_CFG2 (0xFA)

|———Node:#define Text: #define
|———Node:identifier Text: MCP_16MHz_100kBPS_CFG2
|———Node:preproc_arg Text: (0xFA)
|——Node:preproc_def Text: #define MCP_16MHz_100kBPS_CFG3 (0x87)

|———Node:#define Text: #define
|———Node:identifier Text: MCP_16MHz_100kBPS_CFG3
|———Node:preproc_arg Text: (0x87)
|——Node:comment
|——Node:preproc_def Text: #define MCP_16MHz_80kBPS_CFG1 (0x03)

|———Node:#define Text: #define
|———Node:identifier Text: MCP_16MHz_80kBPS_CFG1
|———Node:preproc_arg Text: (0x03)
|——Node:preproc_def Text: #define MCP_16MHz_80kBPS_CFG2 (0xFF)

|———Node:#define Text: #define
|———Node:identifier Text: MCP_16MHz_80kBPS_CFG2
|———Node:preproc_arg Text: (0xFF)
|——Node:preproc_def Text: #define MCP_16MHz_80kBPS_CFG3 (0x87)

|———Node:#define Text: #define
|———Node:identifier Text: MCP_16MHz_80kBPS_CFG3
|———Node:preproc_arg Text: (0x87)
|——Node:preproc_def Text: #define MCP_16MHz_50kBPS_CFG1 (0x07)

|———Node:#define Text: #define
|———Node:identifier Text: MCP_16MHz_50kBPS_CFG1
|———Node:preproc_arg Text: (0x07)
|——Node:preproc_def Text: #define MCP_16MHz_50kBPS_CFG2 (0xFA)

|———Node:#define Text: #define
|———Node:identifier Text: MCP_16MHz_50kBPS_CFG2
|———Node:preproc_arg Text: (0xFA)
|——Node:preproc_def Text: #define MCP_16MHz_50kBPS_CFG3 (0x87)

|———Node:#define Text: #define
|———Node:identifier Text: MCP_16MHz_50kBPS_CFG3
|———Node:preproc_arg Text: (0x87)
|——Node:preproc_def Text: #define MCP_16MHz_40kBPS_CFG1 (0x07)

|———Node:#define Text: #define
|———Node:identifier Text: MCP_16MHz_40kBPS_CFG1
|———Node:preproc_arg Text: (0x07)
|——Node:preproc_def Text: #define MCP_16MHz_40kBPS_CFG2 (0xFF)

|———Node:#define Text: #define
|———Node:identifier Text: MCP_16MHz_40kBPS_CFG2
|———Node:preproc_arg Text: (0xFF)
|——Node:preproc_def Text: #define MCP_16MHz_40kBPS_CFG3 (0x87)

|———Node:#define Text: #define
|———Node:identifier Text: MCP_16MHz_40kBPS_CFG3
|———Node:preproc_arg Text: (0x87)
|——Node:preproc_def Text: #define MCP_16MHz_31k25BPS_CFG1 (0x0F)

|———Node:#define Text: #define
|———Node:identifier Text: MCP_16MHz_31k25BPS_CFG1
|———Node:preproc_arg Text: (0x0F)
|——Node:preproc_def Text: #define MCP_16MHz_31k25BPS_CFG2 (0xF1)

|———Node:#define Text: #define
|———Node:identifier Text: MCP_16MHz_31k25BPS_CFG2
|———Node:preproc_arg Text: (0xF1)
|——Node:preproc_def Text: #define MCP_16MHz_31k25BPS_CFG3 (0x85)

|———Node:#define Text: #define
|———Node:identifier Text: MCP_16MHz_31k25BPS_CFG3
|———Node:preproc_arg Text: (0x85)
|——Node:preproc_def Text: #define MCP_16MHz_20kBPS_CFG1 (0x0F)

|———Node:#define Text: #define
|———Node:identifier Text: MCP_16MHz_20kBPS_CFG1
|———Node:preproc_arg Text: (0x0F)
|——Node:preproc_def Text: #define MCP_16MHz_20kBPS_CFG2 (0xFF)

|———Node:#define Text: #define
|———Node:identifier Text: MCP_16MHz_20kBPS_CFG2
|———Node:preproc_arg Text: (0xFF)
|——Node:preproc_def Text: #define MCP_16MHz_20kBPS_CFG3 (0x87)

|———Node:#define Text: #define
|———Node:identifier Text: MCP_16MHz_20kBPS_CFG3
|———Node:preproc_arg Text: (0x87)
|——Node:preproc_def Text: #define MCP_16MHz_10kBPS_CFG1 (0x1F)

|———Node:#define Text: #define
|———Node:identifier Text: MCP_16MHz_10kBPS_CFG1
|———Node:preproc_arg Text: (0x1F)
|——Node:preproc_def Text: #define MCP_16MHz_10kBPS_CFG2 (0xFF)

|———Node:#define Text: #define
|———Node:identifier Text: MCP_16MHz_10kBPS_CFG2
|———Node:preproc_arg Text: (0xFF)
|——Node:preproc_def Text: #define MCP_16MHz_10kBPS_CFG3 (0x87)

|———Node:#define Text: #define
|———Node:identifier Text: MCP_16MHz_10kBPS_CFG3
|———Node:preproc_arg Text: (0x87)
|——Node:preproc_def Text: #define MCP_16MHz_5kBPS_CFG1 (0x3F)

|———Node:#define Text: #define
|———Node:identifier Text: MCP_16MHz_5kBPS_CFG1
|———Node:preproc_arg Text: (0x3F)
|——Node:preproc_def Text: #define MCP_16MHz_5kBPS_CFG2 (0xFF)

|———Node:#define Text: #define
|———Node:identifier Text: MCP_16MHz_5kBPS_CFG2
|———Node:preproc_arg Text: (0xFF)
|——Node:preproc_def Text: #define MCP_16MHz_5kBPS_CFG3 (0x87)

|———Node:#define Text: #define
|———Node:identifier Text: MCP_16MHz_5kBPS_CFG3
|———Node:preproc_arg Text: (0x87)
|——Node:preproc_def Text: #define MCPDEBUG        (0)

|———Node:#define Text: #define
|———Node:identifier Text: MCPDEBUG
|———Node:preproc_arg Text: (0)
|——Node:preproc_def Text: #define MCPDEBUG_TXBUF  (0)

|———Node:#define Text: #define
|———Node:identifier Text: MCPDEBUG_TXBUF
|———Node:preproc_arg Text: (0)
|——Node:preproc_def Text: #define MCP_N_TXBUFFERS (3)

|———Node:#define Text: #define
|———Node:identifier Text: MCP_N_TXBUFFERS
|———Node:preproc_arg Text: (3)
|——Node:preproc_def Text: #define MCP_RXBUF_0 (MCP_RXB0SIDH)

|———Node:#define Text: #define
|———Node:identifier Text: MCP_RXBUF_0
|———Node:preproc_arg Text: (MCP_RXB0SIDH)
|——Node:preproc_def Text: #define MCP_RXBUF_1 (MCP_RXB1SIDH)

|———Node:#define Text: #define
|———Node:identifier Text: MCP_RXBUF_1
|———Node:preproc_arg Text: (MCP_RXB1SIDH)
|——Node:comment
|——Node:preproc_function_def Text: #define MCP2515_SELECT()   digitalWrite(SPICS, LOW)

|———Node:#define Text: #define
|———Node:identifier Text: MCP2515_SELECT
|———Node:preproc_params Text: ()
|————Node:( Text: (
|————Node:) Text: )
|———Node:preproc_arg Text: digitalWrite(SPICS, LOW)
|——Node:preproc_function_def Text: #define MCP2515_UNSELECT() digitalWrite(SPICS, HIGH)

|———Node:#define Text: #define
|———Node:identifier Text: MCP2515_UNSELECT
|———Node:preproc_params Text: ()
|————Node:( Text: (
|————Node:) Text: )
|———Node:preproc_arg Text: digitalWrite(SPICS, HIGH)
|——Node:preproc_def Text: #define MCP2515_OK         (0)

|———Node:#define Text: #define
|———Node:identifier Text: MCP2515_OK
|———Node:preproc_arg Text: (0)
|——Node:preproc_def Text: #define MCP2515_FAIL       (1)

|———Node:#define Text: #define
|———Node:identifier Text: MCP2515_FAIL
|———Node:preproc_arg Text: (1)
|——Node:preproc_def Text: #define MCP_ALLTXBUSY      (2)

|———Node:#define Text: #define
|———Node:identifier Text: MCP_ALLTXBUSY
|———Node:preproc_arg Text: (2)
|——Node:preproc_def Text: #define CANDEBUG   1

|———Node:#define Text: #define
|———Node:identifier Text: CANDEBUG
|———Node:preproc_arg Text: 1
|——Node:preproc_def Text: #define CANUSELOOP 0

|———Node:#define Text: #define
|———Node:identifier Text: CANUSELOOP
|———Node:preproc_arg Text: 0
|——Node:preproc_def Text: #define CANSENDTIMEOUT (200)                                            /* milliseconds                 */

|———Node:#define Text: #define
|———Node:identifier Text: CANSENDTIMEOUT
|———Node:preproc_arg Text: (200)                                            
|———Node:comment
|——Node:comment
|——Node:preproc_def Text: #define CANAUTOPROCESS (1)

|———Node:#define Text: #define
|———Node:identifier Text: CANAUTOPROCESS
|———Node:preproc_arg Text: (1)
|——Node:preproc_def Text: #define CANAUTOON  (1)

|———Node:#define Text: #define
|———Node:identifier Text: CANAUTOON
|———Node:preproc_arg Text: (1)
|——Node:preproc_def Text: #define CANAUTOOFF (0)

|———Node:#define Text: #define
|———Node:identifier Text: CANAUTOOFF
|———Node:preproc_arg Text: (0)
|——Node:preproc_def Text: #define CAN_STDID (0)

|———Node:#define Text: #define
|———Node:identifier Text: CAN_STDID
|———Node:preproc_arg Text: (0)
|——Node:preproc_def Text: #define CAN_EXTID (1)

|———Node:#define Text: #define
|———Node:identifier Text: CAN_EXTID
|———Node:preproc_arg Text: (1)
|——Node:preproc_def Text: #define CANDEFAULTIDENT    (0x55CC)

|———Node:#define Text: #define
|———Node:identifier Text: CANDEFAULTIDENT
|———Node:preproc_arg Text: (0x55CC)
|——Node:preproc_def Text: #define CANDEFAULTIDENTEXT (CAN_EXTID)

|———Node:#define Text: #define
|———Node:identifier Text: CANDEFAULTIDENTEXT
|———Node:preproc_arg Text: (CAN_EXTID)
|——Node:preproc_def Text: #define CAN_5KBPS    1

|———Node:#define Text: #define
|———Node:identifier Text: CAN_5KBPS
|———Node:preproc_arg Text: 1
|——Node:preproc_def Text: #define CAN_10KBPS   2

|———Node:#define Text: #define
|———Node:identifier Text: CAN_10KBPS
|———Node:preproc_arg Text: 2
|——Node:preproc_def Text: #define CAN_20KBPS   3

|———Node:#define Text: #define
|———Node:identifier Text: CAN_20KBPS
|———Node:preproc_arg Text: 3
|——Node:preproc_def Text: #define CAN_31K25BPS 4

|———Node:#define Text: #define
|———Node:identifier Text: CAN_31K25BPS
|———Node:preproc_arg Text: 4
|——Node:preproc_def Text: #define CAN_40KBPS   5

|———Node:#define Text: #define
|———Node:identifier Text: CAN_40KBPS
|———Node:preproc_arg Text: 5
|——Node:preproc_def Text: #define CAN_50KBPS   6

|———Node:#define Text: #define
|———Node:identifier Text: CAN_50KBPS
|———Node:preproc_arg Text: 6
|——Node:preproc_def Text: #define CAN_80KBPS   7

|———Node:#define Text: #define
|———Node:identifier Text: CAN_80KBPS
|———Node:preproc_arg Text: 7
|——Node:preproc_def Text: #define CAN_100KBPS  8

|———Node:#define Text: #define
|———Node:identifier Text: CAN_100KBPS
|———Node:preproc_arg Text: 8
|——Node:preproc_def Text: #define CAN_125KBPS  9

|———Node:#define Text: #define
|———Node:identifier Text: CAN_125KBPS
|———Node:preproc_arg Text: 9
|——Node:preproc_def Text: #define CAN_200KBPS  10

|———Node:#define Text: #define
|———Node:identifier Text: CAN_200KBPS
|———Node:preproc_arg Text: 10
|——Node:preproc_def Text: #define CAN_250KBPS  11

|———Node:#define Text: #define
|———Node:identifier Text: CAN_250KBPS
|———Node:preproc_arg Text: 11
|——Node:preproc_def Text: #define CAN_500KBPS  12

|———Node:#define Text: #define
|———Node:identifier Text: CAN_500KBPS
|———Node:preproc_arg Text: 12
|——Node:preproc_def Text: #define CAN_1000KBPS 13

|———Node:#define Text: #define
|———Node:identifier Text: CAN_1000KBPS
|———Node:preproc_arg Text: 13
|——Node:preproc_def Text: #define CAN_OK                  (0)

|———Node:#define Text: #define
|———Node:identifier Text: CAN_OK
|———Node:preproc_arg Text: (0)
|——Node:preproc_def Text: #define CAN_FAILINIT            (1)

|———Node:#define Text: #define
|———Node:identifier Text: CAN_FAILINIT
|———Node:preproc_arg Text: (1)
|——Node:preproc_def Text: #define CAN_FAILTX              (2)

|———Node:#define Text: #define
|———Node:identifier Text: CAN_FAILTX
|———Node:preproc_arg Text: (2)
|——Node:preproc_def Text: #define CAN_MSGAVAIL            (3)

|———Node:#define Text: #define
|———Node:identifier Text: CAN_MSGAVAIL
|———Node:preproc_arg Text: (3)
|——Node:preproc_def Text: #define CAN_NOMSG               (4)

|———Node:#define Text: #define
|———Node:identifier Text: CAN_NOMSG
|———Node:preproc_arg Text: (4)
|——Node:preproc_def Text: #define CAN_CTRLERROR           (5)

|———Node:#define Text: #define
|———Node:identifier Text: CAN_CTRLERROR
|———Node:preproc_arg Text: (5)
|——Node:preproc_def Text: #define CAN_GETTXBFTIMEOUT      (6)

|———Node:#define Text: #define
|———Node:identifier Text: CAN_GETTXBFTIMEOUT
|———Node:preproc_arg Text: (6)
|——Node:preproc_def Text: #define CAN_SENDMSGTIMEOUT      (7)

|———Node:#define Text: #define
|———Node:identifier Text: CAN_SENDMSGTIMEOUT
|———Node:preproc_arg Text: (7)
|——Node:preproc_def Text: #define CAN_FAIL                (0xff)

|———Node:#define Text: #define
|———Node:identifier Text: CAN_FAIL
|———Node:preproc_arg Text: (0xff)
|——Node:preproc_def Text: #define CAN_MAX_CHAR_IN_MESSAGE (8)

|———Node:#define Text: #define
|———Node:identifier Text: CAN_MAX_CHAR_IN_MESSAGE
|———Node:preproc_arg Text: (8)
|——Node:#endif Text: #endif
|—Node:comment
